<!--#include virtual="header.txt"-->
<link rel="stylesheet" type="text/css" href="openapi.css" />

  <h1>Slurm Rest API</h1>
    <div class="app-desc">API to access and control Slurm DB.</div>
    <div class="app-desc">More information: <a href="https://www.schedmd.com/">https://www.schedmd.com/</a></div>
    <div class="app-desc">Contact Info: <a href="sales@schedmd.com">sales@schedmd.com</a></div>
    <div class="app-desc">Version: dbv0.0.38</div>
    <div class="app-desc">BasePath:</div>
    <div class="license-info">Apache 2.0</div>
    <div class="license-url">https://www.apache.org/licenses/LICENSE-2.0.html</div>
  <h2>Access</h2>
    <ol>
      <li>APIKey KeyParamName:X-SLURM-USER-TOKEN KeyInQuery:false KeyInHeader:true</li>
      <li>APIKey KeyParamName:X-SLURM-USER-NAME KeyInQuery:false KeyInHeader:true</li>
    </ol>

  <h2><a name="__Methods">Methods</a></h2>
  [ Jump to <a href="#__Models">Models</a> ]

  <h3>Table of Contents </h3>
  <div class="method-summary"></div>
  <h4><a href="#Openapi">Openapi</a></h4>
  <ul>
  <li><a href="#openapiGet"><code><span class="http-method">get</span> /openapi</code></a></li>
  <li><a href="#openapiJsonGet"><code><span class="http-method">get</span> /openapi.json</code></a></li>
  <li><a href="#openapiV3Get"><code><span class="http-method">get</span> /openapi/v3</code></a></li>
  <li><a href="#openapiYamlGet"><code><span class="http-method">get</span> /openapi.yaml</code></a></li>
  </ul>
  <h4><a href="#Slurm">Slurm</a></h4>
  <ul>
  <li><a href="#slurmV0038CancelJob"><code><span class="http-method">delete</span> /slurm/v0.0.38/job/{job_id}</code></a></li>
  <li><a href="#slurmV0038Diag"><code><span class="http-method">get</span> /slurm/v0.0.38/diag</code></a></li>
  <li><a href="#slurmV0038GetJob"><code><span class="http-method">get</span> /slurm/v0.0.38/job/{job_id}</code></a></li>
  <li><a href="#slurmV0038GetJobs"><code><span class="http-method">get</span> /slurm/v0.0.38/jobs</code></a></li>
  <li><a href="#slurmV0038GetNode"><code><span class="http-method">get</span> /slurm/v0.0.38/node/{node_name}</code></a></li>
  <li><a href="#slurmV0038GetNodes"><code><span class="http-method">get</span> /slurm/v0.0.38/nodes</code></a></li>
  <li><a href="#slurmV0038GetPartition"><code><span class="http-method">get</span> /slurm/v0.0.38/partition/{partition_name}</code></a></li>
  <li><a href="#slurmV0038GetPartitions"><code><span class="http-method">get</span> /slurm/v0.0.38/partitions</code></a></li>
  <li><a href="#slurmV0038GetReservation"><code><span class="http-method">get</span> /slurm/v0.0.38/reservation/{reservation_name}</code></a></li>
  <li><a href="#slurmV0038GetReservations"><code><span class="http-method">get</span> /slurm/v0.0.38/reservations</code></a></li>
  <li><a href="#slurmV0038Ping"><code><span class="http-method">get</span> /slurm/v0.0.38/ping</code></a></li>
  <li><a href="#slurmV0038SlurmctldGetLicenses"><code><span class="http-method">get</span> /slurm/v0.0.38/licenses</code></a></li>
  <li><a href="#slurmV0038SubmitJob"><code><span class="http-method">post</span> /slurm/v0.0.38/job/submit</code></a></li>
  <li><a href="#slurmV0038UpdateJob"><code><span class="http-method">post</span> /slurm/v0.0.38/job/{job_id}</code></a></li>
  <li><a href="#slurmV0039CancelJob"><code><span class="http-method">delete</span> /slurm/v0.0.39/job/{job_id}</code></a></li>
  <li><a href="#slurmV0039DeleteNode"><code><span class="http-method">delete</span> /slurm/v0.0.39/node/{node_name}</code></a></li>
  <li><a href="#slurmV0039Diag"><code><span class="http-method">get</span> /slurm/v0.0.39/diag</code></a></li>
  <li><a href="#slurmV0039GetJob"><code><span class="http-method">get</span> /slurm/v0.0.39/job/{job_id}</code></a></li>
  <li><a href="#slurmV0039GetJobs"><code><span class="http-method">get</span> /slurm/v0.0.39/jobs</code></a></li>
  <li><a href="#slurmV0039GetNode"><code><span class="http-method">get</span> /slurm/v0.0.39/node/{node_name}</code></a></li>
  <li><a href="#slurmV0039GetNodes"><code><span class="http-method">get</span> /slurm/v0.0.39/nodes</code></a></li>
  <li><a href="#slurmV0039GetPartition"><code><span class="http-method">get</span> /slurm/v0.0.39/partition/{partition_name}</code></a></li>
  <li><a href="#slurmV0039GetPartitions"><code><span class="http-method">get</span> /slurm/v0.0.39/partitions</code></a></li>
  <li><a href="#slurmV0039GetReservation"><code><span class="http-method">get</span> /slurm/v0.0.39/reservation/{reservation_name}</code></a></li>
  <li><a href="#slurmV0039GetReservations"><code><span class="http-method">get</span> /slurm/v0.0.39/reservations</code></a></li>
  <li><a href="#slurmV0039Ping"><code><span class="http-method">get</span> /slurm/v0.0.39/ping</code></a></li>
  <li><a href="#slurmV0039SlurmctldGetLicenses"><code><span class="http-method">get</span> /slurm/v0.0.39/licenses</code></a></li>
  <li><a href="#slurmV0039SubmitJob"><code><span class="http-method">post</span> /slurm/v0.0.39/job/submit</code></a></li>
  <li><a href="#slurmV0039UpdateJob"><code><span class="http-method">post</span> /slurm/v0.0.39/job/{job_id}</code></a></li>
  <li><a href="#slurmV0039UpdateNode"><code><span class="http-method">post</span> /slurm/v0.0.39/node/{node_name}</code></a></li>
  <li><a href="#slurmctldCancelJob"><code><span class="http-method">delete</span> /slurm/v0.0.37/job/{job_id}</code></a></li>
  <li><a href="#slurmctldDiag"><code><span class="http-method">get</span> /slurm/v0.0.37/diag</code></a></li>
  <li><a href="#slurmctldGetJob"><code><span class="http-method">get</span> /slurm/v0.0.37/job/{job_id}</code></a></li>
  <li><a href="#slurmctldGetJobs"><code><span class="http-method">get</span> /slurm/v0.0.37/jobs</code></a></li>
  <li><a href="#slurmctldGetNode"><code><span class="http-method">get</span> /slurm/v0.0.37/node/{node_name}</code></a></li>
  <li><a href="#slurmctldGetNodes"><code><span class="http-method">get</span> /slurm/v0.0.37/nodes</code></a></li>
  <li><a href="#slurmctldGetPartition"><code><span class="http-method">get</span> /slurm/v0.0.37/partition/{partition_name}</code></a></li>
  <li><a href="#slurmctldGetPartitions"><code><span class="http-method">get</span> /slurm/v0.0.37/partitions</code></a></li>
  <li><a href="#slurmctldGetReservation"><code><span class="http-method">get</span> /slurm/v0.0.37/reservation/{reservation_name}</code></a></li>
  <li><a href="#slurmctldGetReservations"><code><span class="http-method">get</span> /slurm/v0.0.37/reservations</code></a></li>
  <li><a href="#slurmctldPing"><code><span class="http-method">get</span> /slurm/v0.0.37/ping</code></a></li>
  <li><a href="#slurmctldSubmitJob"><code><span class="http-method">post</span> /slurm/v0.0.37/job/submit</code></a></li>
  <li><a href="#slurmctldUpdateJob"><code><span class="http-method">post</span> /slurm/v0.0.37/job/{job_id}</code></a></li>
  <li><a href="#slurmdbV0038AddClusters"><code><span class="http-method">post</span> /slurmdb/v0.0.38/clusters</code></a></li>
  <li><a href="#slurmdbV0038AddWckeys"><code><span class="http-method">post</span> /slurmdb/v0.0.38/wckeys</code></a></li>
  <li><a href="#slurmdbV0038DeleteAccount"><code><span class="http-method">delete</span> /slurmdb/v0.0.38/account/{account_name}</code></a></li>
  <li><a href="#slurmdbV0038DeleteAssociation"><code><span class="http-method">delete</span> /slurmdb/v0.0.38/association</code></a></li>
  <li><a href="#slurmdbV0038DeleteAssociations"><code><span class="http-method">delete</span> /slurmdb/v0.0.38/associations</code></a></li>
  <li><a href="#slurmdbV0038DeleteCluster"><code><span class="http-method">delete</span> /slurmdb/v0.0.38/cluster/{cluster_name}</code></a></li>
  <li><a href="#slurmdbV0038DeleteQos"><code><span class="http-method">delete</span> /slurmdb/v0.0.38/qos/{qos_name}</code></a></li>
  <li><a href="#slurmdbV0038DeleteUser"><code><span class="http-method">delete</span> /slurmdb/v0.0.38/user/{user_name}</code></a></li>
  <li><a href="#slurmdbV0038DeleteWckey"><code><span class="http-method">delete</span> /slurmdb/v0.0.38/wckey/{wckey}</code></a></li>
  <li><a href="#slurmdbV0038Diag"><code><span class="http-method">get</span> /slurmdb/v0.0.38/diag</code></a></li>
  <li><a href="#slurmdbV0038GetAccount"><code><span class="http-method">get</span> /slurmdb/v0.0.38/account/{account_name}</code></a></li>
  <li><a href="#slurmdbV0038GetAccounts"><code><span class="http-method">get</span> /slurmdb/v0.0.38/accounts</code></a></li>
  <li><a href="#slurmdbV0038GetAssociation"><code><span class="http-method">get</span> /slurmdb/v0.0.38/association</code></a></li>
  <li><a href="#slurmdbV0038GetAssociations"><code><span class="http-method">get</span> /slurmdb/v0.0.38/associations</code></a></li>
  <li><a href="#slurmdbV0038GetCluster"><code><span class="http-method">get</span> /slurmdb/v0.0.38/cluster/{cluster_name}</code></a></li>
  <li><a href="#slurmdbV0038GetClusters"><code><span class="http-method">get</span> /slurmdb/v0.0.38/clusters</code></a></li>
  <li><a href="#slurmdbV0038GetConfig"><code><span class="http-method">get</span> /slurmdb/v0.0.38/config</code></a></li>
  <li><a href="#slurmdbV0038GetJob"><code><span class="http-method">get</span> /slurmdb/v0.0.38/job/{job_id}</code></a></li>
  <li><a href="#slurmdbV0038GetJobs"><code><span class="http-method">get</span> /slurmdb/v0.0.38/jobs</code></a></li>
  <li><a href="#slurmdbV0038GetQos"><code><span class="http-method">get</span> /slurmdb/v0.0.38/qos</code></a></li>
  <li><a href="#slurmdbV0038GetSingleQos"><code><span class="http-method">get</span> /slurmdb/v0.0.38/qos/{qos_name}</code></a></li>
  <li><a href="#slurmdbV0038GetTres"><code><span class="http-method">get</span> /slurmdb/v0.0.38/tres</code></a></li>
  <li><a href="#slurmdbV0038GetUser"><code><span class="http-method">get</span> /slurmdb/v0.0.38/user/{user_name}</code></a></li>
  <li><a href="#slurmdbV0038GetUsers"><code><span class="http-method">get</span> /slurmdb/v0.0.38/users</code></a></li>
  <li><a href="#slurmdbV0038GetWckey"><code><span class="http-method">get</span> /slurmdb/v0.0.38/wckey/{wckey}</code></a></li>
  <li><a href="#slurmdbV0038GetWckeys"><code><span class="http-method">get</span> /slurmdb/v0.0.38/wckeys</code></a></li>
  <li><a href="#slurmdbV0038SetConfig"><code><span class="http-method">post</span> /slurmdb/v0.0.38/config</code></a></li>
  <li><a href="#slurmdbV0038UpdateAccount"><code><span class="http-method">post</span> /slurmdb/v0.0.38/accounts</code></a></li>
  <li><a href="#slurmdbV0038UpdateAssociations"><code><span class="http-method">post</span> /slurmdb/v0.0.38/associations</code></a></li>
  <li><a href="#slurmdbV0038UpdateQos"><code><span class="http-method">post</span> /slurmdb/v0.0.38/qos</code></a></li>
  <li><a href="#slurmdbV0038UpdateTres"><code><span class="http-method">post</span> /slurmdb/v0.0.38/tres</code></a></li>
  <li><a href="#slurmdbV0038UpdateUsers"><code><span class="http-method">post</span> /slurmdb/v0.0.38/users</code></a></li>
  <li><a href="#slurmdbV0039AddClusters"><code><span class="http-method">post</span> /slurmdb/v0.0.39/clusters</code></a></li>
  <li><a href="#slurmdbV0039AddWckeys"><code><span class="http-method">post</span> /slurmdb/v0.0.39/wckeys</code></a></li>
  <li><a href="#slurmdbV0039DeleteAccount"><code><span class="http-method">delete</span> /slurmdb/v0.0.39/account/{account_name}</code></a></li>
  <li><a href="#slurmdbV0039DeleteAssociation"><code><span class="http-method">delete</span> /slurmdb/v0.0.39/association</code></a></li>
  <li><a href="#slurmdbV0039DeleteAssociations"><code><span class="http-method">delete</span> /slurmdb/v0.0.39/associations</code></a></li>
  <li><a href="#slurmdbV0039DeleteCluster"><code><span class="http-method">delete</span> /slurmdb/v0.0.39/cluster/{cluster_name}</code></a></li>
  <li><a href="#slurmdbV0039DeleteQos"><code><span class="http-method">delete</span> /slurmdb/v0.0.39/qos/{qos_name}</code></a></li>
  <li><a href="#slurmdbV0039DeleteUser"><code><span class="http-method">delete</span> /slurmdb/v0.0.39/user/{user_name}</code></a></li>
  <li><a href="#slurmdbV0039DeleteWckey"><code><span class="http-method">delete</span> /slurmdb/v0.0.39/wckey/{wckey}</code></a></li>
  <li><a href="#slurmdbV0039Diag"><code><span class="http-method">get</span> /slurmdb/v0.0.39/diag</code></a></li>
  <li><a href="#slurmdbV0039GetAccount"><code><span class="http-method">get</span> /slurmdb/v0.0.39/account/{account_name}</code></a></li>
  <li><a href="#slurmdbV0039GetAccounts"><code><span class="http-method">get</span> /slurmdb/v0.0.39/accounts</code></a></li>
  <li><a href="#slurmdbV0039GetAssociation"><code><span class="http-method">get</span> /slurmdb/v0.0.39/association</code></a></li>
  <li><a href="#slurmdbV0039GetAssociations"><code><span class="http-method">get</span> /slurmdb/v0.0.39/associations</code></a></li>
  <li><a href="#slurmdbV0039GetCluster"><code><span class="http-method">get</span> /slurmdb/v0.0.39/cluster/{cluster_name}</code></a></li>
  <li><a href="#slurmdbV0039GetClusters"><code><span class="http-method">get</span> /slurmdb/v0.0.39/clusters</code></a></li>
  <li><a href="#slurmdbV0039GetConfig"><code><span class="http-method">get</span> /slurmdb/v0.0.39/config</code></a></li>
  <li><a href="#slurmdbV0039GetJob"><code><span class="http-method">get</span> /slurmdb/v0.0.39/job/{job_id}</code></a></li>
  <li><a href="#slurmdbV0039GetJobs"><code><span class="http-method">get</span> /slurmdb/v0.0.39/jobs</code></a></li>
  <li><a href="#slurmdbV0039GetQos"><code><span class="http-method">get</span> /slurmdb/v0.0.39/qos</code></a></li>
  <li><a href="#slurmdbV0039GetSingleQos"><code><span class="http-method">get</span> /slurmdb/v0.0.39/qos/{qos_name}</code></a></li>
  <li><a href="#slurmdbV0039GetTres"><code><span class="http-method">get</span> /slurmdb/v0.0.39/tres</code></a></li>
  <li><a href="#slurmdbV0039GetUser"><code><span class="http-method">get</span> /slurmdb/v0.0.39/user/{user_name}</code></a></li>
  <li><a href="#slurmdbV0039GetUsers"><code><span class="http-method">get</span> /slurmdb/v0.0.39/users</code></a></li>
  <li><a href="#slurmdbV0039GetWckey"><code><span class="http-method">get</span> /slurmdb/v0.0.39/wckey/{wckey}</code></a></li>
  <li><a href="#slurmdbV0039GetWckeys"><code><span class="http-method">get</span> /slurmdb/v0.0.39/wckeys</code></a></li>
  <li><a href="#slurmdbV0039SetConfig"><code><span class="http-method">post</span> /slurmdb/v0.0.39/config</code></a></li>
  <li><a href="#slurmdbV0039UpdateAccounts"><code><span class="http-method">post</span> /slurmdb/v0.0.39/accounts</code></a></li>
  <li><a href="#slurmdbV0039UpdateAssociations"><code><span class="http-method">post</span> /slurmdb/v0.0.39/associations</code></a></li>
  <li><a href="#slurmdbV0039UpdateQos"><code><span class="http-method">post</span> /slurmdb/v0.0.39/qos</code></a></li>
  <li><a href="#slurmdbV0039UpdateTres"><code><span class="http-method">post</span> /slurmdb/v0.0.39/tres</code></a></li>
  <li><a href="#slurmdbV0039UpdateUsers"><code><span class="http-method">post</span> /slurmdb/v0.0.39/users</code></a></li>
  <li><a href="#slurmdbdAddClusters"><code><span class="http-method">post</span> /slurmdb/v0.0.37/clusters</code></a></li>
  <li><a href="#slurmdbdAddWckeys"><code><span class="http-method">post</span> /slurmdb/v0.0.37/wckeys</code></a></li>
  <li><a href="#slurmdbdDeleteAccount"><code><span class="http-method">delete</span> /slurmdb/v0.0.37/account/{account_name}</code></a></li>
  <li><a href="#slurmdbdDeleteAssociation"><code><span class="http-method">delete</span> /slurmdb/v0.0.37/association</code></a></li>
  <li><a href="#slurmdbdDeleteCluster"><code><span class="http-method">delete</span> /slurmdb/v0.0.37/cluster/{cluster_name}</code></a></li>
  <li><a href="#slurmdbdDeleteQos"><code><span class="http-method">delete</span> /slurmdb/v0.0.37/qos/{qos_name}</code></a></li>
  <li><a href="#slurmdbdDeleteUser"><code><span class="http-method">delete</span> /slurmdb/v0.0.37/user/{user_name}</code></a></li>
  <li><a href="#slurmdbdDeleteWckey"><code><span class="http-method">delete</span> /slurmdb/v0.0.37/wckey/{wckey}</code></a></li>
  <li><a href="#slurmdbdDiag"><code><span class="http-method">get</span> /slurmdb/v0.0.37/diag</code></a></li>
  <li><a href="#slurmdbdGetAccount"><code><span class="http-method">get</span> /slurmdb/v0.0.37/account/{account_name}</code></a></li>
  <li><a href="#slurmdbdGetAccounts"><code><span class="http-method">get</span> /slurmdb/v0.0.37/accounts</code></a></li>
  <li><a href="#slurmdbdGetAssociation"><code><span class="http-method">get</span> /slurmdb/v0.0.37/association</code></a></li>
  <li><a href="#slurmdbdGetAssociations"><code><span class="http-method">get</span> /slurmdb/v0.0.37/associations</code></a></li>
  <li><a href="#slurmdbdGetCluster"><code><span class="http-method">get</span> /slurmdb/v0.0.37/cluster/{cluster_name}</code></a></li>
  <li><a href="#slurmdbdGetClusters"><code><span class="http-method">get</span> /slurmdb/v0.0.37/clusters</code></a></li>
  <li><a href="#slurmdbdGetDbConfig"><code><span class="http-method">get</span> /slurmdb/v0.0.37/config</code></a></li>
  <li><a href="#slurmdbdGetJob"><code><span class="http-method">get</span> /slurmdb/v0.0.37/job/{job_id}</code></a></li>
  <li><a href="#slurmdbdGetJobs"><code><span class="http-method">get</span> /slurmdb/v0.0.37/jobs</code></a></li>
  <li><a href="#slurmdbdGetQos"><code><span class="http-method">get</span> /slurmdb/v0.0.37/qos</code></a></li>
  <li><a href="#slurmdbdGetSingleQos"><code><span class="http-method">get</span> /slurmdb/v0.0.37/qos/{qos_name}</code></a></li>
  <li><a href="#slurmdbdGetTres"><code><span class="http-method">get</span> /slurmdb/v0.0.37/tres</code></a></li>
  <li><a href="#slurmdbdGetUser"><code><span class="http-method">get</span> /slurmdb/v0.0.37/user/{user_name}</code></a></li>
  <li><a href="#slurmdbdGetUsers"><code><span class="http-method">get</span> /slurmdb/v0.0.37/users</code></a></li>
  <li><a href="#slurmdbdGetWckey"><code><span class="http-method">get</span> /slurmdb/v0.0.37/wckey/{wckey}</code></a></li>
  <li><a href="#slurmdbdGetWckeys"><code><span class="http-method">get</span> /slurmdb/v0.0.37/wckeys</code></a></li>
  <li><a href="#slurmdbdSetDbConfig"><code><span class="http-method">post</span> /slurmdb/v0.0.37/config</code></a></li>
  <li><a href="#slurmdbdUpdateAccount"><code><span class="http-method">post</span> /slurmdb/v0.0.37/accounts</code></a></li>
  <li><a href="#slurmdbdUpdateAssociations"><code><span class="http-method">post</span> /slurmdb/v0.0.37/associations</code></a></li>
  <li><a href="#slurmdbdUpdateTres"><code><span class="http-method">post</span> /slurmdb/v0.0.37/tres</code></a></li>
  <li><a href="#slurmdbdUpdateUsers"><code><span class="http-method">post</span> /slurmdb/v0.0.37/users</code></a></li>
  </ul>

  <h1><a name="Openapi">Openapi</a></h1>
  <div class="method"><a name="openapiGet"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /openapi</code></pre></div>
    <div class="method-summary">Retrieve OpenAPI Specification (<span class="nickname">openapiGet</span>)</div>
    <div class="method-notes"></div>








    <!--Todo: process Response Object and its headers, schema, examples -->



    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    OpenAPI Specification
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="openapiJsonGet"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /openapi.json</code></pre></div>
    <div class="method-summary">Retrieve OpenAPI Specification (<span class="nickname">openapiJsonGet</span>)</div>
    <div class="method-notes"></div>








    <!--Todo: process Response Object and its headers, schema, examples -->



    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    OpenAPI Specification
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="openapiV3Get"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /openapi/v3</code></pre></div>
    <div class="method-summary">Retrieve OpenAPI Specification (<span class="nickname">openapiV3Get</span>)</div>
    <div class="method-notes"></div>








    <!--Todo: process Response Object and its headers, schema, examples -->



    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    OpenAPI Specification
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="openapiYamlGet"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /openapi.yaml</code></pre></div>
    <div class="method-summary">Retrieve OpenAPI Specification (<span class="nickname">openapiYamlGet</span>)</div>
    <div class="method-notes"></div>








    <!--Todo: process Response Object and its headers, schema, examples -->



    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    OpenAPI Specification
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <h1><a name="Slurm">Slurm</a></h1>
  <div class="method"><a name="slurmV0038CancelJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.38/job/{job_id}</code></pre></div>
    <div class="method-summary">cancel or signal job (<span class="nickname">slurmV0038CancelJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Job ID default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">signal (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; signal to send to job default: null </div>
    </div>  <!-- field-items -->



    <!--Todo: process Response Object and its headers, schema, examples -->



    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job cancelled or sent signal
        <a href="#"></a>
    <h4 class="field-label">500</h4>
    job not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038Diag"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/diag</code></pre></div>
    <div class="method-summary">get diagnostics (<span class="nickname">slurmV0038Diag</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_diag">v0.0.38_diag</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ],
  "statistics" : {
    "schedule_cycle_per_minute" : 6,
    "req_time_start" : 5,
    "jobs_running" : 8,
    "bf_cycle_max" : 6,
    "bf_last_backfilled_jobs" : 3,
    "rpcs_by_message_type" : [ {
      "average_time" : 7,
      "type_id" : 4,
      "count" : 8,
      "message_type" : "message_type",
      "total_time" : 3
    }, {
      "average_time" : 7,
      "type_id" : 4,
      "count" : 8,
      "message_type" : "message_type",
      "total_time" : 3
    } ],
    "bf_last_depth" : 6,
    "bf_backfilled_het_jobs" : 6,
    "bf_backfilled_jobs" : 6,
    "rpcs_by_user" : [ {
      "average_time" : 5,
      "user_id" : 3,
      "count" : 7,
      "total_time" : 3,
      "user" : "user"
    }, {
      "average_time" : 5,
      "user_id" : 3,
      "count" : 7,
      "total_time" : 3,
      "user" : "user"
    } ],
    "bf_table_size" : 7,
    "bf_cycle_mean" : 2,
    "job_states_ts" : 9,
    "bf_queue_len" : 7,
    "jobs_started" : 4,
    "schedule_cycle_max" : 4,
    "server_thread_count" : 5,
    "dbd_agent_queue_size" : 3,
    "bf_table_size_mean" : 6,
    "jobs_pending" : 6,
    "agent_count" : 7,
    "bf_cycle_last" : 3,
    "parts_packed" : 6,
    "agent_thread_count" : 9,
    "jobs_completed" : 5,
    "bf_depth_mean" : 6,
    "bf_active" : true,
    "bf_depth_mean_try" : 3,
    "schedule_cycle_mean" : 1,
    "agent_queue_size" : 2,
    "jobs_failed" : 9,
    "gettimeofday_latency" : 2,
    "bf_last_depth_try" : 5,
    "req_time" : 1,
    "bf_cycle_counter" : 1,
    "schedule_queue_length" : 7,
    "bf_queue_len_mean" : 0,
    "schedule_cycle_total" : 1,
    "bf_when_last_cycle" : 0,
    "schedule_cycle_last" : 7,
    "jobs_canceled" : 9,
    "jobs_submitted" : 1,
    "schedule_cycle_mean_depth" : 1
  }
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    diagnostic results
        <a href="#v0.0.38_diag">v0.0.38_diag</a>
    <h4 class="field-label">default</h4>
    unable to request ping test
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038GetJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/job/{job_id}</code></pre></div>
    <div class="method-summary">get job info (<span class="nickname">slurmV0038GetJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm JobID default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_jobs_response">v0.0.38_jobs_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : 3,
    "memory_per_tres" : "memory_per_tres",
    "qos" : "qos",
    "resize_time" : 0,
    "eligible_time" : 2,
    "cpus_per_tres" : "cpus_per_tres",
    "tasks" : 6,
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_core" : 6,
    "accrue_time" : 0,
    "dependency" : "dependency",
    "profile" : [ "profile", "profile" ],
    "priority" : 7,
    "tres_per_job" : "tres_per_job",
    "derived_exit_code" : 3,
    "core_spec" : "core_spec",
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 5,
    "exit_code" : 7,
    "federation_origin" : "federation_origin",
    "shared" : "shared",
    "tasks_per_board" : 9,
    "user_name" : "user_name",
    "flags" : [ "flags", "flags" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : "cores_per_socket",
    "job_state" : "job_state",
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : 6,
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : 7,
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : 6,
    "cpu_frequency_minimum" : "cpu_frequency_minimum",
    "node_count" : 3,
    "deadline" : 7,
    "memory_per_node" : 6,
    "state_reason" : "state_reason",
    "het_job_offset" : 2,
    "end_time" : 4,
    "sockets_per_board" : 6,
    "nice" : 9,
    "last_sched_evaluation" : 4,
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : 5,
    "het_job_id" : 1,
    "sockets_per_node" : 0,
    "time_limit" : 3,
    "minimum_cpus_per_node" : 5,
    "tasks_per_socket" : 8,
    "batch_host" : "batch_host",
    "max_cpus" : 5,
    "cpu_frequency_maximum" : "cpu_frequency_maximum",
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "show_flags", "show_flags" ],
    "array_task_id" : 1,
    "minimum_tmp_disk_per_node" : 6,
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 8,
    "wckey" : "wckey",
    "max_nodes" : 9,
    "batch_flag" : true,
    "start_time" : 4,
    "name" : "name",
    "preempt_time" : 3,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ {
        "nodename" : "nodename",
        "memory" : 7,
        "cpus" : 1,
        "sockets" : {
          "cores" : "{}"
        }
      }, {
        "nodename" : "nodename",
        "memory" : 7,
        "cpus" : 1,
        "sockets" : {
          "cores" : "{}"
        }
      } ],
      "allocated_cpus" : 1,
      "allocated_hosts" : 6
    },
    "billable_tres" : 2.3021358869347655,
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : "cpus_per_task",
    "batch_features" : "batch_features",
    "thread_spec" : "thread_spec",
    "cpu_frequency_governor" : "cpu_frequency_governor",
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "restart_cnt" : 7,
    "resv_name" : "resv_name",
    "delay_boot" : 9,
    "reboot" : true,
    "cpus" : 6,
    "standard_output" : "standard_output",
    "pre_sus_time" : 3,
    "suspend_time" : 7,
    "association_id" : 5,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "nodes" : "nodes",
    "group_id" : 1,
    "job_id" : 1,
    "comment" : "comment",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : 3,
    "memory_per_tres" : "memory_per_tres",
    "qos" : "qos",
    "resize_time" : 0,
    "eligible_time" : 2,
    "cpus_per_tres" : "cpus_per_tres",
    "tasks" : 6,
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_core" : 6,
    "accrue_time" : 0,
    "dependency" : "dependency",
    "profile" : [ "profile", "profile" ],
    "priority" : 7,
    "tres_per_job" : "tres_per_job",
    "derived_exit_code" : 3,
    "core_spec" : "core_spec",
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 5,
    "exit_code" : 7,
    "federation_origin" : "federation_origin",
    "shared" : "shared",
    "tasks_per_board" : 9,
    "user_name" : "user_name",
    "flags" : [ "flags", "flags" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : "cores_per_socket",
    "job_state" : "job_state",
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : 6,
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : 7,
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : 6,
    "cpu_frequency_minimum" : "cpu_frequency_minimum",
    "node_count" : 3,
    "deadline" : 7,
    "memory_per_node" : 6,
    "state_reason" : "state_reason",
    "het_job_offset" : 2,
    "end_time" : 4,
    "sockets_per_board" : 6,
    "nice" : 9,
    "last_sched_evaluation" : 4,
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : 5,
    "het_job_id" : 1,
    "sockets_per_node" : 0,
    "time_limit" : 3,
    "minimum_cpus_per_node" : 5,
    "tasks_per_socket" : 8,
    "batch_host" : "batch_host",
    "max_cpus" : 5,
    "cpu_frequency_maximum" : "cpu_frequency_maximum",
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "show_flags", "show_flags" ],
    "array_task_id" : 1,
    "minimum_tmp_disk_per_node" : 6,
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 8,
    "wckey" : "wckey",
    "max_nodes" : 9,
    "batch_flag" : true,
    "start_time" : 4,
    "name" : "name",
    "preempt_time" : 3,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ {
        "nodename" : "nodename",
        "memory" : 7,
        "cpus" : 1,
        "sockets" : {
          "cores" : "{}"
        }
      }, {
        "nodename" : "nodename",
        "memory" : 7,
        "cpus" : 1,
        "sockets" : {
          "cores" : "{}"
        }
      } ],
      "allocated_cpus" : 1,
      "allocated_hosts" : 6
    },
    "billable_tres" : 2.3021358869347655,
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : "cpus_per_task",
    "batch_features" : "batch_features",
    "thread_spec" : "thread_spec",
    "cpu_frequency_governor" : "cpu_frequency_governor",
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "restart_cnt" : 7,
    "resv_name" : "resv_name",
    "delay_boot" : 9,
    "reboot" : true,
    "cpus" : 6,
    "standard_output" : "standard_output",
    "pre_sus_time" : 3,
    "suspend_time" : 7,
    "association_id" : 5,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "nodes" : "nodes",
    "group_id" : 1,
    "job_id" : 1,
    "comment" : "comment",
    "account" : "account"
  } ],
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) information
        <a href="#v0.0.38_jobs_response">v0.0.38_jobs_response</a>
    <h4 class="field-label">default</h4>
    job matching JobId not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038GetJobs"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/jobs</code></pre></div>
    <div class="method-summary">get list of jobs (<span class="nickname">slurmV0038GetJobs</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_jobs_response">v0.0.38_jobs_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : 3,
    "memory_per_tres" : "memory_per_tres",
    "qos" : "qos",
    "resize_time" : 0,
    "eligible_time" : 2,
    "cpus_per_tres" : "cpus_per_tres",
    "tasks" : 6,
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_core" : 6,
    "accrue_time" : 0,
    "dependency" : "dependency",
    "profile" : [ "profile", "profile" ],
    "priority" : 7,
    "tres_per_job" : "tres_per_job",
    "derived_exit_code" : 3,
    "core_spec" : "core_spec",
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 5,
    "exit_code" : 7,
    "federation_origin" : "federation_origin",
    "shared" : "shared",
    "tasks_per_board" : 9,
    "user_name" : "user_name",
    "flags" : [ "flags", "flags" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : "cores_per_socket",
    "job_state" : "job_state",
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : 6,
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : 7,
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : 6,
    "cpu_frequency_minimum" : "cpu_frequency_minimum",
    "node_count" : 3,
    "deadline" : 7,
    "memory_per_node" : 6,
    "state_reason" : "state_reason",
    "het_job_offset" : 2,
    "end_time" : 4,
    "sockets_per_board" : 6,
    "nice" : 9,
    "last_sched_evaluation" : 4,
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : 5,
    "het_job_id" : 1,
    "sockets_per_node" : 0,
    "time_limit" : 3,
    "minimum_cpus_per_node" : 5,
    "tasks_per_socket" : 8,
    "batch_host" : "batch_host",
    "max_cpus" : 5,
    "cpu_frequency_maximum" : "cpu_frequency_maximum",
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "show_flags", "show_flags" ],
    "array_task_id" : 1,
    "minimum_tmp_disk_per_node" : 6,
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 8,
    "wckey" : "wckey",
    "max_nodes" : 9,
    "batch_flag" : true,
    "start_time" : 4,
    "name" : "name",
    "preempt_time" : 3,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ {
        "nodename" : "nodename",
        "memory" : 7,
        "cpus" : 1,
        "sockets" : {
          "cores" : "{}"
        }
      }, {
        "nodename" : "nodename",
        "memory" : 7,
        "cpus" : 1,
        "sockets" : {
          "cores" : "{}"
        }
      } ],
      "allocated_cpus" : 1,
      "allocated_hosts" : 6
    },
    "billable_tres" : 2.3021358869347655,
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : "cpus_per_task",
    "batch_features" : "batch_features",
    "thread_spec" : "thread_spec",
    "cpu_frequency_governor" : "cpu_frequency_governor",
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "restart_cnt" : 7,
    "resv_name" : "resv_name",
    "delay_boot" : 9,
    "reboot" : true,
    "cpus" : 6,
    "standard_output" : "standard_output",
    "pre_sus_time" : 3,
    "suspend_time" : 7,
    "association_id" : 5,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "nodes" : "nodes",
    "group_id" : 1,
    "job_id" : 1,
    "comment" : "comment",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : 3,
    "memory_per_tres" : "memory_per_tres",
    "qos" : "qos",
    "resize_time" : 0,
    "eligible_time" : 2,
    "cpus_per_tres" : "cpus_per_tres",
    "tasks" : 6,
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_core" : 6,
    "accrue_time" : 0,
    "dependency" : "dependency",
    "profile" : [ "profile", "profile" ],
    "priority" : 7,
    "tres_per_job" : "tres_per_job",
    "derived_exit_code" : 3,
    "core_spec" : "core_spec",
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 5,
    "exit_code" : 7,
    "federation_origin" : "federation_origin",
    "shared" : "shared",
    "tasks_per_board" : 9,
    "user_name" : "user_name",
    "flags" : [ "flags", "flags" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : "cores_per_socket",
    "job_state" : "job_state",
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : 6,
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : 7,
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : 6,
    "cpu_frequency_minimum" : "cpu_frequency_minimum",
    "node_count" : 3,
    "deadline" : 7,
    "memory_per_node" : 6,
    "state_reason" : "state_reason",
    "het_job_offset" : 2,
    "end_time" : 4,
    "sockets_per_board" : 6,
    "nice" : 9,
    "last_sched_evaluation" : 4,
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : 5,
    "het_job_id" : 1,
    "sockets_per_node" : 0,
    "time_limit" : 3,
    "minimum_cpus_per_node" : 5,
    "tasks_per_socket" : 8,
    "batch_host" : "batch_host",
    "max_cpus" : 5,
    "cpu_frequency_maximum" : "cpu_frequency_maximum",
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "show_flags", "show_flags" ],
    "array_task_id" : 1,
    "minimum_tmp_disk_per_node" : 6,
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 8,
    "wckey" : "wckey",
    "max_nodes" : 9,
    "batch_flag" : true,
    "start_time" : 4,
    "name" : "name",
    "preempt_time" : 3,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ {
        "nodename" : "nodename",
        "memory" : 7,
        "cpus" : 1,
        "sockets" : {
          "cores" : "{}"
        }
      }, {
        "nodename" : "nodename",
        "memory" : 7,
        "cpus" : 1,
        "sockets" : {
          "cores" : "{}"
        }
      } ],
      "allocated_cpus" : 1,
      "allocated_hosts" : 6
    },
    "billable_tres" : 2.3021358869347655,
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : "cpus_per_task",
    "batch_features" : "batch_features",
    "thread_spec" : "thread_spec",
    "cpu_frequency_governor" : "cpu_frequency_governor",
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "restart_cnt" : 7,
    "resv_name" : "resv_name",
    "delay_boot" : 9,
    "reboot" : true,
    "cpus" : 6,
    "standard_output" : "standard_output",
    "pre_sus_time" : 3,
    "suspend_time" : 7,
    "association_id" : 5,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "nodes" : "nodes",
    "group_id" : 1,
    "job_id" : 1,
    "comment" : "comment",
    "account" : "account"
  } ],
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) information
        <a href="#v0.0.38_jobs_response">v0.0.38_jobs_response</a>
    <h4 class="field-label">default</h4>
    job not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038GetNode"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/node/{node_name}</code></pre></div>
    <div class="method-summary">get node info (<span class="nickname">slurmV0038GetNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Node Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_nodes_response">v0.0.38_nodes_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "boards" : 0,
    "alloc_cpus" : 7,
    "active_features" : "active_features",
    "reason_set_by_user" : "reason_set_by_user",
    "slurmd_start_time" : 4,
    "features" : "features",
    "hostname" : "hostname",
    "cores" : 1,
    "slurmd_version" : "slurmd_version",
    "reason_changed_at" : 2,
    "operating_system" : "operating_system",
    "next_state_after_reboot_flags" : [ "next_state_after_reboot_flags", "next_state_after_reboot_flags" ],
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : "state",
    "sockets" : 7,
    "architecture" : "architecture",
    "owner" : "owner",
    "partitions" : [ "partitions", "partitions" ],
    "state_flags" : [ "state_flags", "state_flags" ],
    "address" : "address",
    "cpus" : 7,
    "free_memory" : 2,
    "tres_weighted" : 6.84685269835264,
    "gres" : "gres",
    "gres_drained" : "gres_drained",
    "threads" : 1,
    "weight" : 1,
    "boot_time" : 6,
    "gres_used" : "gres_used",
    "alloc_memory" : 4,
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 9,
    "name" : "name",
    "next_state_after_reboot" : "next_state_after_reboot",
    "temporary_disk" : 1,
    "tres_used" : "tres_used",
    "idle_cpus" : 1,
    "cpu_load" : 5
  }, {
    "reason" : "reason",
    "boards" : 0,
    "alloc_cpus" : 7,
    "active_features" : "active_features",
    "reason_set_by_user" : "reason_set_by_user",
    "slurmd_start_time" : 4,
    "features" : "features",
    "hostname" : "hostname",
    "cores" : 1,
    "slurmd_version" : "slurmd_version",
    "reason_changed_at" : 2,
    "operating_system" : "operating_system",
    "next_state_after_reboot_flags" : [ "next_state_after_reboot_flags", "next_state_after_reboot_flags" ],
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : "state",
    "sockets" : 7,
    "architecture" : "architecture",
    "owner" : "owner",
    "partitions" : [ "partitions", "partitions" ],
    "state_flags" : [ "state_flags", "state_flags" ],
    "address" : "address",
    "cpus" : 7,
    "free_memory" : 2,
    "tres_weighted" : 6.84685269835264,
    "gres" : "gres",
    "gres_drained" : "gres_drained",
    "threads" : 1,
    "weight" : 1,
    "boot_time" : 6,
    "gres_used" : "gres_used",
    "alloc_memory" : 4,
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 9,
    "name" : "name",
    "next_state_after_reboot" : "next_state_after_reboot",
    "temporary_disk" : 1,
    "tres_used" : "tres_used",
    "idle_cpus" : 1,
    "cpu_load" : 5
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node information
        <a href="#v0.0.38_nodes_response">v0.0.38_nodes_response</a>
    <h4 class="field-label">default</h4>
    node not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038GetNodes"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/nodes</code></pre></div>
    <div class="method-summary">get all node info (<span class="nickname">slurmV0038GetNodes</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_nodes_response">v0.0.38_nodes_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "boards" : 0,
    "alloc_cpus" : 7,
    "active_features" : "active_features",
    "reason_set_by_user" : "reason_set_by_user",
    "slurmd_start_time" : 4,
    "features" : "features",
    "hostname" : "hostname",
    "cores" : 1,
    "slurmd_version" : "slurmd_version",
    "reason_changed_at" : 2,
    "operating_system" : "operating_system",
    "next_state_after_reboot_flags" : [ "next_state_after_reboot_flags", "next_state_after_reboot_flags" ],
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : "state",
    "sockets" : 7,
    "architecture" : "architecture",
    "owner" : "owner",
    "partitions" : [ "partitions", "partitions" ],
    "state_flags" : [ "state_flags", "state_flags" ],
    "address" : "address",
    "cpus" : 7,
    "free_memory" : 2,
    "tres_weighted" : 6.84685269835264,
    "gres" : "gres",
    "gres_drained" : "gres_drained",
    "threads" : 1,
    "weight" : 1,
    "boot_time" : 6,
    "gres_used" : "gres_used",
    "alloc_memory" : 4,
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 9,
    "name" : "name",
    "next_state_after_reboot" : "next_state_after_reboot",
    "temporary_disk" : 1,
    "tres_used" : "tres_used",
    "idle_cpus" : 1,
    "cpu_load" : 5
  }, {
    "reason" : "reason",
    "boards" : 0,
    "alloc_cpus" : 7,
    "active_features" : "active_features",
    "reason_set_by_user" : "reason_set_by_user",
    "slurmd_start_time" : 4,
    "features" : "features",
    "hostname" : "hostname",
    "cores" : 1,
    "slurmd_version" : "slurmd_version",
    "reason_changed_at" : 2,
    "operating_system" : "operating_system",
    "next_state_after_reboot_flags" : [ "next_state_after_reboot_flags", "next_state_after_reboot_flags" ],
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : "state",
    "sockets" : 7,
    "architecture" : "architecture",
    "owner" : "owner",
    "partitions" : [ "partitions", "partitions" ],
    "state_flags" : [ "state_flags", "state_flags" ],
    "address" : "address",
    "cpus" : 7,
    "free_memory" : 2,
    "tres_weighted" : 6.84685269835264,
    "gres" : "gres",
    "gres_drained" : "gres_drained",
    "threads" : 1,
    "weight" : 1,
    "boot_time" : 6,
    "gres_used" : "gres_used",
    "alloc_memory" : 4,
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 9,
    "name" : "name",
    "next_state_after_reboot" : "next_state_after_reboot",
    "temporary_disk" : 1,
    "tres_used" : "tres_used",
    "idle_cpus" : 1,
    "cpu_load" : 5
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node information
        <a href="#v0.0.38_nodes_response">v0.0.38_nodes_response</a>
    <h4 class="field-label">default</h4>
    no nodes in cluster
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038GetPartition"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/partition/{partition_name}</code></pre></div>
    <div class="method-summary">get partition info (<span class="nickname">slurmV0038GetPartition</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">partition_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Partition Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_partitions_response">v0.0.38_partitions_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "max_time_limit" : 7,
    "maximum_cpus_per_node" : 5,
    "over_time_limit" : 3,
    "denied_accounts" : "denied_accounts",
    "flags" : [ "flags", "flags" ],
    "maximum_memory_per_node" : 5,
    "total_cpus" : 7,
    "billing_weights" : "billing_weights",
    "default_memory_per_cpu" : 0,
    "default_memory_per_node" : 1,
    "allowed_qos" : "allowed_qos",
    "min_nodes_per_job" : 9,
    "qos" : "qos",
    "default_time_limit" : 6,
    "denied_qos" : "denied_qos",
    "priority_job_factor" : 2,
    "tres" : "tres",
    "allowed_allocation_nodes" : "allowed_allocation_nodes",
    "state" : "state",
    "preemption_grace_time" : 1,
    "allowed_accounts" : "allowed_accounts",
    "alternative" : "alternative",
    "preemption_mode" : [ "preemption_mode", "preemption_mode" ],
    "nodes" : "nodes",
    "name" : "name",
    "allowed_groups" : "allowed_groups",
    "total_nodes" : 1,
    "maximum_nodes_per_job" : 2,
    "priority_tier" : 4,
    "maximum_memory_per_cpu" : 1
  }, {
    "max_time_limit" : 7,
    "maximum_cpus_per_node" : 5,
    "over_time_limit" : 3,
    "denied_accounts" : "denied_accounts",
    "flags" : [ "flags", "flags" ],
    "maximum_memory_per_node" : 5,
    "total_cpus" : 7,
    "billing_weights" : "billing_weights",
    "default_memory_per_cpu" : 0,
    "default_memory_per_node" : 1,
    "allowed_qos" : "allowed_qos",
    "min_nodes_per_job" : 9,
    "qos" : "qos",
    "default_time_limit" : 6,
    "denied_qos" : "denied_qos",
    "priority_job_factor" : 2,
    "tres" : "tres",
    "allowed_allocation_nodes" : "allowed_allocation_nodes",
    "state" : "state",
    "preemption_grace_time" : 1,
    "allowed_accounts" : "allowed_accounts",
    "alternative" : "alternative",
    "preemption_mode" : [ "preemption_mode", "preemption_mode" ],
    "nodes" : "nodes",
    "name" : "name",
    "allowed_groups" : "allowed_groups",
    "total_nodes" : 1,
    "maximum_nodes_per_job" : 2,
    "priority_tier" : 4,
    "maximum_memory_per_cpu" : 1
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    partition information
        <a href="#v0.0.38_partitions_response">v0.0.38_partitions_response</a>
    <h4 class="field-label">default</h4>
    no partitions found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038GetPartitions"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/partitions</code></pre></div>
    <div class="method-summary">get all partition info (<span class="nickname">slurmV0038GetPartitions</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_partitions_response">v0.0.38_partitions_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "max_time_limit" : 7,
    "maximum_cpus_per_node" : 5,
    "over_time_limit" : 3,
    "denied_accounts" : "denied_accounts",
    "flags" : [ "flags", "flags" ],
    "maximum_memory_per_node" : 5,
    "total_cpus" : 7,
    "billing_weights" : "billing_weights",
    "default_memory_per_cpu" : 0,
    "default_memory_per_node" : 1,
    "allowed_qos" : "allowed_qos",
    "min_nodes_per_job" : 9,
    "qos" : "qos",
    "default_time_limit" : 6,
    "denied_qos" : "denied_qos",
    "priority_job_factor" : 2,
    "tres" : "tres",
    "allowed_allocation_nodes" : "allowed_allocation_nodes",
    "state" : "state",
    "preemption_grace_time" : 1,
    "allowed_accounts" : "allowed_accounts",
    "alternative" : "alternative",
    "preemption_mode" : [ "preemption_mode", "preemption_mode" ],
    "nodes" : "nodes",
    "name" : "name",
    "allowed_groups" : "allowed_groups",
    "total_nodes" : 1,
    "maximum_nodes_per_job" : 2,
    "priority_tier" : 4,
    "maximum_memory_per_cpu" : 1
  }, {
    "max_time_limit" : 7,
    "maximum_cpus_per_node" : 5,
    "over_time_limit" : 3,
    "denied_accounts" : "denied_accounts",
    "flags" : [ "flags", "flags" ],
    "maximum_memory_per_node" : 5,
    "total_cpus" : 7,
    "billing_weights" : "billing_weights",
    "default_memory_per_cpu" : 0,
    "default_memory_per_node" : 1,
    "allowed_qos" : "allowed_qos",
    "min_nodes_per_job" : 9,
    "qos" : "qos",
    "default_time_limit" : 6,
    "denied_qos" : "denied_qos",
    "priority_job_factor" : 2,
    "tres" : "tres",
    "allowed_allocation_nodes" : "allowed_allocation_nodes",
    "state" : "state",
    "preemption_grace_time" : 1,
    "allowed_accounts" : "allowed_accounts",
    "alternative" : "alternative",
    "preemption_mode" : [ "preemption_mode", "preemption_mode" ],
    "nodes" : "nodes",
    "name" : "name",
    "allowed_groups" : "allowed_groups",
    "total_nodes" : 1,
    "maximum_nodes_per_job" : 2,
    "priority_tier" : 4,
    "maximum_memory_per_cpu" : 1
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    partition information
        <a href="#v0.0.38_partitions_response">v0.0.38_partitions_response</a>
    <h4 class="field-label">default</h4>
    no partitions found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038GetReservation"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/reservation/{reservation_name}</code></pre></div>
    <div class="method-summary">get reservation info (<span class="nickname">slurmV0038GetReservation</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">reservation_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Reservation Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if no reservation (not limited to reservation in URL) changed since update_time. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_reservations_response">v0.0.38_reservations_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "core_spec_cnt" : 6,
    "end_time" : 1,
    "flags" : [ "flags", "flags" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 5,
    "features" : "features",
    "start_time" : 7,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : 9,
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : 2
    },
    "core_count" : 0
  }, {
    "core_spec_cnt" : 6,
    "end_time" : 1,
    "flags" : [ "flags", "flags" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 5,
    "features" : "features",
    "start_time" : 7,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : 9,
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : 2
    },
    "core_count" : 0
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation information
        <a href="#v0.0.38_reservations_response">v0.0.38_reservations_response</a>
    <h4 class="field-label">default</h4>
    no reservations found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038GetReservations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/reservations</code></pre></div>
    <div class="method-summary">get all reservation info (<span class="nickname">slurmV0038GetReservations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_reservations_response">v0.0.38_reservations_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "core_spec_cnt" : 6,
    "end_time" : 1,
    "flags" : [ "flags", "flags" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 5,
    "features" : "features",
    "start_time" : 7,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : 9,
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : 2
    },
    "core_count" : 0
  }, {
    "core_spec_cnt" : 6,
    "end_time" : 1,
    "flags" : [ "flags", "flags" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 5,
    "features" : "features",
    "start_time" : 7,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : 9,
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : 2
    },
    "core_count" : 0
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation information
        <a href="#v0.0.38_reservations_response">v0.0.38_reservations_response</a>
    <h4 class="field-label">default</h4>
    no reservations found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038Ping"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/ping</code></pre></div>
    <div class="method-summary">ping test (<span class="nickname">slurmV0038Ping</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_pings">v0.0.38_pings</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "pings" : [ {
    "mode" : "mode",
    "hostname" : "hostname",
    "ping" : "UP",
    "status" : 0
  }, {
    "mode" : "mode",
    "hostname" : "hostname",
    "ping" : "UP",
    "status" : 0
  } ],
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of ping test
        <a href="#v0.0.38_pings">v0.0.38_pings</a>
    <h4 class="field-label">default</h4>
    unable to request ping test
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038SlurmctldGetLicenses"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.38/licenses</code></pre></div>
    <div class="method-summary">get all Slurm tracked license info (<span class="nickname">slurmV0038SlurmctldGetLicenses</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_licenses">v0.0.38_licenses</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "licenses" : [ {
    "Used" : 6,
    "Total" : 0,
    "Remote" : true,
    "LicenseName" : "LicenseName",
    "Free" : 1,
    "Reserved" : 5
  }, {
    "Used" : 6,
    "Total" : 0,
    "Remote" : true,
    "LicenseName" : "LicenseName",
    "Free" : 1,
    "Reserved" : 5
  } ],
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of get all licenses
        <a href="#v0.0.38_licenses">v0.0.38_licenses</a>
    <h4 class="field-label">default</h4>
    unable to request licenses
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038SubmitJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.38/job/submit</code></pre></div>
    <div class="method-summary">submit new job (<span class="nickname">slurmV0038SubmitJob</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.38_job_submission <a href="#v0.0.38_job_submission">v0.0.38_job_submission</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.38_job_submission_response">v0.0.38_job_submission_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "job_id" : 0,
  "step_id" : "step_id",
  "errors" : [ {
    "error" : "error",
    "error_number" : 0
  }, {
    "error" : "error",
    "error_number" : 0
  } ],
  "job_submit_user_msg" : "job_submit_user_msg"
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job submitted
        <a href="#v0.0.38_job_submission_response">v0.0.38_job_submission_response</a>
    <h4 class="field-label">default</h4>
    job rejected
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0038UpdateJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.38/job/{job_id}</code></pre></div>
    <div class="method-summary">update job (<span class="nickname">slurmV0038UpdateJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Job ID default: null </div>
    </div>  <!-- field-items -->

    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.38_job_properties <a href="#v0.0.38_job_properties">v0.0.38_job_properties</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->





    <!--Todo: process Response Object and its headers, schema, examples -->



    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job information
        <a href="#"></a>
    <h4 class="field-label">500</h4>
    job not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039CancelJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.39/job/{job_id}</code></pre></div>
    <div class="method-summary">cancel or signal job (<span class="nickname">slurmV0039CancelJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Job ID default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">signal (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; signal to send to job default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job cancelled or sent signal
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Job cancel request failed
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039DeleteNode"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.39/node/{node_name}</code></pre></div>
    <div class="method-summary">delete node (<span class="nickname">slurmV0039DeleteNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Node Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node deleted
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    node delete request failed
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039Diag"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/diag</code></pre></div>
    <div class="method-summary">get diagnostics (<span class="nickname">slurmV0039Diag</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_diag">v0.0.39_diag</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ],
  "statistics" : {
    "schedule_cycle_per_minute" : 6,
    "req_time_start" : 5,
    "jobs_running" : 8,
    "bf_last_backfilled_jobs" : 3,
    "rpcs_by_message_type" : [ {
      "average_time" : 7,
      "type_id" : 3,
      "count" : 3,
      "message_type" : "message_type",
      "total_time" : 5
    }, {
      "average_time" : 7,
      "type_id" : 3,
      "count" : 3,
      "message_type" : "message_type",
      "total_time" : 5
    } ],
    "bf_last_depth" : 3,
    "bf_backfilled_het_jobs" : 6,
    "bf_backfilled_jobs" : 6,
    "rpcs_by_user" : [ {
      "average_time" : 0,
      "user_id" : 3,
      "count" : 4,
      "total_time" : 6,
      "user" : "user"
    }, {
      "average_time" : 0,
      "user_id" : 3,
      "count" : 4,
      "total_time" : 6,
      "user" : "user"
    } ],
    "bf_table_size" : 4,
    "bf_depth_sum" : 7,
    "bf_cycle_mean" : 2,
    "job_states_ts" : 9,
    "bf_queue_len" : 7,
    "jobs_started" : 4,
    "schedule_cycle_max" : 4,
    "server_thread_count" : 5,
    "dbd_agent_queue_size" : 3,
    "bf_table_size_mean" : 8,
    "jobs_pending" : 6,
    "agent_count" : 7,
    "bf_queue_len_sum" : 0,
    "bf_cycle_sum" : 5,
    "bf_cycle_last" : 6,
    "parts_packed" : 6,
    "agent_thread_count" : 9,
    "jobs_completed" : 5,
    "bf_depth_mean" : 6,
    "bf_active" : true,
    "bf_depth_mean_try" : 6,
    "bf_depth_try_sum" : 0,
    "schedule_cycle_mean" : 1,
    "agent_queue_size" : 2,
    "jobs_failed" : 9,
    "gettimeofday_latency" : 2,
    "bf_last_depth_try" : 3,
    "req_time" : 1,
    "bf_cycle_counter" : 1,
    "schedule_queue_length" : 7,
    "bf_queue_len_mean" : 6,
    "schedule_cycle_total" : 1,
    "bf_when_last_cycle" : 7,
    "schedule_cycle_last" : 7,
    "jobs_canceled" : 9,
    "jobs_submitted" : 1,
    "schedule_cycle_mean_depth" : 1
  }
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    diagnostic results
        <a href="#v0.0.39_diag">v0.0.39_diag</a>
    <h4 class="field-label">default</h4>
    unable to request ping test
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039GetJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/job/{job_id}</code></pre></div>
    <div class="method-summary">get job info (<span class="nickname">slurmV0039GetJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm JobID default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_jobs_response">v0.0.39_jobs_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 9,
    "qos" : "qos",
    "resize_time" : 6,
    "eligible_time" : 9,
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : 5,
    "tasks" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "accrue_time" : 0,
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : 7,
    "maximum_switch_wait_time" : 2,
    "core_spec" : 1,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 1,
    "selinux_context" : "selinux_context",
    "exit_code" : 2,
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "job_state" : "job_state",
    "tasks_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "node_count" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "EQUAL_POWER", "EQUAL_POWER" ]
    },
    "deadline" : 2,
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "end_time" : 3,
    "sockets_per_board" : 9,
    "nice" : 7,
    "last_sched_evaluation" : 6,
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "cpu_frequency_maximum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 3,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : 6,
    "name" : "name",
    "preempt_time" : 4,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ "", "" ],
      "allocated_cpus" : 1,
      "allocated_hosts" : 1,
      "allocated_cores" : 1
    },
    "billable_tres" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 5,
    "cpu_frequency_governor" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 8,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : 9,
    "suspend_time" : 6,
    "association_id" : 6,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 4,
    "job_id" : 7,
    "comment" : "comment",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 9,
    "qos" : "qos",
    "resize_time" : 6,
    "eligible_time" : 9,
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : 5,
    "tasks" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "accrue_time" : 0,
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : 7,
    "maximum_switch_wait_time" : 2,
    "core_spec" : 1,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 1,
    "selinux_context" : "selinux_context",
    "exit_code" : 2,
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "job_state" : "job_state",
    "tasks_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "node_count" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "EQUAL_POWER", "EQUAL_POWER" ]
    },
    "deadline" : 2,
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "end_time" : 3,
    "sockets_per_board" : 9,
    "nice" : 7,
    "last_sched_evaluation" : 6,
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "cpu_frequency_maximum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 3,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : 6,
    "name" : "name",
    "preempt_time" : 4,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ "", "" ],
      "allocated_cpus" : 1,
      "allocated_hosts" : 1,
      "allocated_cores" : 1
    },
    "billable_tres" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 5,
    "cpu_frequency_governor" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 8,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : 9,
    "suspend_time" : 6,
    "association_id" : 6,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 4,
    "job_id" : 7,
    "comment" : "comment",
    "account" : "account"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) information
        <a href="#v0.0.39_jobs_response">v0.0.39_jobs_response</a>
    <h4 class="field-label">default</h4>
    job matching JobId not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039GetJobs"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/jobs</code></pre></div>
    <div class="method-summary">get list of jobs (<span class="nickname">slurmV0039GetJobs</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_jobs_response">v0.0.39_jobs_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 9,
    "qos" : "qos",
    "resize_time" : 6,
    "eligible_time" : 9,
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : 5,
    "tasks" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "accrue_time" : 0,
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : 7,
    "maximum_switch_wait_time" : 2,
    "core_spec" : 1,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 1,
    "selinux_context" : "selinux_context",
    "exit_code" : 2,
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "job_state" : "job_state",
    "tasks_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "node_count" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "EQUAL_POWER", "EQUAL_POWER" ]
    },
    "deadline" : 2,
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "end_time" : 3,
    "sockets_per_board" : 9,
    "nice" : 7,
    "last_sched_evaluation" : 6,
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "cpu_frequency_maximum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 3,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : 6,
    "name" : "name",
    "preempt_time" : 4,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ "", "" ],
      "allocated_cpus" : 1,
      "allocated_hosts" : 1,
      "allocated_cores" : 1
    },
    "billable_tres" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 5,
    "cpu_frequency_governor" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 8,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : 9,
    "suspend_time" : 6,
    "association_id" : 6,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 4,
    "job_id" : 7,
    "comment" : "comment",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "time_minimum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "minimum_switches" : 9,
    "qos" : "qos",
    "resize_time" : 6,
    "eligible_time" : 9,
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : 5,
    "tasks" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "accrue_time" : 0,
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : 7,
    "maximum_switch_wait_time" : 2,
    "core_spec" : 1,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 1,
    "selinux_context" : "selinux_context",
    "exit_code" : 2,
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "user_name" : "user_name",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "job_state" : "job_state",
    "tasks_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "node_count" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "EQUAL_POWER", "EQUAL_POWER" ]
    },
    "deadline" : 2,
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "end_time" : 3,
    "sockets_per_board" : 9,
    "nice" : 7,
    "last_sched_evaluation" : 6,
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "cpu_frequency_maximum" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "ALL", "ALL" ],
    "array_task_id" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "minimum_tmp_disk_per_node" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 3,
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : 6,
    "name" : "name",
    "preempt_time" : 4,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ "", "" ],
      "allocated_cpus" : 1,
      "allocated_hosts" : 1,
      "allocated_cores" : 1
    },
    "billable_tres" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 5,
      "set" : false,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 5,
    "cpu_frequency_governor" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "network" : "network",
    "restart_cnt" : 8,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : 9,
    "suspend_time" : 6,
    "association_id" : 6,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 4,
    "job_id" : 7,
    "comment" : "comment",
    "account" : "account"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) information
        <a href="#v0.0.39_jobs_response">v0.0.39_jobs_response</a>
    <h4 class="field-label">default</h4>
    job not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039GetNode"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/node/{node_name}</code></pre></div>
    <div class="method-summary">get node info (<span class="nickname">slurmV0039GetNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Node Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_nodes_response">v0.0.39_nodes_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "slurmd_start_time" : 5,
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 1,
    "reason_changed_at" : 6,
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 6,
    "energy" : {
      "current_watts" : 4,
      "base_consumed_energy" : 3,
      "last_collected" : 1,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 7,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 7,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 6,
    "name" : "name",
    "resume_after" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "temporary_disk" : 3,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "external_sensors" : {
      "current_watts" : 1,
      "temperature" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      },
      "energy_update_time" : 1,
      "consumed_energy" : {
        "number" : 1,
        "set" : false,
        "infinite" : true
      }
    },
    "boards" : 0,
    "alloc_cpus" : 2,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "alloc_idle_cpus" : 6,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : {
      "current_watts" : 6,
      "total_energy" : 7,
      "lowest_watts" : 5,
      "new_maximum_watts" : 1,
      "new_job_time" : 9,
      "state" : 9,
      "time_start_day" : 6,
      "peak_watts" : 4,
      "maximum_watts" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 6.878052220127876,
    "gres" : "gres",
    "threads" : 3,
    "boot_time" : 6,
    "alloc_memory" : 1,
    "specialized_memory" : 9,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 5,
    "last_busy" : 8,
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    }
  }, {
    "reason" : "reason",
    "slurmd_start_time" : 5,
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 1,
    "reason_changed_at" : 6,
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 6,
    "energy" : {
      "current_watts" : 4,
      "base_consumed_energy" : 3,
      "last_collected" : 1,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 7,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 7,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 6,
    "name" : "name",
    "resume_after" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "temporary_disk" : 3,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "external_sensors" : {
      "current_watts" : 1,
      "temperature" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      },
      "energy_update_time" : 1,
      "consumed_energy" : {
        "number" : 1,
        "set" : false,
        "infinite" : true
      }
    },
    "boards" : 0,
    "alloc_cpus" : 2,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "alloc_idle_cpus" : 6,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : {
      "current_watts" : 6,
      "total_energy" : 7,
      "lowest_watts" : 5,
      "new_maximum_watts" : 1,
      "new_job_time" : 9,
      "state" : 9,
      "time_start_day" : 6,
      "peak_watts" : 4,
      "maximum_watts" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 6.878052220127876,
    "gres" : "gres",
    "threads" : 3,
    "boot_time" : 6,
    "alloc_memory" : 1,
    "specialized_memory" : 9,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 5,
    "last_busy" : 8,
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    }
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node information
        <a href="#v0.0.39_nodes_response">v0.0.39_nodes_response</a>
    <h4 class="field-label">default</h4>
    node not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039GetNodes"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/nodes</code></pre></div>
    <div class="method-summary">get all node info (<span class="nickname">slurmV0039GetNodes</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_nodes_response">v0.0.39_nodes_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "slurmd_start_time" : 5,
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 1,
    "reason_changed_at" : 6,
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 6,
    "energy" : {
      "current_watts" : 4,
      "base_consumed_energy" : 3,
      "last_collected" : 1,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 7,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 7,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 6,
    "name" : "name",
    "resume_after" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "temporary_disk" : 3,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "external_sensors" : {
      "current_watts" : 1,
      "temperature" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      },
      "energy_update_time" : 1,
      "consumed_energy" : {
        "number" : 1,
        "set" : false,
        "infinite" : true
      }
    },
    "boards" : 0,
    "alloc_cpus" : 2,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "alloc_idle_cpus" : 6,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : {
      "current_watts" : 6,
      "total_energy" : 7,
      "lowest_watts" : 5,
      "new_maximum_watts" : 1,
      "new_job_time" : 9,
      "state" : 9,
      "time_start_day" : 6,
      "peak_watts" : 4,
      "maximum_watts" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 6.878052220127876,
    "gres" : "gres",
    "threads" : 3,
    "boot_time" : 6,
    "alloc_memory" : 1,
    "specialized_memory" : 9,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 5,
    "last_busy" : 8,
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    }
  }, {
    "reason" : "reason",
    "slurmd_start_time" : 5,
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 1,
    "reason_changed_at" : 6,
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 6,
    "energy" : {
      "current_watts" : 4,
      "base_consumed_energy" : 3,
      "last_collected" : 1,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 7,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "gres_drained" : "gres_drained",
    "weight" : 7,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 6,
    "name" : "name",
    "resume_after" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "temporary_disk" : 3,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "external_sensors" : {
      "current_watts" : 1,
      "temperature" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      },
      "energy_update_time" : 1,
      "consumed_energy" : {
        "number" : 1,
        "set" : false,
        "infinite" : true
      }
    },
    "boards" : 0,
    "alloc_cpus" : 2,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 1,
      "set" : false,
      "infinite" : true
    },
    "alloc_idle_cpus" : 6,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : {
      "current_watts" : 6,
      "total_energy" : 7,
      "lowest_watts" : 5,
      "new_maximum_watts" : 1,
      "new_job_time" : 9,
      "state" : 9,
      "time_start_day" : 6,
      "peak_watts" : 4,
      "maximum_watts" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 6.878052220127876,
    "gres" : "gres",
    "threads" : 3,
    "boot_time" : 6,
    "alloc_memory" : 1,
    "specialized_memory" : 9,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 5,
    "last_busy" : 8,
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    }
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node information
        <a href="#v0.0.39_nodes_response">v0.0.39_nodes_response</a>
    <h4 class="field-label">default</h4>
    no nodes in cluster
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039GetPartition"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/partition/{partition_name}</code></pre></div>
    <div class="method-summary">get partition info (<span class="nickname">slurmV0039GetPartition</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">partition_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Partition Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_partitions_response">v0.0.39_partitions_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "cluster" : "cluster",
    "cpus" : {
      "total" : 0
    },
    "timeouts" : {
      "suspend" : {
        "number" : 5,
        "set" : false,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "suspend_time" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "priority" : {
      "tier" : 5
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "over_time_limit" : {
        "number" : 5,
        "set" : false,
        "infinite" : true
      }
    },
    "nodes" : {
      "total" : 0
    },
    "qos" : {
      "assigned" : "assigned"
    },
    "defaults" : {
      "job" : "job"
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured"
    },
    "accounts" : {
      "deny" : "deny"
    },
    "minimums" : {
      "nodes" : 1
    },
    "grace_time" : 6
  }, {
    "cluster" : "cluster",
    "cpus" : {
      "total" : 0
    },
    "timeouts" : {
      "suspend" : {
        "number" : 5,
        "set" : false,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "suspend_time" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "priority" : {
      "tier" : 5
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "over_time_limit" : {
        "number" : 5,
        "set" : false,
        "infinite" : true
      }
    },
    "nodes" : {
      "total" : 0
    },
    "qos" : {
      "assigned" : "assigned"
    },
    "defaults" : {
      "job" : "job"
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured"
    },
    "accounts" : {
      "deny" : "deny"
    },
    "minimums" : {
      "nodes" : 1
    },
    "grace_time" : 6
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    partition information
        <a href="#v0.0.39_partitions_response">v0.0.39_partitions_response</a>
    <h4 class="field-label">default</h4>
    no partitions found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039GetPartitions"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/partitions</code></pre></div>
    <div class="method-summary">get all partition info (<span class="nickname">slurmV0039GetPartitions</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_partitions_response">v0.0.39_partitions_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "cluster" : "cluster",
    "cpus" : {
      "total" : 0
    },
    "timeouts" : {
      "suspend" : {
        "number" : 5,
        "set" : false,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "suspend_time" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "priority" : {
      "tier" : 5
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "over_time_limit" : {
        "number" : 5,
        "set" : false,
        "infinite" : true
      }
    },
    "nodes" : {
      "total" : 0
    },
    "qos" : {
      "assigned" : "assigned"
    },
    "defaults" : {
      "job" : "job"
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured"
    },
    "accounts" : {
      "deny" : "deny"
    },
    "minimums" : {
      "nodes" : 1
    },
    "grace_time" : 6
  }, {
    "cluster" : "cluster",
    "cpus" : {
      "total" : 0
    },
    "timeouts" : {
      "suspend" : {
        "number" : 5,
        "set" : false,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "suspend_time" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "priority" : {
      "tier" : 5
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "over_time_limit" : {
        "number" : 5,
        "set" : false,
        "infinite" : true
      }
    },
    "nodes" : {
      "total" : 0
    },
    "qos" : {
      "assigned" : "assigned"
    },
    "defaults" : {
      "job" : "job"
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured"
    },
    "accounts" : {
      "deny" : "deny"
    },
    "minimums" : {
      "nodes" : 1
    },
    "grace_time" : 6
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    partition information
        <a href="#v0.0.39_partitions_response">v0.0.39_partitions_response</a>
    <h4 class="field-label">default</h4>
    no partitions found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039GetReservation"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/reservation/{reservation_name}</code></pre></div>
    <div class="method-summary">get reservation info (<span class="nickname">slurmV0039GetReservation</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">reservation_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Reservation Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if no reservation (not limited to reservation in URL) changed since update_time. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_reservations_response">v0.0.39_reservations_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "end_time" : 6,
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 1,
    "features" : "features",
    "start_time" : 5,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "core_count" : 0
  }, {
    "end_time" : 6,
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 1,
    "features" : "features",
    "start_time" : 5,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "core_count" : 0
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation information
        <a href="#v0.0.39_reservations_response">v0.0.39_reservations_response</a>
    <h4 class="field-label">default</h4>
    no reservations found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039GetReservations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/reservations</code></pre></div>
    <div class="method-summary">get all reservation info (<span class="nickname">slurmV0039GetReservations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_reservations_response">v0.0.39_reservations_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "end_time" : 6,
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 1,
    "features" : "features",
    "start_time" : 5,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "core_count" : 0
  }, {
    "end_time" : 6,
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 1,
    "features" : "features",
    "start_time" : 5,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "core_count" : 0
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation information
        <a href="#v0.0.39_reservations_response">v0.0.39_reservations_response</a>
    <h4 class="field-label">default</h4>
    no reservations found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039Ping"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/ping</code></pre></div>
    <div class="method-summary">ping test (<span class="nickname">slurmV0039Ping</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_pings">v0.0.39_pings</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "pings" : [ {
    "mode" : "mode",
    "hostname" : "hostname",
    "latency" : 0,
    "pinged" : "pinged"
  }, {
    "mode" : "mode",
    "hostname" : "hostname",
    "latency" : 0,
    "pinged" : "pinged"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of ping test
        <a href="#v0.0.39_pings">v0.0.39_pings</a>
    <h4 class="field-label">default</h4>
    unable to request ping test
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039SlurmctldGetLicenses"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.39/licenses</code></pre></div>
    <div class="method-summary">get all Slurm tracked license info (<span class="nickname">slurmV0039SlurmctldGetLicenses</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_licenses_info">v0.0.39_licenses_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "licenses" : [ {
    "Used" : 6,
    "LastUpdate" : 7,
    "Total" : 0,
    "Remote" : true,
    "LastConsumed" : 5,
    "LastDeficit" : 2,
    "LicenseName" : "LicenseName",
    "Free" : 1,
    "Reserved" : 5
  }, {
    "Used" : 6,
    "LastUpdate" : 7,
    "Total" : 0,
    "Remote" : true,
    "LastConsumed" : 5,
    "LastDeficit" : 2,
    "LicenseName" : "LicenseName",
    "Free" : 1,
    "Reserved" : 5
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of get all licenses
        <a href="#v0.0.39_licenses_info">v0.0.39_licenses_info</a>
    <h4 class="field-label">default</h4>
    unable to request licenses
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039SubmitJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.39/job/submit</code></pre></div>
    <div class="method-summary">submit new job (<span class="nickname">slurmV0039SubmitJob</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.39_job_submission <a href="#v0.0.39_job_submission">v0.0.39_job_submission</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_job_submission_response">v0.0.39_job_submission_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "job_id" : 0,
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "step_id" : "step_id",
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ],
  "job_submit_user_msg" : "job_submit_user_msg"
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job submitted
        <a href="#v0.0.39_job_submission_response">v0.0.39_job_submission_response</a>
    <h4 class="field-label">default</h4>
    job rejected
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039UpdateJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.39/job/{job_id}</code></pre></div>
    <div class="method-summary">update job (<span class="nickname">slurmV0039UpdateJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Job ID default: null </div>
    </div>  <!-- field-items -->

    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.39_update_node_msg <a href="#v0.0.39_update_node_msg">v0.0.39_update_node_msg</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.39_job_update_response">v0.0.39_job_update_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "results" : [ {
    "job_id" : 0,
    "why" : "why",
    "error_code" : 6,
    "error" : "error"
  }, {
    "job_id" : 0,
    "why" : "why",
    "error_code" : 6,
    "error" : "error"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job updated
        <a href="#v0.0.39_job_update_response">v0.0.39_job_update_response</a>
    <h4 class="field-label">default</h4>
    job update failed
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmV0039UpdateNode"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.39/node/{node_name}</code></pre></div>
    <div class="method-summary">update node properties (<span class="nickname">slurmV0039UpdateNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Node Name default: null </div>
    </div>  <!-- field-items -->

    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.39_update_node_msg <a href="#v0.0.39_update_node_msg">v0.0.39_update_node_msg</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node information
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    node update failed
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldCancelJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.37/job/{job_id}</code></pre></div>
    <div class="method-summary">cancel or signal job (<span class="nickname">slurmctldCancelJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Job ID default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">signal (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; signal to send to job default: null </div>
    </div>  <!-- field-items -->



    <!--Todo: process Response Object and its headers, schema, examples -->



    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job cancelled or sent signal
        <a href="#"></a>
    <h4 class="field-label">500</h4>
    job not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldDiag"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.37/diag</code></pre></div>
    <div class="method-summary">get diagnostics (<span class="nickname">slurmctldDiag</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_diag">v0.0.37_diag</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ],
  "statistics" : {
    "schedule_cycle_per_minute" : 6,
    "req_time_start" : 5,
    "jobs_running" : 8,
    "bf_cycle_max" : 6,
    "bf_last_backfilled_jobs" : 3,
    "bf_last_depth" : 6,
    "bf_backfilled_het_jobs" : 6,
    "bf_backfilled_jobs" : 6,
    "bf_cycle_mean" : 2,
    "job_states_ts" : 9,
    "bf_queue_len" : 7,
    "jobs_started" : 4,
    "schedule_cycle_max" : 4,
    "server_thread_count" : 5,
    "dbd_agent_queue_size" : 3,
    "jobs_pending" : 6,
    "agent_count" : 7,
    "bf_cycle_last" : 3,
    "parts_packed" : 6,
    "agent_thread_count" : 9,
    "jobs_completed" : 5,
    "bf_depth_mean" : 6,
    "bf_active" : true,
    "bf_depth_mean_try" : 3,
    "schedule_cycle_mean" : 1,
    "agent_queue_size" : 2,
    "jobs_failed" : 9,
    "gettimeofday_latency" : 2,
    "bf_last_depth_try" : 5,
    "req_time" : 1,
    "bf_cycle_counter" : 1,
    "schedule_queue_length" : 7,
    "bf_queue_len_mean" : 0,
    "schedule_cycle_total" : 1,
    "bf_when_last_cycle" : 7,
    "schedule_cycle_last" : 7,
    "jobs_canceled" : 9,
    "jobs_submitted" : 1,
    "schedule_cycle_mean_depth" : 1
  }
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    diagnostic results
        <a href="#v0.0.37_diag">v0.0.37_diag</a>
    <h4 class="field-label">default</h4>
    unable to request ping test
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldGetJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.37/job/{job_id}</code></pre></div>
    <div class="method-summary">get job info (<span class="nickname">slurmctldGetJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm JobID default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_jobs_response">v0.0.37_jobs_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "jobs" : [ {
    "cluster" : "cluster",
    "time_minimum" : "time_minimum",
    "memory_per_tres" : "memory_per_tres",
    "qos" : "qos",
    "resize_time" : 2,
    "eligible_time" : 6,
    "cpus_per_tres" : "cpus_per_tres",
    "tasks" : "tasks",
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_core" : "tasks_per_core",
    "accrue_time" : 0,
    "dependency" : "dependency",
    "profile" : [ "profile", "profile" ],
    "priority" : "priority",
    "tres_per_job" : "tres_per_job",
    "derived_exit_code" : "derived_exit_code",
    "core_spec" : "core_spec",
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : "user_id",
    "exit_code" : 5,
    "federation_origin" : "federation_origin",
    "shared" : "shared",
    "tasks_per_board" : "tasks_per_board",
    "user_name" : "user_name",
    "flags" : [ "flags", "flags" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : "cores_per_socket",
    "job_state" : "job_state",
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : "array_job_id",
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : "threads_per_core",
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : "memory_per_cpu",
    "cpu_frequency_minimum" : "cpu_frequency_minimum",
    "node_count" : "node_count",
    "deadline" : "deadline",
    "memory_per_node" : "memory_per_node",
    "state_reason" : "state_reason",
    "het_job_offset" : "het_job_offset",
    "end_time" : 1,
    "sockets_per_board" : "sockets_per_board",
    "nice" : "nice",
    "last_sched_evaluation" : "last_sched_evaluation",
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : "array_max_tasks",
    "het_job_id" : "het_job_id",
    "sockets_per_node" : "sockets_per_node",
    "time_limit" : "time_limit",
    "minimum_cpus_per_node" : "minimum_cpus_per_node",
    "tasks_per_socket" : "tasks_per_socket",
    "batch_host" : "batch_host",
    "max_cpus" : "max_cpus",
    "cpu_frequency_maximum" : "cpu_frequency_maximum",
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "show_flags", "show_flags" ],
    "array_task_id" : "array_task_id",
    "minimum_tmp_disk_per_node" : "minimum_tmp_disk_per_node",
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 7,
    "wckey" : "wckey",
    "max_nodes" : "max_nodes",
    "batch_flag" : true,
    "start_time" : 4,
    "name" : "name",
    "preempt_time" : 9,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ {
        "memory" : 7,
        "cores" : "{}",
        "cpus" : "{}",
        "sockets" : "{}"
      }, {
        "memory" : 7,
        "cores" : "{}",
        "cpus" : "{}",
        "sockets" : "{}"
      } ],
      "allocated_cpus" : 5,
      "allocated_hosts" : 2
    },
    "billable_tres" : "billable_tres",
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : "cpus_per_task",
    "batch_features" : "batch_features",
    "thread_spec" : "thread_spec",
    "cpu_frequency_governor" : "cpu_frequency_governor",
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "restart_cnt" : "restart_cnt",
    "resv_name" : "resv_name",
    "delay_boot" : "delay_boot",
    "reboot" : true,
    "cpus" : "cpus",
    "standard_output" : "standard_output",
    "pre_sus_time" : 3,
    "suspend_time" : 1,
    "association_id" : "association_id",
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "nodes" : "nodes",
    "group_id" : "group_id",
    "job_id" : "job_id",
    "comment" : "comment",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "time_minimum" : "time_minimum",
    "memory_per_tres" : "memory_per_tres",
    "qos" : "qos",
    "resize_time" : 2,
    "eligible_time" : 6,
    "cpus_per_tres" : "cpus_per_tres",
    "tasks" : "tasks",
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_core" : "tasks_per_core",
    "accrue_time" : 0,
    "dependency" : "dependency",
    "profile" : [ "profile", "profile" ],
    "priority" : "priority",
    "tres_per_job" : "tres_per_job",
    "derived_exit_code" : "derived_exit_code",
    "core_spec" : "core_spec",
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : "user_id",
    "exit_code" : 5,
    "federation_origin" : "federation_origin",
    "shared" : "shared",
    "tasks_per_board" : "tasks_per_board",
    "user_name" : "user_name",
    "flags" : [ "flags", "flags" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : "cores_per_socket",
    "job_state" : "job_state",
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : "array_job_id",
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : "threads_per_core",
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : "memory_per_cpu",
    "cpu_frequency_minimum" : "cpu_frequency_minimum",
    "node_count" : "node_count",
    "deadline" : "deadline",
    "memory_per_node" : "memory_per_node",
    "state_reason" : "state_reason",
    "het_job_offset" : "het_job_offset",
    "end_time" : 1,
    "sockets_per_board" : "sockets_per_board",
    "nice" : "nice",
    "last_sched_evaluation" : "last_sched_evaluation",
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : "array_max_tasks",
    "het_job_id" : "het_job_id",
    "sockets_per_node" : "sockets_per_node",
    "time_limit" : "time_limit",
    "minimum_cpus_per_node" : "minimum_cpus_per_node",
    "tasks_per_socket" : "tasks_per_socket",
    "batch_host" : "batch_host",
    "max_cpus" : "max_cpus",
    "cpu_frequency_maximum" : "cpu_frequency_maximum",
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "show_flags", "show_flags" ],
    "array_task_id" : "array_task_id",
    "minimum_tmp_disk_per_node" : "minimum_tmp_disk_per_node",
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 7,
    "wckey" : "wckey",
    "max_nodes" : "max_nodes",
    "batch_flag" : true,
    "start_time" : 4,
    "name" : "name",
    "preempt_time" : 9,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ {
        "memory" : 7,
        "cores" : "{}",
        "cpus" : "{}",
        "sockets" : "{}"
      }, {
        "memory" : 7,
        "cores" : "{}",
        "cpus" : "{}",
        "sockets" : "{}"
      } ],
      "allocated_cpus" : 5,
      "allocated_hosts" : 2
    },
    "billable_tres" : "billable_tres",
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : "cpus_per_task",
    "batch_features" : "batch_features",
    "thread_spec" : "thread_spec",
    "cpu_frequency_governor" : "cpu_frequency_governor",
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "restart_cnt" : "restart_cnt",
    "resv_name" : "resv_name",
    "delay_boot" : "delay_boot",
    "reboot" : true,
    "cpus" : "cpus",
    "standard_output" : "standard_output",
    "pre_sus_time" : 3,
    "suspend_time" : 1,
    "association_id" : "association_id",
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "nodes" : "nodes",
    "group_id" : "group_id",
    "job_id" : "job_id",
    "comment" : "comment",
    "account" : "account"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) information
        <a href="#v0.0.37_jobs_response">v0.0.37_jobs_response</a>
    <h4 class="field-label">default</h4>
    job matching JobId not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldGetJobs"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.37/jobs</code></pre></div>
    <div class="method-summary">get list of jobs (<span class="nickname">slurmctldGetJobs</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_jobs_response">v0.0.37_jobs_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "jobs" : [ {
    "cluster" : "cluster",
    "time_minimum" : "time_minimum",
    "memory_per_tres" : "memory_per_tres",
    "qos" : "qos",
    "resize_time" : 2,
    "eligible_time" : 6,
    "cpus_per_tres" : "cpus_per_tres",
    "tasks" : "tasks",
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_core" : "tasks_per_core",
    "accrue_time" : 0,
    "dependency" : "dependency",
    "profile" : [ "profile", "profile" ],
    "priority" : "priority",
    "tres_per_job" : "tres_per_job",
    "derived_exit_code" : "derived_exit_code",
    "core_spec" : "core_spec",
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : "user_id",
    "exit_code" : 5,
    "federation_origin" : "federation_origin",
    "shared" : "shared",
    "tasks_per_board" : "tasks_per_board",
    "user_name" : "user_name",
    "flags" : [ "flags", "flags" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : "cores_per_socket",
    "job_state" : "job_state",
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : "array_job_id",
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : "threads_per_core",
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : "memory_per_cpu",
    "cpu_frequency_minimum" : "cpu_frequency_minimum",
    "node_count" : "node_count",
    "deadline" : "deadline",
    "memory_per_node" : "memory_per_node",
    "state_reason" : "state_reason",
    "het_job_offset" : "het_job_offset",
    "end_time" : 1,
    "sockets_per_board" : "sockets_per_board",
    "nice" : "nice",
    "last_sched_evaluation" : "last_sched_evaluation",
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : "array_max_tasks",
    "het_job_id" : "het_job_id",
    "sockets_per_node" : "sockets_per_node",
    "time_limit" : "time_limit",
    "minimum_cpus_per_node" : "minimum_cpus_per_node",
    "tasks_per_socket" : "tasks_per_socket",
    "batch_host" : "batch_host",
    "max_cpus" : "max_cpus",
    "cpu_frequency_maximum" : "cpu_frequency_maximum",
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "show_flags", "show_flags" ],
    "array_task_id" : "array_task_id",
    "minimum_tmp_disk_per_node" : "minimum_tmp_disk_per_node",
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 7,
    "wckey" : "wckey",
    "max_nodes" : "max_nodes",
    "batch_flag" : true,
    "start_time" : 4,
    "name" : "name",
    "preempt_time" : 9,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ {
        "memory" : 7,
        "cores" : "{}",
        "cpus" : "{}",
        "sockets" : "{}"
      }, {
        "memory" : 7,
        "cores" : "{}",
        "cpus" : "{}",
        "sockets" : "{}"
      } ],
      "allocated_cpus" : 5,
      "allocated_hosts" : 2
    },
    "billable_tres" : "billable_tres",
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : "cpus_per_task",
    "batch_features" : "batch_features",
    "thread_spec" : "thread_spec",
    "cpu_frequency_governor" : "cpu_frequency_governor",
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "restart_cnt" : "restart_cnt",
    "resv_name" : "resv_name",
    "delay_boot" : "delay_boot",
    "reboot" : true,
    "cpus" : "cpus",
    "standard_output" : "standard_output",
    "pre_sus_time" : 3,
    "suspend_time" : 1,
    "association_id" : "association_id",
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "nodes" : "nodes",
    "group_id" : "group_id",
    "job_id" : "job_id",
    "comment" : "comment",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "time_minimum" : "time_minimum",
    "memory_per_tres" : "memory_per_tres",
    "qos" : "qos",
    "resize_time" : 2,
    "eligible_time" : 6,
    "cpus_per_tres" : "cpus_per_tres",
    "tasks" : "tasks",
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_core" : "tasks_per_core",
    "accrue_time" : 0,
    "dependency" : "dependency",
    "profile" : [ "profile", "profile" ],
    "priority" : "priority",
    "tres_per_job" : "tres_per_job",
    "derived_exit_code" : "derived_exit_code",
    "core_spec" : "core_spec",
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : "user_id",
    "exit_code" : 5,
    "federation_origin" : "federation_origin",
    "shared" : "shared",
    "tasks_per_board" : "tasks_per_board",
    "user_name" : "user_name",
    "flags" : [ "flags", "flags" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : "cores_per_socket",
    "job_state" : "job_state",
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : "array_job_id",
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "threads_per_core" : "threads_per_core",
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : "memory_per_cpu",
    "cpu_frequency_minimum" : "cpu_frequency_minimum",
    "node_count" : "node_count",
    "deadline" : "deadline",
    "memory_per_node" : "memory_per_node",
    "state_reason" : "state_reason",
    "het_job_offset" : "het_job_offset",
    "end_time" : 1,
    "sockets_per_board" : "sockets_per_board",
    "nice" : "nice",
    "last_sched_evaluation" : "last_sched_evaluation",
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : "array_max_tasks",
    "het_job_id" : "het_job_id",
    "sockets_per_node" : "sockets_per_node",
    "time_limit" : "time_limit",
    "minimum_cpus_per_node" : "minimum_cpus_per_node",
    "tasks_per_socket" : "tasks_per_socket",
    "batch_host" : "batch_host",
    "max_cpus" : "max_cpus",
    "cpu_frequency_maximum" : "cpu_frequency_maximum",
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "show_flags" : [ "show_flags", "show_flags" ],
    "array_task_id" : "array_task_id",
    "minimum_tmp_disk_per_node" : "minimum_tmp_disk_per_node",
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : 7,
    "wckey" : "wckey",
    "max_nodes" : "max_nodes",
    "batch_flag" : true,
    "start_time" : 4,
    "name" : "name",
    "preempt_time" : 9,
    "contiguous" : true,
    "job_resources" : {
      "nodes" : "nodes",
      "allocated_nodes" : [ {
        "memory" : 7,
        "cores" : "{}",
        "cpus" : "{}",
        "sockets" : "{}"
      }, {
        "memory" : 7,
        "cores" : "{}",
        "cpus" : "{}",
        "sockets" : "{}"
      } ],
      "allocated_cpus" : 5,
      "allocated_hosts" : 2
    },
    "billable_tres" : "billable_tres",
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : "cpus_per_task",
    "batch_features" : "batch_features",
    "thread_spec" : "thread_spec",
    "cpu_frequency_governor" : "cpu_frequency_governor",
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "restart_cnt" : "restart_cnt",
    "resv_name" : "resv_name",
    "delay_boot" : "delay_boot",
    "reboot" : true,
    "cpus" : "cpus",
    "standard_output" : "standard_output",
    "pre_sus_time" : 3,
    "suspend_time" : 1,
    "association_id" : "association_id",
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "nodes" : "nodes",
    "group_id" : "group_id",
    "job_id" : "job_id",
    "comment" : "comment",
    "account" : "account"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) information
        <a href="#v0.0.37_jobs_response">v0.0.37_jobs_response</a>
    <h4 class="field-label">default</h4>
    job not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldGetNode"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.37/node/{node_name}</code></pre></div>
    <div class="method-summary">get node info (<span class="nickname">slurmctldGetNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Node Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_nodes_response">v0.0.37_nodes_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "boards" : 0,
    "alloc_cpus" : 7,
    "active_features" : "active_features",
    "reason_set_by_user" : "reason_set_by_user",
    "slurmd_start_time" : 4,
    "features" : "features",
    "hostname" : "hostname",
    "cores" : 1,
    "slurmd_version" : "slurmd_version",
    "reason_changed_at" : 2,
    "operating_system" : "operating_system",
    "next_state_after_reboot_flags" : [ "next_state_after_reboot_flags", "next_state_after_reboot_flags" ],
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : "state",
    "sockets" : 7,
    "architecture" : "architecture",
    "owner" : "owner",
    "partitions" : [ "partitions", "partitions" ],
    "state_flags" : [ "state_flags", "state_flags" ],
    "address" : "address",
    "cpus" : 7,
    "free_memory" : 2,
    "tres_weighted" : 6.84685269835264,
    "gres" : "gres",
    "gres_drained" : "gres_drained",
    "threads" : 1,
    "weight" : 1,
    "boot_time" : 6,
    "gres_used" : "gres_used",
    "alloc_memory" : 4,
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 9,
    "name" : "name",
    "next_state_after_reboot" : "next_state_after_reboot",
    "temporary_disk" : 1,
    "tres_used" : "tres_used",
    "idle_cpus" : 1,
    "cpu_load" : 5
  }, {
    "reason" : "reason",
    "boards" : 0,
    "alloc_cpus" : 7,
    "active_features" : "active_features",
    "reason_set_by_user" : "reason_set_by_user",
    "slurmd_start_time" : 4,
    "features" : "features",
    "hostname" : "hostname",
    "cores" : 1,
    "slurmd_version" : "slurmd_version",
    "reason_changed_at" : 2,
    "operating_system" : "operating_system",
    "next_state_after_reboot_flags" : [ "next_state_after_reboot_flags", "next_state_after_reboot_flags" ],
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : "state",
    "sockets" : 7,
    "architecture" : "architecture",
    "owner" : "owner",
    "partitions" : [ "partitions", "partitions" ],
    "state_flags" : [ "state_flags", "state_flags" ],
    "address" : "address",
    "cpus" : 7,
    "free_memory" : 2,
    "tres_weighted" : 6.84685269835264,
    "gres" : "gres",
    "gres_drained" : "gres_drained",
    "threads" : 1,
    "weight" : 1,
    "boot_time" : 6,
    "gres_used" : "gres_used",
    "alloc_memory" : 4,
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 9,
    "name" : "name",
    "next_state_after_reboot" : "next_state_after_reboot",
    "temporary_disk" : 1,
    "tres_used" : "tres_used",
    "idle_cpus" : 1,
    "cpu_load" : 5
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node information
        <a href="#v0.0.37_nodes_response">v0.0.37_nodes_response</a>
    <h4 class="field-label">default</h4>
    node not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldGetNodes"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.37/nodes</code></pre></div>
    <div class="method-summary">get all node info (<span class="nickname">slurmctldGetNodes</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_nodes_response">v0.0.37_nodes_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "boards" : 0,
    "alloc_cpus" : 7,
    "active_features" : "active_features",
    "reason_set_by_user" : "reason_set_by_user",
    "slurmd_start_time" : 4,
    "features" : "features",
    "hostname" : "hostname",
    "cores" : 1,
    "slurmd_version" : "slurmd_version",
    "reason_changed_at" : 2,
    "operating_system" : "operating_system",
    "next_state_after_reboot_flags" : [ "next_state_after_reboot_flags", "next_state_after_reboot_flags" ],
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : "state",
    "sockets" : 7,
    "architecture" : "architecture",
    "owner" : "owner",
    "partitions" : [ "partitions", "partitions" ],
    "state_flags" : [ "state_flags", "state_flags" ],
    "address" : "address",
    "cpus" : 7,
    "free_memory" : 2,
    "tres_weighted" : 6.84685269835264,
    "gres" : "gres",
    "gres_drained" : "gres_drained",
    "threads" : 1,
    "weight" : 1,
    "boot_time" : 6,
    "gres_used" : "gres_used",
    "alloc_memory" : 4,
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 9,
    "name" : "name",
    "next_state_after_reboot" : "next_state_after_reboot",
    "temporary_disk" : 1,
    "tres_used" : "tres_used",
    "idle_cpus" : 1,
    "cpu_load" : 5
  }, {
    "reason" : "reason",
    "boards" : 0,
    "alloc_cpus" : 7,
    "active_features" : "active_features",
    "reason_set_by_user" : "reason_set_by_user",
    "slurmd_start_time" : 4,
    "features" : "features",
    "hostname" : "hostname",
    "cores" : 1,
    "slurmd_version" : "slurmd_version",
    "reason_changed_at" : 2,
    "operating_system" : "operating_system",
    "next_state_after_reboot_flags" : [ "next_state_after_reboot_flags", "next_state_after_reboot_flags" ],
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : "state",
    "sockets" : 7,
    "architecture" : "architecture",
    "owner" : "owner",
    "partitions" : [ "partitions", "partitions" ],
    "state_flags" : [ "state_flags", "state_flags" ],
    "address" : "address",
    "cpus" : 7,
    "free_memory" : 2,
    "tres_weighted" : 6.84685269835264,
    "gres" : "gres",
    "gres_drained" : "gres_drained",
    "threads" : 1,
    "weight" : 1,
    "boot_time" : 6,
    "gres_used" : "gres_used",
    "alloc_memory" : 4,
    "mcs_label" : "mcs_label",
    "real_memory" : 3,
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 9,
    "name" : "name",
    "next_state_after_reboot" : "next_state_after_reboot",
    "temporary_disk" : 1,
    "tres_used" : "tres_used",
    "idle_cpus" : 1,
    "cpu_load" : 5
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node information
        <a href="#v0.0.37_nodes_response">v0.0.37_nodes_response</a>
    <h4 class="field-label">default</h4>
    no nodes in cluster
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldGetPartition"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.37/partition/{partition_name}</code></pre></div>
    <div class="method-summary">get partition info (<span class="nickname">slurmctldGetPartition</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">partition_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Partition Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_partitions_response">v0.0.37_partitions_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "max_time_limit" : 7,
    "maximum_cpus_per_node" : 5,
    "over_time_limit" : 3,
    "denied_accounts" : "denied_accounts",
    "flags" : [ "flags", "flags" ],
    "maximum_memory_per_node" : 5,
    "total_cpus" : 7,
    "billing_weights" : "billing_weights",
    "default_memory_per_cpu" : 0,
    "allowed_qos" : "allowed_qos",
    "min_nodes_per_job" : 9,
    "qos" : "qos",
    "default_time_limit" : 6,
    "denied_qos" : "denied_qos",
    "priority_job_factor" : 2,
    "tres" : "tres",
    "allowed_allocation_nodes" : "allowed_allocation_nodes",
    "state" : "state",
    "preemption_grace_time" : 1,
    "allowed_accounts" : "allowed_accounts",
    "alternative" : "alternative",
    "preemption_mode" : [ "preemption_mode", "preemption_mode" ],
    "nodes" : "nodes",
    "name" : "name",
    "allowed_groups" : "allowed_groups",
    "total_nodes" : 1,
    "maximum_nodes_per_job" : 2,
    "priority_tier" : 4
  }, {
    "max_time_limit" : 7,
    "maximum_cpus_per_node" : 5,
    "over_time_limit" : 3,
    "denied_accounts" : "denied_accounts",
    "flags" : [ "flags", "flags" ],
    "maximum_memory_per_node" : 5,
    "total_cpus" : 7,
    "billing_weights" : "billing_weights",
    "default_memory_per_cpu" : 0,
    "allowed_qos" : "allowed_qos",
    "min_nodes_per_job" : 9,
    "qos" : "qos",
    "default_time_limit" : 6,
    "denied_qos" : "denied_qos",
    "priority_job_factor" : 2,
    "tres" : "tres",
    "allowed_allocation_nodes" : "allowed_allocation_nodes",
    "state" : "state",
    "preemption_grace_time" : 1,
    "allowed_accounts" : "allowed_accounts",
    "alternative" : "alternative",
    "preemption_mode" : [ "preemption_mode", "preemption_mode" ],
    "nodes" : "nodes",
    "name" : "name",
    "allowed_groups" : "allowed_groups",
    "total_nodes" : 1,
    "maximum_nodes_per_job" : 2,
    "priority_tier" : 4
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    partition information
        <a href="#v0.0.37_partitions_response">v0.0.37_partitions_response</a>
    <h4 class="field-label">default</h4>
    no partitions found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldGetPartitions"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.37/partitions</code></pre></div>
    <div class="method-summary">get all partition info (<span class="nickname">slurmctldGetPartitions</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_partitions_response">v0.0.37_partitions_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "max_time_limit" : 7,
    "maximum_cpus_per_node" : 5,
    "over_time_limit" : 3,
    "denied_accounts" : "denied_accounts",
    "flags" : [ "flags", "flags" ],
    "maximum_memory_per_node" : 5,
    "total_cpus" : 7,
    "billing_weights" : "billing_weights",
    "default_memory_per_cpu" : 0,
    "allowed_qos" : "allowed_qos",
    "min_nodes_per_job" : 9,
    "qos" : "qos",
    "default_time_limit" : 6,
    "denied_qos" : "denied_qos",
    "priority_job_factor" : 2,
    "tres" : "tres",
    "allowed_allocation_nodes" : "allowed_allocation_nodes",
    "state" : "state",
    "preemption_grace_time" : 1,
    "allowed_accounts" : "allowed_accounts",
    "alternative" : "alternative",
    "preemption_mode" : [ "preemption_mode", "preemption_mode" ],
    "nodes" : "nodes",
    "name" : "name",
    "allowed_groups" : "allowed_groups",
    "total_nodes" : 1,
    "maximum_nodes_per_job" : 2,
    "priority_tier" : 4
  }, {
    "max_time_limit" : 7,
    "maximum_cpus_per_node" : 5,
    "over_time_limit" : 3,
    "denied_accounts" : "denied_accounts",
    "flags" : [ "flags", "flags" ],
    "maximum_memory_per_node" : 5,
    "total_cpus" : 7,
    "billing_weights" : "billing_weights",
    "default_memory_per_cpu" : 0,
    "allowed_qos" : "allowed_qos",
    "min_nodes_per_job" : 9,
    "qos" : "qos",
    "default_time_limit" : 6,
    "denied_qos" : "denied_qos",
    "priority_job_factor" : 2,
    "tres" : "tres",
    "allowed_allocation_nodes" : "allowed_allocation_nodes",
    "state" : "state",
    "preemption_grace_time" : 1,
    "allowed_accounts" : "allowed_accounts",
    "alternative" : "alternative",
    "preemption_mode" : [ "preemption_mode", "preemption_mode" ],
    "nodes" : "nodes",
    "name" : "name",
    "allowed_groups" : "allowed_groups",
    "total_nodes" : 1,
    "maximum_nodes_per_job" : 2,
    "priority_tier" : 4
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    partition information
        <a href="#v0.0.37_partitions_response">v0.0.37_partitions_response</a>
    <h4 class="field-label">default</h4>
    no partitions found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldGetReservation"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.37/reservation/{reservation_name}</code></pre></div>
    <div class="method-summary">get reservation info (<span class="nickname">slurmctldGetReservation</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">reservation_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Reservation Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if no reservation (not limited to reservation in URL) changed since update_time. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_reservations_response">v0.0.37_reservations_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "core_spec_cnt" : 6,
    "end_time" : 1,
    "flags" : [ "flags", "flags" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 5,
    "features" : "features",
    "start_time" : 2,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : 7,
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : 2
    },
    "core_count" : 0
  }, {
    "core_spec_cnt" : 6,
    "end_time" : 1,
    "flags" : [ "flags", "flags" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 5,
    "features" : "features",
    "start_time" : 2,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : 7,
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : 2
    },
    "core_count" : 0
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation information
        <a href="#v0.0.37_reservations_response">v0.0.37_reservations_response</a>
    <h4 class="field-label">default</h4>
    no reservations found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldGetReservations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.37/reservations</code></pre></div>
    <div class="method-summary">get all reservation info (<span class="nickname">slurmctldGetReservations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter if changed since update_time. Use of this parameter can result in faster replies. default: null format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_reservations_response">v0.0.37_reservations_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "core_spec_cnt" : 6,
    "end_time" : 1,
    "flags" : [ "flags", "flags" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 5,
    "features" : "features",
    "start_time" : 2,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : 7,
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : 2
    },
    "core_count" : 0
  }, {
    "core_spec_cnt" : 6,
    "end_time" : 1,
    "flags" : [ "flags", "flags" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 5,
    "features" : "features",
    "start_time" : 2,
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : 7,
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 5,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : 2
    },
    "core_count" : 0
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation information
        <a href="#v0.0.37_reservations_response">v0.0.37_reservations_response</a>
    <h4 class="field-label">default</h4>
    no reservations found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldPing"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.37/ping</code></pre></div>
    <div class="method-summary">ping test (<span class="nickname">slurmctldPing</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_pings">v0.0.37_pings</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "pings" : [ {
    "mode" : "mode",
    "hostname" : "hostname",
    "ping" : "UP",
    "status" : 0
  }, {
    "mode" : "mode",
    "hostname" : "hostname",
    "ping" : "UP",
    "status" : 0
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of ping test
        <a href="#v0.0.37_pings">v0.0.37_pings</a>
    <h4 class="field-label">default</h4>
    unable to request ping test
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldSubmitJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.37/job/submit</code></pre></div>
    <div class="method-summary">submit new job (<span class="nickname">slurmctldSubmitJob</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.37_job_submission <a href="#v0.0.37_job_submission">v0.0.37_job_submission</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.37_job_submission_response">v0.0.37_job_submission_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "job_id" : 0,
  "step_id" : "step_id",
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ],
  "job_submit_user_msg" : "job_submit_user_msg"
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job submitted
        <a href="#v0.0.37_job_submission_response">v0.0.37_job_submission_response</a>
    <h4 class="field-label">default</h4>
    job rejected
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmctldUpdateJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.37/job/{job_id}</code></pre></div>
    <div class="method-summary">update job (<span class="nickname">slurmctldUpdateJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Job ID default: null </div>
    </div>  <!-- field-items -->

    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.37_job_properties <a href="#v0.0.37_job_properties">v0.0.37_job_properties</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->





    <!--Todo: process Response Object and its headers, schema, examples -->



    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job information
        <a href="#"></a>
    <h4 class="field-label">500</h4>
    job not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038AddClusters"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.38/clusters</code></pre></div>
    <div class="method-summary">Add clusters (<span class="nickname">slurmdbV0038AddClusters</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.38_clusters_properties <a href="#dbv0.0.38_clusters_properties">dbv0.0.38_clusters_properties</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_cluster_add">dbv0.0.38_response_cluster_add</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of clusters
        <a href="#dbv0.0.38_response_cluster_add">dbv0.0.38_response_cluster_add</a>
    <h4 class="field-label">default</h4>
    Unable to add cluster
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038AddWckeys"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.38/wckeys</code></pre></div>
    <div class="method-summary">Add wckeys (<span class="nickname">slurmdbV0038AddWckeys</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.38_wckey_info <a href="#dbv0.0.38_wckey_info">dbv0.0.38_wckey_info</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_wckey_add">dbv0.0.38_response_wckey_add</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of wckeys
        <a href="#dbv0.0.38_response_wckey_add">dbv0.0.38_response_wckey_add</a>
    <h4 class="field-label">default</h4>
    Unable to add wckey
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038DeleteAccount"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.38/account/{account_name}</code></pre></div>
    <div class="method-summary">Delete account (<span class="nickname">slurmdbV0038DeleteAccount</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">account_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Account Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_account_delete">dbv0.0.38_response_account_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete account
        <a href="#dbv0.0.38_response_account_delete">dbv0.0.38_response_account_delete</a>
    <h4 class="field-label">default</h4>
    Unable to delete account
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038DeleteAssociation"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.38/association</code></pre></div>
    <div class="method-summary">Delete association (<span class="nickname">slurmdbV0038DeleteAssociation</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Cluster name default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Account name default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; User name default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Partition Name default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_associations_delete">dbv0.0.38_response_associations_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "removed_associations" : [ "removed_associations", "removed_associations" ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete associations
        <a href="#dbv0.0.38_response_associations_delete">dbv0.0.38_response_associations_delete</a>
    <h4 class="field-label">default</h4>
    Association not found or unable to delete association
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038DeleteAssociations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.38/associations</code></pre></div>
    <div class="method-summary">Delete associations (<span class="nickname">slurmdbV0038DeleteAssociations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Cluster name default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Account name default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; User name default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Partition Name default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_associations_delete">dbv0.0.38_response_associations_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "removed_associations" : [ "removed_associations", "removed_associations" ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete associations
        <a href="#dbv0.0.38_response_associations_delete">dbv0.0.38_response_associations_delete</a>
    <h4 class="field-label">default</h4>
    Associations not found or unable to delete association
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038DeleteCluster"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.38/cluster/{cluster_name}</code></pre></div>
    <div class="method-summary">Delete cluster (<span class="nickname">slurmdbV0038DeleteCluster</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">cluster_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm cluster name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_cluster_delete">dbv0.0.38_response_cluster_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete cluster
        <a href="#dbv0.0.38_response_cluster_delete">dbv0.0.38_response_cluster_delete</a>
    <h4 class="field-label">default</h4>
    Cluster not found or unable to delete cluster
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038DeleteQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.38/qos/{qos_name}</code></pre></div>
    <div class="method-summary">Delete QOS (<span class="nickname">slurmdbV0038DeleteQos</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">qos_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm QOS Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_qos_delete">dbv0.0.38_response_qos_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete qos
        <a href="#dbv0.0.38_response_qos_delete">dbv0.0.38_response_qos_delete</a>
    <h4 class="field-label">default</h4>
    Unable to delete QOS
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038DeleteUser"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.38/user/{user_name}</code></pre></div>
    <div class="method-summary">Delete user (<span class="nickname">slurmdbV0038DeleteUser</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">user_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm User Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_user_delete">dbv0.0.38_response_user_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete user
        <a href="#dbv0.0.38_response_user_delete">dbv0.0.38_response_user_delete</a>
    <h4 class="field-label">default</h4>
    User not found or unable to delete user
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038DeleteWckey"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.38/wckey/{wckey}</code></pre></div>
    <div class="method-summary">Delete wckey (<span class="nickname">slurmdbV0038DeleteWckey</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">wckey (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm wckey name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_wckey_delete">dbv0.0.38_response_wckey_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete wckey
        <a href="#dbv0.0.38_response_wckey_delete">dbv0.0.38_response_wckey_delete</a>
    <h4 class="field-label">default</h4>
    wckey not found or unable to delete wckey
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038Diag"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/diag</code></pre></div>
    <div class="method-summary">Get slurmdb diagnostics (<span class="nickname">slurmdbV0038Diag</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_diag">dbv0.0.38_diag</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ],
  "statistics" : {
    "time_start" : 0,
    "RPCs" : [ {
      "rpc" : "rpc",
      "count" : 7,
      "time" : {
        "average" : 9,
        "total" : 3
      }
    }, {
      "rpc" : "rpc",
      "count" : 7,
      "time" : {
        "average" : 9,
        "total" : 3
      }
    } ],
    "rollups" : [ {
      "max_cycle" : 5,
      "last_cycle" : 1,
      "mean_cycles" : 2,
      "last_run" : 6,
      "type" : "type",
      "total_time" : 5
    }, {
      "max_cycle" : 5,
      "last_cycle" : 1,
      "mean_cycles" : 2,
      "last_run" : 6,
      "type" : "type",
      "total_time" : 5
    } ],
    "users" : [ {
      "count" : 2,
      "time" : {
        "average" : 4,
        "total" : 7
      },
      "user" : "user"
    }, {
      "count" : 2,
      "time" : {
        "average" : 4,
        "total" : 7
      },
      "user" : "user"
    } ]
  }
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Dictionary of statistics
        <a href="#dbv0.0.38_diag">dbv0.0.38_diag</a>
    <h4 class="field-label">default</h4>
    Unable to query diagnostics
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetAccount"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/account/{account_name}</code></pre></div>
    <div class="method-summary">Get account info (<span class="nickname">slurmdbV0038GetAccount</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">account_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Account Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted accounts. False by default. default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_account_info">dbv0.0.38_account_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of accounts
        <a href="#dbv0.0.38_account_info">dbv0.0.38_account_info</a>
    <h4 class="field-label">default</h4>
    Account not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetAccounts"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/accounts</code></pre></div>
    <div class="method-summary">Get account list (<span class="nickname">slurmdbV0038GetAccounts</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted accounts. False by default. default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_account_info">dbv0.0.38_account_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of accounts
        <a href="#dbv0.0.38_account_info">dbv0.0.38_account_info</a>
    <h4 class="field-label">default</h4>
    Account not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetAssociation"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/association</code></pre></div>
    <div class="method-summary">Get association info (<span class="nickname">slurmdbV0038GetAssociation</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Cluster name default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Account name default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; User name default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Partition Name default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_associations_info">dbv0.0.38_associations_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "cluster" : "cluster",
    "shares_raw" : 2,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "priority" : 5,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "QOS" : [ "QOS", "QOS" ],
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "shares_raw" : 2,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "priority" : 5,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "QOS" : [ "QOS", "QOS" ],
    "user" : "user",
    "account" : "account"
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of associations
        <a href="#dbv0.0.38_associations_info">dbv0.0.38_associations_info</a>
    <h4 class="field-label">default</h4>
    Association not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetAssociations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/associations</code></pre></div>
    <div class="method-summary">Get association list (<span class="nickname">slurmdbV0038GetAssociations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Cluster name default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Account name default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; User name default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Partition Name default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_associations_info">dbv0.0.38_associations_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "cluster" : "cluster",
    "shares_raw" : 2,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "priority" : 5,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "QOS" : [ "QOS", "QOS" ],
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "shares_raw" : 2,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "priority" : 5,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "QOS" : [ "QOS", "QOS" ],
    "user" : "user",
    "account" : "account"
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of associations
        <a href="#dbv0.0.38_associations_info">dbv0.0.38_associations_info</a>
    <h4 class="field-label">default</h4>
    Association not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetCluster"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/cluster/{cluster_name}</code></pre></div>
    <div class="method-summary">Get cluster info (<span class="nickname">slurmdbV0038GetCluster</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">cluster_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm cluster name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_cluster_info">dbv0.0.38_cluster_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : {
    "root" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }
  },
  "controller" : {
    "port" : 0,
    "host" : "host"
  },
  "nodes" : "nodes",
  "flags" : [ "flags", "flags" ],
  "name" : "name",
  "rpc_version" : 6,
  "tres" : [ {
    "meta" : {
      "Slurm" : {
        "release" : "release",
        "version" : {
          "major" : "major",
          "minor" : "minor",
          "micro" : "micro"
        }
      },
      "plugin" : {
        "name" : "name",
        "type" : "type"
      }
    },
    "errors" : [ {
      "description" : "description",
      "source" : "source",
      "error" : "error",
      "error_number" : 0
    }, {
      "description" : "description",
      "source" : "source",
      "error" : "error",
      "error_number" : 0
    } ]
  }, {
    "meta" : {
      "Slurm" : {
        "release" : "release",
        "version" : {
          "major" : "major",
          "minor" : "minor",
          "micro" : "micro"
        }
      },
      "plugin" : {
        "name" : "name",
        "type" : "type"
      }
    },
    "errors" : [ {
      "description" : "description",
      "source" : "source",
      "error" : "error",
      "error_number" : 0
    }, {
      "description" : "description",
      "source" : "source",
      "error" : "error",
      "error_number" : 0
    } ]
  } ],
  "select_plugin" : "select_plugin"
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Cluster information
        <a href="#dbv0.0.38_cluster_info">dbv0.0.38_cluster_info</a>
    <h4 class="field-label">default</h4>
    Cluster not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetClusters"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/clusters</code></pre></div>
    <div class="method-summary">Get cluster list (<span class="nickname">slurmdbV0038GetClusters</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_cluster_info">dbv0.0.38_cluster_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : {
    "root" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }
  },
  "controller" : {
    "port" : 0,
    "host" : "host"
  },
  "nodes" : "nodes",
  "flags" : [ "flags", "flags" ],
  "name" : "name",
  "rpc_version" : 6,
  "tres" : [ {
    "meta" : {
      "Slurm" : {
        "release" : "release",
        "version" : {
          "major" : "major",
          "minor" : "minor",
          "micro" : "micro"
        }
      },
      "plugin" : {
        "name" : "name",
        "type" : "type"
      }
    },
    "errors" : [ {
      "description" : "description",
      "source" : "source",
      "error" : "error",
      "error_number" : 0
    }, {
      "description" : "description",
      "source" : "source",
      "error" : "error",
      "error_number" : 0
    } ]
  }, {
    "meta" : {
      "Slurm" : {
        "release" : "release",
        "version" : {
          "major" : "major",
          "minor" : "minor",
          "micro" : "micro"
        }
      },
      "plugin" : {
        "name" : "name",
        "type" : "type"
      }
    },
    "errors" : [ {
      "description" : "description",
      "source" : "source",
      "error" : "error",
      "error_number" : 0
    }, {
      "description" : "description",
      "source" : "source",
      "error" : "error",
      "error_number" : 0
    } ]
  } ],
  "select_plugin" : "select_plugin"
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of clusters
        <a href="#dbv0.0.38_cluster_info">dbv0.0.38_cluster_info</a>
    <h4 class="field-label">default</h4>
    Cluster not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetConfig"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/config</code></pre></div>
    <div class="method-summary">Dump all configuration information (<span class="nickname">slurmdbV0038GetConfig</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_config_info">dbv0.0.38_config_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "cluster" : "cluster",
    "shares_raw" : 2,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "priority" : 5,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "QOS" : [ "QOS", "QOS" ],
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "shares_raw" : 2,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "priority" : 5,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "QOS" : [ "QOS", "QOS" ],
    "user" : "user",
    "account" : "account"
  } ],
  "qos" : [ {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 6.965117697638846,
    "name" : "name",
    "description" : "description",
    "usage_factor" : 3.5571952270680973,
    "id" : "id",
    "priority" : 6,
    "limits" : {
      "min" : {
        "priority_threshold" : 8,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 7.457744773683766
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  }, {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 6.965117697638846,
    "name" : "name",
    "description" : "description",
    "usage_factor" : 3.5571952270680973,
    "id" : "id",
    "priority" : 6,
    "limits" : {
      "min" : {
        "priority_threshold" : 8,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 7.457744773683766
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  } ],
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "id" : 1,
    "accounting" : [ {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    }, {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    } ],
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "id" : 1,
    "accounting" : [ {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    }, {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    } ],
    "user" : "user"
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "tres" : [ null, null ],
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ],
  "users" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "flags" : [ "flags", "flags" ],
    "name" : "name"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "flags" : [ "flags", "flags" ],
    "name" : "name"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    slurmdbd configuration
        <a href="#dbv0.0.38_config_info">dbv0.0.38_config_info</a>
    <h4 class="field-label">default</h4>
    Unable to dump config
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/job/{job_id}</code></pre></div>
    <div class="method-summary">Get job info (<span class="nickname">slurmdbV0038GetJob</span>)</div>
    <div class="method-notes">This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.</div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm JobID default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_job_info">dbv0.0.38_job_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "flags" : [ "flags", "flags" ],
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : "allocation_nodes",
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 9,
      "CPUs" : 8
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : 5,
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : 5,
      "job_offset" : 9
    },
    "reservation" : {
      "name" : 3,
      "id" : 6
    },
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : "current"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "flags", "flags" ]
    },
    "priority" : 6,
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : "task",
      "exit_code" : {
        "return_code" : 1,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : "task",
      "exit_code" : {
        "return_code" : 1,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    } ],
    "derived_exit_code" : {
      "return_code" : 1,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "nodes" : "nodes",
    "job_id" : 9,
    "exit_code" : {
      "return_code" : 1,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 5,
      "total" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "system" : {
        "seconds" : 4,
        "microseconds" : 7
      },
      "eligible" : 2,
      "start" : 9,
      "limit" : 7,
      "end" : 7,
      "submission" : 3,
      "user" : {
        "seconds" : 1,
        "microseconds" : 6
      },
      "suspended" : 2
    },
    "user" : "user",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "flags" : [ "flags", "flags" ],
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : "allocation_nodes",
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 9,
      "CPUs" : 8
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : 5,
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : 5,
      "job_offset" : 9
    },
    "reservation" : {
      "name" : 3,
      "id" : 6
    },
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : "current"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "flags", "flags" ]
    },
    "priority" : 6,
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : "task",
      "exit_code" : {
        "return_code" : 1,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : "task",
      "exit_code" : {
        "return_code" : 1,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    } ],
    "derived_exit_code" : {
      "return_code" : 1,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "nodes" : "nodes",
    "job_id" : 9,
    "exit_code" : {
      "return_code" : 1,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 5,
      "total" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "system" : {
        "seconds" : 4,
        "microseconds" : 7
      },
      "eligible" : 2,
      "start" : 9,
      "limit" : 7,
      "end" : 7,
      "submission" : 3,
      "user" : {
        "seconds" : 1,
        "microseconds" : 6
      },
      "suspended" : 2
    },
    "user" : "user",
    "account" : "account"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Job description
        <a href="#dbv0.0.38_job_info">dbv0.0.38_job_info</a>
    <h4 class="field-label">default</h4>
    Unable to find job
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetJobs"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/jobs</code></pre></div>
    <div class="method-summary">Get job list (<span class="nickname">slurmdbV0038GetJobs</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">submit_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter by submission time
Accepted formats:
HH:MM[:SS] [AM|PM]
MMDD[YY] or MM/DD[/YY] or MM.DD[.YY]
MM/DD[/YY]-HH:MM[:SS]
YYYY-MM-DD[THH:MM[:SS]] default: null </div><div class="param">start_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter by start time
Accepted formats:
HH:MM[:SS] [AM|PM]
MMDD[YY] or MM/DD[/YY] or MM.DD[.YY]
MM/DD[/YY]-HH:MM[:SS]
YYYY-MM-DD[THH:MM[:SS]] default: null </div><div class="param">end_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter by end time
Accepted formats:
HH:MM[:SS] [AM|PM]
MMDD[YY] or MM/DD[/YY] or MM.DD[.YY]
MM/DD[/YY]-HH:MM[:SS]
YYYY-MM-DD[THH:MM[:SS]] default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of accounts to match default: null </div><div class="param">association (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of associations to match default: null </div><div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of cluster to match default: null </div><div class="param">constraints (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of constraints to match default: null </div><div class="param">cpus_max (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of CPUs high range default: null </div><div class="param">cpus_min (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of CPUs low range default: null </div><div class="param">skip_steps (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Report job step information default: null </div><div class="param">disable_wait_for_result (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Disable waiting for result from slurmdbd default: null </div><div class="param">exit_code (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Exit code of job default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of formats to match default: null </div><div class="param">group (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of groups to match default: null </div><div class="param">job_name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of job names to match default: null </div><div class="param">nodes_max (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of nodes high range default: null </div><div class="param">nodes_min (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of nodes low range default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of partitions to match default: null </div><div class="param">qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of QOS to match default: null </div><div class="param">reason (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of job reasons to match default: null </div><div class="param">reservation (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of reservations to match default: null </div><div class="param">state (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of states to match default: null </div><div class="param">step (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of job steps to match default: null </div><div class="param">node (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of used nodes to match default: null </div><div class="param">wckey (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of wckeys to match default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_job_info">dbv0.0.38_job_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "flags" : [ "flags", "flags" ],
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : "allocation_nodes",
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 9,
      "CPUs" : 8
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : 5,
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : 5,
      "job_offset" : 9
    },
    "reservation" : {
      "name" : 3,
      "id" : 6
    },
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : "current"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "flags", "flags" ]
    },
    "priority" : 6,
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : "task",
      "exit_code" : {
        "return_code" : 1,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : "task",
      "exit_code" : {
        "return_code" : 1,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    } ],
    "derived_exit_code" : {
      "return_code" : 1,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "nodes" : "nodes",
    "job_id" : 9,
    "exit_code" : {
      "return_code" : 1,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 5,
      "total" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "system" : {
        "seconds" : 4,
        "microseconds" : 7
      },
      "eligible" : 2,
      "start" : 9,
      "limit" : 7,
      "end" : 7,
      "submission" : 3,
      "user" : {
        "seconds" : 1,
        "microseconds" : 6
      },
      "suspended" : 2
    },
    "user" : "user",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "flags" : [ "flags", "flags" ],
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : "allocation_nodes",
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 9,
      "CPUs" : 8
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : 5,
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : 5,
      "job_offset" : 9
    },
    "reservation" : {
      "name" : 3,
      "id" : 6
    },
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : "current"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "flags", "flags" ]
    },
    "priority" : 6,
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : "task",
      "exit_code" : {
        "return_code" : 1,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : "task",
      "exit_code" : {
        "return_code" : 1,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    } ],
    "derived_exit_code" : {
      "return_code" : 1,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "nodes" : "nodes",
    "job_id" : 9,
    "exit_code" : {
      "return_code" : 1,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 5,
      "total" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "system" : {
        "seconds" : 4,
        "microseconds" : 7
      },
      "eligible" : 2,
      "start" : 9,
      "limit" : 7,
      "end" : 7,
      "submission" : 3,
      "user" : {
        "seconds" : 1,
        "microseconds" : 6
      },
      "suspended" : 2
    },
    "user" : "user",
    "account" : "account"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of jobs
        <a href="#dbv0.0.38_job_info">dbv0.0.38_job_info</a>
    <h4 class="field-label">default</h4>
    Unable to query jobs
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/qos</code></pre></div>
    <div class="method-summary">Get QOS list (<span class="nickname">slurmdbV0038GetQos</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted QOSs. False by default. default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_qos_info">dbv0.0.38_qos_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "qos" : [ {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 6.965117697638846,
    "name" : "name",
    "description" : "description",
    "usage_factor" : 3.5571952270680973,
    "id" : "id",
    "priority" : 6,
    "limits" : {
      "min" : {
        "priority_threshold" : 8,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 7.457744773683766
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  }, {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 6.965117697638846,
    "name" : "name",
    "description" : "description",
    "usage_factor" : 3.5571952270680973,
    "id" : "id",
    "priority" : 6,
    "limits" : {
      "min" : {
        "priority_threshold" : 8,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 7.457744773683766
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of QOS'
        <a href="#dbv0.0.38_qos_info">dbv0.0.38_qos_info</a>
    <h4 class="field-label">default</h4>
    QOS not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetSingleQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/qos/{qos_name}</code></pre></div>
    <div class="method-summary">Get QOS info (<span class="nickname">slurmdbV0038GetSingleQos</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">qos_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm QOS Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted QOSs. False by default. default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_qos_info">dbv0.0.38_qos_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "qos" : [ {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 6.965117697638846,
    "name" : "name",
    "description" : "description",
    "usage_factor" : 3.5571952270680973,
    "id" : "id",
    "priority" : 6,
    "limits" : {
      "min" : {
        "priority_threshold" : 8,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 7.457744773683766
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  }, {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 6.965117697638846,
    "name" : "name",
    "description" : "description",
    "usage_factor" : 3.5571952270680973,
    "id" : "id",
    "priority" : 6,
    "limits" : {
      "min" : {
        "priority_threshold" : 8,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 7.457744773683766
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    QOS information
        <a href="#dbv0.0.38_qos_info">dbv0.0.38_qos_info</a>
    <h4 class="field-label">default</h4>
    QOS not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetTres"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/tres</code></pre></div>
    <div class="method-summary">Get TRES info (<span class="nickname">slurmdbV0038GetTres</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_tres_info">dbv0.0.38_tres_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "tres" : [ {
    "name" : "name",
    "count" : 0,
    "id" : 6,
    "type" : "type"
  }, {
    "name" : "name",
    "count" : 0,
    "id" : 6,
    "type" : "type"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of TRES
        <a href="#dbv0.0.38_tres_info">dbv0.0.38_tres_info</a>
    <h4 class="field-label">default</h4>
    Unable to retrieve TRES
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetUser"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/user/{user_name}</code></pre></div>
    <div class="method-summary">Get user info (<span class="nickname">slurmdbV0038GetUser</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">user_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm User Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted users. False by default. default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_user_info">dbv0.0.38_user_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ],
  "users" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "flags" : [ "flags", "flags" ],
    "name" : "name"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "flags" : [ "flags", "flags" ],
    "name" : "name"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of users
        <a href="#dbv0.0.38_user_info">dbv0.0.38_user_info</a>
    <h4 class="field-label">default</h4>
    User not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetUsers"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/users</code></pre></div>
    <div class="method-summary">Get user list (<span class="nickname">slurmdbV0038GetUsers</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted users. False by default. default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_user_info">dbv0.0.38_user_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ],
  "users" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "flags" : [ "flags", "flags" ],
    "name" : "name"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "flags" : [ "flags", "flags" ],
    "name" : "name"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of users
        <a href="#dbv0.0.38_user_info">dbv0.0.38_user_info</a>
    <h4 class="field-label">default</h4>
    User not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetWckey"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/wckey/{wckey}</code></pre></div>
    <div class="method-summary">Get wckey info (<span class="nickname">slurmdbV0038GetWckey</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">wckey (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm wckey name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_wckey_info">dbv0.0.38_wckey_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "id" : 1,
    "accounting" : [ {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    }, {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    } ],
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "id" : 1,
    "accounting" : [ {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    }, {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    } ],
    "user" : "user"
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of wckey
        <a href="#dbv0.0.38_wckey_info">dbv0.0.38_wckey_info</a>
    <h4 class="field-label">default</h4>
    wckey not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038GetWckeys"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.38/wckeys</code></pre></div>
    <div class="method-summary">Get wckey list (<span class="nickname">slurmdbV0038GetWckeys</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_wckey_info">dbv0.0.38_wckey_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "id" : 1,
    "accounting" : [ {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    }, {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    } ],
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "id" : 1,
    "accounting" : [ {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    }, {
      "start" : 6,
      "id" : 6,
      "TRES" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : 2
    } ],
    "user" : "user"
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of wckeys
        <a href="#dbv0.0.38_wckey_info">dbv0.0.38_wckey_info</a>
    <h4 class="field-label">default</h4>
    wckey not found
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038SetConfig"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.38/config</code></pre></div>
    <div class="method-summary">Load all configuration information (<span class="nickname">slurmdbV0038SetConfig</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.38_set_config <a href="#dbv0.0.38_set_config">dbv0.0.38_set_config</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_config_response">dbv0.0.38_config_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Load config
        <a href="#dbv0.0.38_config_response">dbv0.0.38_config_response</a>
    <h4 class="field-label">default</h4>
    Unable to set config
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038UpdateAccount"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.38/accounts</code></pre></div>
    <div class="method-summary">Update accounts (<span class="nickname">slurmdbV0038UpdateAccount</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.38_update_account <a href="#dbv0.0.38_update_account">dbv0.0.38_update_account</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_account_response">dbv0.0.38_account_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Add/update list of accounts
        <a href="#dbv0.0.38_account_response">dbv0.0.38_account_response</a>
    <h4 class="field-label">default</h4>
    Unable to add or update accounts
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038UpdateAssociations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.38/associations</code></pre></div>
    <div class="method-summary">Set associations info (<span class="nickname">slurmdbV0038UpdateAssociations</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.38_associations_info <a href="#dbv0.0.38_associations_info">dbv0.0.38_associations_info</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_associations">dbv0.0.38_response_associations</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    status of associations update
        <a href="#dbv0.0.38_response_associations">dbv0.0.38_response_associations</a>
    <h4 class="field-label">default</h4>
    Unable to update associations
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038UpdateQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.38/qos</code></pre></div>
    <div class="method-summary">Set QOS info (<span class="nickname">slurmdbV0038UpdateQos</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.38_update_qos <a href="#dbv0.0.38_update_qos">dbv0.0.38_update_qos</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_qos">dbv0.0.38_response_qos</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    QOS update response
        <a href="#dbv0.0.38_response_qos">dbv0.0.38_response_qos</a>
    <h4 class="field-label">default</h4>
    Unable to update QOSs
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038UpdateTres"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.38/tres</code></pre></div>
    <div class="method-summary">Set TRES info (<span class="nickname">slurmdbV0038UpdateTres</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.38_tres_update <a href="#dbv0.0.38_tres_update">dbv0.0.38_tres_update</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_tres">dbv0.0.38_response_tres</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of TRES
        <a href="#dbv0.0.38_response_tres">dbv0.0.38_response_tres</a>
    <h4 class="field-label">default</h4>
    Unable to update TRES
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0038UpdateUsers"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.38/users</code></pre></div>
    <div class="method-summary">Update user (<span class="nickname">slurmdbV0038UpdateUsers</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.38_update_users <a href="#dbv0.0.38_update_users">dbv0.0.38_update_users</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.38_response_user_update">dbv0.0.38_response_user_update</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 0
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Update users
        <a href="#dbv0.0.38_response_user_update">dbv0.0.38_response_user_update</a>
    <h4 class="field-label">default</h4>
    User not found or not able to update user
        
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039AddClusters"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.39/clusters</code></pre></div>
    <div class="method-summary">Add clusters (<span class="nickname">slurmdbV0039AddClusters</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.39_clusters_info <a href="#dbv0.0.39_clusters_info">dbv0.0.39_clusters_info</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of clusters
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Unable to add cluster
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039AddWckeys"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.39/wckeys</code></pre></div>
    <div class="method-summary">Add wckeys (<span class="nickname">slurmdbV0039AddWckeys</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.39_wckey_info <a href="#dbv0.0.39_wckey_info">dbv0.0.39_wckey_info</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of wckeys
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Unable to add wckey
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039DeleteAccount"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.39/account/{account_name}</code></pre></div>
    <div class="method-summary">Delete account (<span class="nickname">slurmdbV0039DeleteAccount</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">account_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Account Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete account
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Unable to delete account
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039DeleteAssociation"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.39/association</code></pre></div>
    <div class="method-summary">Delete association (<span class="nickname">slurmdbV0039DeleteAssociation</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Cluster name default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Account name default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; User name default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Partition Name default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_response_associations_delete">dbv0.0.39_response_associations_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "removed_associations" : [ "removed_associations", "removed_associations" ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete associations
        <a href="#dbv0.0.39_response_associations_delete">dbv0.0.39_response_associations_delete</a>
    <h4 class="field-label">default</h4>
    Association not found or unable to delete association
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039DeleteAssociations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.39/associations</code></pre></div>
    <div class="method-summary">Delete associations (<span class="nickname">slurmdbV0039DeleteAssociations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Cluster name default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Account name default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; User name default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Partition Name default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_response_associations_delete">dbv0.0.39_response_associations_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "removed_associations" : [ "removed_associations", "removed_associations" ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete associations
        <a href="#dbv0.0.39_response_associations_delete">dbv0.0.39_response_associations_delete</a>
    <h4 class="field-label">default</h4>
    Associations not found or unable to delete association
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039DeleteCluster"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.39/cluster/{cluster_name}</code></pre></div>
    <div class="method-summary">Delete cluster (<span class="nickname">slurmdbV0039DeleteCluster</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">cluster_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm cluster name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete cluster
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Cluster not found or unable to delete cluster
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039DeleteQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.39/qos/{qos_name}</code></pre></div>
    <div class="method-summary">Delete QOS (<span class="nickname">slurmdbV0039DeleteQos</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">qos_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm QOS Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete qos
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Unable to delete QOS
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039DeleteUser"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.39/user/{user_name}</code></pre></div>
    <div class="method-summary">Delete user (<span class="nickname">slurmdbV0039DeleteUser</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">user_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm User Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    User deleted
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    User not found or unable to delete user
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039DeleteWckey"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.39/wckey/{wckey}</code></pre></div>
    <div class="method-summary">Delete wckey (<span class="nickname">slurmdbV0039DeleteWckey</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">wckey (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm wckey name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete wckey
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    wckey not found or unable to delete wckey
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039Diag"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/diag</code></pre></div>
    <div class="method-summary">Get slurmdb diagnostics (<span class="nickname">slurmdbV0039Diag</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_diag">dbv0.0.39_diag</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ],
  "statistics" : {
    "time_start" : 0,
    "RPCs" : [ {
      "rpc" : "rpc",
      "count" : 7,
      "time" : {
        "total" : 9
      }
    }, {
      "rpc" : "rpc",
      "count" : 7,
      "time" : {
        "total" : 9
      }
    } ],
    "rollups" : [ {
      "max_cycle" : 1,
      "mean_cycles" : 2,
      "last run" : 6,
      "type" : "internal",
      "total_time" : 5,
      "total_cycles" : 5
    }, {
      "max_cycle" : 1,
      "mean_cycles" : 2,
      "last run" : 6,
      "type" : "internal",
      "total_time" : 5,
      "total_cycles" : 5
    } ],
    "users" : [ {
      "count" : 3,
      "time" : {
        "total" : 9
      },
      "user" : "user"
    }, {
      "count" : 3,
      "time" : {
        "total" : 9
      },
      "user" : "user"
    } ]
  }
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Dictionary of statistics
        <a href="#dbv0.0.39_diag">dbv0.0.39_diag</a>
    <h4 class="field-label">default</h4>
    Unable to query diagnostics
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetAccount"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/account/{account_name}</code></pre></div>
    <div class="method-summary">Get account info (<span class="nickname">slurmdbV0039GetAccount</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">account_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Account Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted accounts. False by default. default: false </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_account_info">dbv0.0.39_account_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of accounts
        <a href="#dbv0.0.39_account_info">dbv0.0.39_account_info</a>
    <h4 class="field-label">default</h4>
    Account not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetAccounts"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/accounts</code></pre></div>
    <div class="method-summary">Get account list (<span class="nickname">slurmdbV0039GetAccounts</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted accounts. False by default. default: false </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_account_info">dbv0.0.39_account_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of accounts
        <a href="#dbv0.0.39_account_info">dbv0.0.39_account_info</a>
    <h4 class="field-label">default</h4>
    Account not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetAssociation"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/association</code></pre></div>
    <div class="method-summary">Get association info (<span class="nickname">slurmdbV0039GetAssociation</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Cluster name default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Account name default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; User name default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Partition Name default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_associations_info">dbv0.0.39_associations_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "cluster" : "cluster",
    "shares_raw" : 0,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : {
            "number" : 3,
            "set" : false,
            "infinite" : true
          }
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 5.962133916683182,
      "normalized_shares" : 7.061401241503109,
      "effective_normalized_usage" : 9.301444243932576,
      "job_count" : 7,
      "group_used_wallclock" : 1.4658129805029452,
      "normalized_priority" : 2.3021358869347655,
      "normalized_usage" : 3.616076749251911,
      "accrue_job_count" : 6,
      "fairshare_shares" : 5,
      "fairshare_level" : 1.2315135367772556,
      "raw_usage" : 2.027123023002322,
      "active_jobs" : 4
    },
    "flags" : [ "DELETED", "DELETED" ],
    "is_default" : true,
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "shares_raw" : 0,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : {
            "number" : 3,
            "set" : false,
            "infinite" : true
          }
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 5.962133916683182,
      "normalized_shares" : 7.061401241503109,
      "effective_normalized_usage" : 9.301444243932576,
      "job_count" : 7,
      "group_used_wallclock" : 1.4658129805029452,
      "normalized_priority" : 2.3021358869347655,
      "normalized_usage" : 3.616076749251911,
      "accrue_job_count" : 6,
      "fairshare_shares" : 5,
      "fairshare_level" : 1.2315135367772556,
      "raw_usage" : 2.027123023002322,
      "active_jobs" : 4
    },
    "flags" : [ "DELETED", "DELETED" ],
    "is_default" : true,
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of associations
        <a href="#dbv0.0.39_associations_info">dbv0.0.39_associations_info</a>
    <h4 class="field-label">default</h4>
    Association not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetAssociations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/associations</code></pre></div>
    <div class="method-summary">Get association list (<span class="nickname">slurmdbV0039GetAssociations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Cluster name default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Account name default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; User name default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Partition Name default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_associations_info">dbv0.0.39_associations_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "cluster" : "cluster",
    "shares_raw" : 0,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : {
            "number" : 3,
            "set" : false,
            "infinite" : true
          }
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 5.962133916683182,
      "normalized_shares" : 7.061401241503109,
      "effective_normalized_usage" : 9.301444243932576,
      "job_count" : 7,
      "group_used_wallclock" : 1.4658129805029452,
      "normalized_priority" : 2.3021358869347655,
      "normalized_usage" : 3.616076749251911,
      "accrue_job_count" : 6,
      "fairshare_shares" : 5,
      "fairshare_level" : 1.2315135367772556,
      "raw_usage" : 2.027123023002322,
      "active_jobs" : 4
    },
    "flags" : [ "DELETED", "DELETED" ],
    "is_default" : true,
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "shares_raw" : 0,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : {
            "number" : 3,
            "set" : false,
            "infinite" : true
          }
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 5.962133916683182,
      "normalized_shares" : 7.061401241503109,
      "effective_normalized_usage" : 9.301444243932576,
      "job_count" : 7,
      "group_used_wallclock" : 1.4658129805029452,
      "normalized_priority" : 2.3021358869347655,
      "normalized_usage" : 3.616076749251911,
      "accrue_job_count" : 6,
      "fairshare_shares" : 5,
      "fairshare_level" : 1.2315135367772556,
      "raw_usage" : 2.027123023002322,
      "active_jobs" : 4
    },
    "flags" : [ "DELETED", "DELETED" ],
    "is_default" : true,
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of associations
        <a href="#dbv0.0.39_associations_info">dbv0.0.39_associations_info</a>
    <h4 class="field-label">default</h4>
    Association not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetCluster"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/cluster/{cluster_name}</code></pre></div>
    <div class="method-summary">Get cluster info (<span class="nickname">slurmdbV0039GetCluster</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">cluster_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm cluster name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_clusters_info">dbv0.0.39_clusters_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ],
  "clusters" : [ {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 9
    },
    "nodes" : "nodes",
    "flags" : [ "REGISTERING", "REGISTERING" ],
    "name" : "name",
    "rpc_version" : 9,
    "tres" : [ {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  }, {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 9
    },
    "nodes" : "nodes",
    "flags" : [ "REGISTERING", "REGISTERING" ],
    "name" : "name",
    "rpc_version" : 9,
    "tres" : [ {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Cluster information
        <a href="#dbv0.0.39_clusters_info">dbv0.0.39_clusters_info</a>
    <h4 class="field-label">default</h4>
    Cluster not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetClusters"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/clusters</code></pre></div>
    <div class="method-summary">Get cluster list (<span class="nickname">slurmdbV0039GetClusters</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_clusters_info">dbv0.0.39_clusters_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ],
  "clusters" : [ {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 9
    },
    "nodes" : "nodes",
    "flags" : [ "REGISTERING", "REGISTERING" ],
    "name" : "name",
    "rpc_version" : 9,
    "tres" : [ {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  }, {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 9
    },
    "nodes" : "nodes",
    "flags" : [ "REGISTERING", "REGISTERING" ],
    "name" : "name",
    "rpc_version" : 9,
    "tres" : [ {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of clusters
        <a href="#dbv0.0.39_clusters_info">dbv0.0.39_clusters_info</a>
    <h4 class="field-label">default</h4>
    Cluster not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetConfig"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/config</code></pre></div>
    <div class="method-summary">Dump all configuration information (<span class="nickname">slurmdbV0039GetConfig</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_config_info">dbv0.0.39_config_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "cluster" : "cluster",
    "shares_raw" : 0,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : {
            "number" : 3,
            "set" : false,
            "infinite" : true
          }
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 5.962133916683182,
      "normalized_shares" : 7.061401241503109,
      "effective_normalized_usage" : 9.301444243932576,
      "job_count" : 7,
      "group_used_wallclock" : 1.4658129805029452,
      "normalized_priority" : 2.3021358869347655,
      "normalized_usage" : 3.616076749251911,
      "accrue_job_count" : 6,
      "fairshare_shares" : 5,
      "fairshare_level" : 1.2315135367772556,
      "raw_usage" : 2.027123023002322,
      "active_jobs" : 4
    },
    "flags" : [ "DELETED", "DELETED" ],
    "is_default" : true,
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "shares_raw" : 0,
    "max" : {
      "jobs" : {
        "per" : {
          "wall_clock" : {
            "number" : 3,
            "set" : false,
            "infinite" : true
          }
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 5.962133916683182,
      "normalized_shares" : 7.061401241503109,
      "effective_normalized_usage" : 9.301444243932576,
      "job_count" : 7,
      "group_used_wallclock" : 1.4658129805029452,
      "normalized_priority" : 2.3021358869347655,
      "normalized_usage" : 3.616076749251911,
      "accrue_job_count" : 6,
      "fairshare_shares" : 5,
      "fairshare_level" : 1.2315135367772556,
      "raw_usage" : 2.027123023002322,
      "active_jobs" : 4
    },
    "flags" : [ "DELETED", "DELETED" ],
    "is_default" : true,
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  } ],
  "qos" : [ {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "id" : 1,
    "priority" : 4,
    "limits" : {
      "min" : {
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            } ]
          }
        }
      }
    },
    "preempt" : {
      "exempt_time" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    }
  }, {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "id" : 1,
    "priority" : 4,
    "limits" : {
      "min" : {
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            } ]
          }
        }
      }
    },
    "preempt" : {
      "exempt_time" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    }
  } ],
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    }, {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    } ],
    "id" : 7,
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    }, {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    } ],
    "id" : 7,
    "user" : "user"
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "tres" : [ {
    "name" : "name",
    "count" : 6,
    "id" : 1,
    "type" : "type"
  }, {
    "name" : "name",
    "count" : 6,
    "id" : 1,
    "type" : "type"
  } ],
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ],
  "users" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  } ],
  "clusters" : [ {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 9
    },
    "nodes" : "nodes",
    "flags" : [ "REGISTERING", "REGISTERING" ],
    "name" : "name",
    "rpc_version" : 9,
    "tres" : [ {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  }, {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 9
    },
    "nodes" : "nodes",
    "flags" : [ "REGISTERING", "REGISTERING" ],
    "name" : "name",
    "rpc_version" : 9,
    "tres" : [ {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 6,
      "id" : 1,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    slurmdbd configuration
        <a href="#dbv0.0.39_config_info">dbv0.0.39_config_info</a>
    <h4 class="field-label">default</h4>
    Unable to dump config
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/job/{job_id}</code></pre></div>
    <div class="method-summary">Get job info (<span class="nickname">slurmdbV0039GetJob</span>)</div>
    <div class="method-notes">This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.</div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm JobID default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_job_info">dbv0.0.39_job_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "flags" : [ "NONE", "NONE" ],
    "used_gres" : "used_gres",
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : 5,
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 4
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task"
    },
    "het" : {
      "job_offset" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "submit_line" : "submit_line",
    "extra" : "extra",
    "reservation" : {
      "name" : "name"
    },
    "block" : "block",
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "ASSIGNED_DEFAULT", "ASSIGNED_DEFAULT" ]
    },
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "steps" : [ {
      "nodes" : {
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 2,
        "signal" : {
          "name" : "name",
          "signal_id" : 7
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor"
      },
      "pid" : "pid",
      "step" : {
        "name" : "name"
      },
      "tres" : {
        "allocated" : [ {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        } ]
      },
      "time" : {
        "user" : {
          "microseconds" : 7
        }
      },
      "state" : "state",
      "tasks" : {
        "count" : 1
      },
      "statistics" : {
        "energy" : {
          "consumed" : 1
        }
      }
    }, {
      "nodes" : {
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 2,
        "signal" : {
          "name" : "name",
          "signal_id" : 7
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor"
      },
      "pid" : "pid",
      "step" : {
        "name" : "name"
      },
      "tres" : {
        "allocated" : [ {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        } ]
      },
      "time" : {
        "user" : {
          "microseconds" : 7
        }
      },
      "state" : "state",
      "tasks" : {
        "count" : 1
      },
      "statistics" : {
        "energy" : {
          "consumed" : 1
        }
      }
    } ],
    "script" : "script",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : 2,
      "signal" : {
        "name" : "name",
        "signal_id" : 7
      },
      "status" : "status"
    },
    "licenses" : "licenses",
    "nodes" : "nodes",
    "job_id" : 2,
    "exit_code" : {
      "return_code" : 2,
      "signal" : {
        "name" : "name",
        "signal_id" : 7
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "system" : "system"
    },
    "time" : {
      "user" : {
        "microseconds" : 9
      }
    },
    "user" : "user",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "flags" : [ "NONE", "NONE" ],
    "used_gres" : "used_gres",
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : 5,
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 4
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task"
    },
    "het" : {
      "job_offset" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "submit_line" : "submit_line",
    "extra" : "extra",
    "reservation" : {
      "name" : "name"
    },
    "block" : "block",
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "ASSIGNED_DEFAULT", "ASSIGNED_DEFAULT" ]
    },
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "steps" : [ {
      "nodes" : {
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 2,
        "signal" : {
          "name" : "name",
          "signal_id" : 7
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor"
      },
      "pid" : "pid",
      "step" : {
        "name" : "name"
      },
      "tres" : {
        "allocated" : [ {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        } ]
      },
      "time" : {
        "user" : {
          "microseconds" : 7
        }
      },
      "state" : "state",
      "tasks" : {
        "count" : 1
      },
      "statistics" : {
        "energy" : {
          "consumed" : 1
        }
      }
    }, {
      "nodes" : {
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 2,
        "signal" : {
          "name" : "name",
          "signal_id" : 7
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor"
      },
      "pid" : "pid",
      "step" : {
        "name" : "name"
      },
      "tres" : {
        "allocated" : [ {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        } ]
      },
      "time" : {
        "user" : {
          "microseconds" : 7
        }
      },
      "state" : "state",
      "tasks" : {
        "count" : 1
      },
      "statistics" : {
        "energy" : {
          "consumed" : 1
        }
      }
    } ],
    "script" : "script",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : 2,
      "signal" : {
        "name" : "name",
        "signal_id" : 7
      },
      "status" : "status"
    },
    "licenses" : "licenses",
    "nodes" : "nodes",
    "job_id" : 2,
    "exit_code" : {
      "return_code" : 2,
      "signal" : {
        "name" : "name",
        "signal_id" : 7
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "system" : "system"
    },
    "time" : {
      "user" : {
        "microseconds" : 9
      }
    },
    "user" : "user",
    "account" : "account"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Job description
        <a href="#dbv0.0.39_job_info">dbv0.0.39_job_info</a>
    <h4 class="field-label">default</h4>
    Unable to find job
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetJobs"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/jobs</code></pre></div>
    <div class="method-summary">Get job list (<span class="nickname">slurmdbV0039GetJobs</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">users (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter by comma delimited list of user names default: null </div><div class="param">submit_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter by submission time
Accepted formats:
HH:MM[:SS] [AM|PM]
MMDD[YY] or MM/DD[/YY] or MM.DD[.YY]
MM/DD[/YY]-HH:MM[:SS]
YYYY-MM-DD[THH:MM[:SS]] default: null </div><div class="param">start_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter by start time
Accepted formats:
HH:MM[:SS] [AM|PM]
MMDD[YY] or MM/DD[/YY] or MM.DD[.YY]
MM/DD[/YY]-HH:MM[:SS]
YYYY-MM-DD[THH:MM[:SS]] default: null </div><div class="param">end_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter by end time
Accepted formats:
HH:MM[:SS] [AM|PM]
MMDD[YY] or MM/DD[/YY] or MM.DD[.YY]
MM/DD[/YY]-HH:MM[:SS]
YYYY-MM-DD[THH:MM[:SS]] default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of accounts to match default: null </div><div class="param">association (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of associations to match default: null </div><div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of cluster to match default: null </div><div class="param">constraints (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of constraints to match default: null </div><div class="param">cpus_max (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of CPUs high range default: null </div><div class="param">cpus_min (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of CPUs low range default: null </div><div class="param">skip_steps (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Report job step information default: false </div><div class="param">disable_wait_for_result (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Disable waiting for result from slurmdbd default: false </div><div class="param">exit_code (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Exit code of job default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of formats to match default: null </div><div class="param">group (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of groups to match default: null </div><div class="param">job_name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of job names to match default: null </div><div class="param">nodes_max (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of nodes high range default: null </div><div class="param">nodes_min (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of nodes low range default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of partitions to match default: null </div><div class="param">qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of QOS to match default: null </div><div class="param">reason (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of job reasons to match default: null </div><div class="param">reservation (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of reservations to match default: null </div><div class="param">state (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of states to match default: null </div><div class="param">step (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of job steps to match default: null </div><div class="param">node (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of used nodes to match default: null </div><div class="param">wckey (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of wckeys to match default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_job_info">dbv0.0.39_job_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "flags" : [ "NONE", "NONE" ],
    "used_gres" : "used_gres",
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : 5,
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 4
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task"
    },
    "het" : {
      "job_offset" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "submit_line" : "submit_line",
    "extra" : "extra",
    "reservation" : {
      "name" : "name"
    },
    "block" : "block",
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "ASSIGNED_DEFAULT", "ASSIGNED_DEFAULT" ]
    },
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "steps" : [ {
      "nodes" : {
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 2,
        "signal" : {
          "name" : "name",
          "signal_id" : 7
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor"
      },
      "pid" : "pid",
      "step" : {
        "name" : "name"
      },
      "tres" : {
        "allocated" : [ {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        } ]
      },
      "time" : {
        "user" : {
          "microseconds" : 7
        }
      },
      "state" : "state",
      "tasks" : {
        "count" : 1
      },
      "statistics" : {
        "energy" : {
          "consumed" : 1
        }
      }
    }, {
      "nodes" : {
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 2,
        "signal" : {
          "name" : "name",
          "signal_id" : 7
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor"
      },
      "pid" : "pid",
      "step" : {
        "name" : "name"
      },
      "tres" : {
        "allocated" : [ {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        } ]
      },
      "time" : {
        "user" : {
          "microseconds" : 7
        }
      },
      "state" : "state",
      "tasks" : {
        "count" : 1
      },
      "statistics" : {
        "energy" : {
          "consumed" : 1
        }
      }
    } ],
    "script" : "script",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : 2,
      "signal" : {
        "name" : "name",
        "signal_id" : 7
      },
      "status" : "status"
    },
    "licenses" : "licenses",
    "nodes" : "nodes",
    "job_id" : 2,
    "exit_code" : {
      "return_code" : 2,
      "signal" : {
        "name" : "name",
        "signal_id" : 7
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "system" : "system"
    },
    "time" : {
      "user" : {
        "microseconds" : 9
      }
    },
    "user" : "user",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "flags" : [ "NONE", "NONE" ],
    "used_gres" : "used_gres",
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : 5,
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 4
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task"
    },
    "het" : {
      "job_offset" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    },
    "submit_line" : "submit_line",
    "extra" : "extra",
    "reservation" : {
      "name" : "name"
    },
    "block" : "block",
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "ASSIGNED_DEFAULT", "ASSIGNED_DEFAULT" ]
    },
    "priority" : {
      "number" : 3,
      "set" : false,
      "infinite" : true
    },
    "steps" : [ {
      "nodes" : {
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 2,
        "signal" : {
          "name" : "name",
          "signal_id" : 7
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor"
      },
      "pid" : "pid",
      "step" : {
        "name" : "name"
      },
      "tres" : {
        "allocated" : [ {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        } ]
      },
      "time" : {
        "user" : {
          "microseconds" : 7
        }
      },
      "state" : "state",
      "tasks" : {
        "count" : 1
      },
      "statistics" : {
        "energy" : {
          "consumed" : 1
        }
      }
    }, {
      "nodes" : {
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 2,
        "signal" : {
          "name" : "name",
          "signal_id" : 7
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor"
      },
      "pid" : "pid",
      "step" : {
        "name" : "name"
      },
      "tres" : {
        "allocated" : [ {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        } ]
      },
      "time" : {
        "user" : {
          "microseconds" : 7
        }
      },
      "state" : "state",
      "tasks" : {
        "count" : 1
      },
      "statistics" : {
        "energy" : {
          "consumed" : 1
        }
      }
    } ],
    "script" : "script",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : 2,
      "signal" : {
        "name" : "name",
        "signal_id" : 7
      },
      "status" : "status"
    },
    "licenses" : "licenses",
    "nodes" : "nodes",
    "job_id" : 2,
    "exit_code" : {
      "return_code" : 2,
      "signal" : {
        "name" : "name",
        "signal_id" : 7
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "system" : "system"
    },
    "time" : {
      "user" : {
        "microseconds" : 9
      }
    },
    "user" : "user",
    "account" : "account"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of jobs
        <a href="#dbv0.0.39_job_info">dbv0.0.39_job_info</a>
    <h4 class="field-label">default</h4>
    Unable to query jobs
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/qos</code></pre></div>
    <div class="method-summary">Get QOS list (<span class="nickname">slurmdbV0039GetQos</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted QOSs. False by default. default: false </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_qos_info">dbv0.0.39_qos_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "qos" : [ {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "id" : 1,
    "priority" : 4,
    "limits" : {
      "min" : {
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            } ]
          }
        }
      }
    },
    "preempt" : {
      "exempt_time" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    }
  }, {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "id" : 1,
    "priority" : 4,
    "limits" : {
      "min" : {
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            } ]
          }
        }
      }
    },
    "preempt" : {
      "exempt_time" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    }
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of QOS'
        <a href="#dbv0.0.39_qos_info">dbv0.0.39_qos_info</a>
    <h4 class="field-label">default</h4>
    QOS not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetSingleQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/qos/{qos_name}</code></pre></div>
    <div class="method-summary">Get QOS info (<span class="nickname">slurmdbV0039GetSingleQos</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">qos_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm QOS Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted QOSs. False by default. default: false </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_qos_info">dbv0.0.39_qos_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "qos" : [ {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "id" : 1,
    "priority" : 4,
    "limits" : {
      "min" : {
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            } ]
          }
        }
      }
    },
    "preempt" : {
      "exempt_time" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    }
  }, {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 5.025004791520295,
      "set" : false,
      "infinite" : true
    },
    "id" : 1,
    "priority" : 4,
    "limits" : {
      "min" : {
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 6,
              "id" : 1,
              "type" : "type"
            } ]
          }
        }
      }
    },
    "preempt" : {
      "exempt_time" : {
        "number" : 3,
        "set" : false,
        "infinite" : true
      }
    }
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    QOS information
        <a href="#dbv0.0.39_qos_info">dbv0.0.39_qos_info</a>
    <h4 class="field-label">default</h4>
    QOS not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetTres"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/tres</code></pre></div>
    <div class="method-summary">Get TRES info (<span class="nickname">slurmdbV0039GetTres</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_tres_info">dbv0.0.39_tres_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "tres" : [ {
    "name" : "name",
    "count" : 6,
    "id" : 1,
    "type" : "type"
  }, {
    "name" : "name",
    "count" : 6,
    "id" : 1,
    "type" : "type"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of TRES
        <a href="#dbv0.0.39_tres_info">dbv0.0.39_tres_info</a>
    <h4 class="field-label">default</h4>
    Unable to retrieve TRES
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetUser"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/user/{user_name}</code></pre></div>
    <div class="method-summary">Get user info (<span class="nickname">slurmdbV0039GetUser</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">user_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm User Name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted users. False by default. default: false </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_user_info">dbv0.0.39_user_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ],
  "users" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of users
        <a href="#dbv0.0.39_user_info">dbv0.0.39_user_info</a>
    <h4 class="field-label">default</h4>
    User not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetUsers"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/users</code></pre></div>
    <div class="method-summary">Get user list (<span class="nickname">slurmdbV0039GetUsers</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Include deleted users. False by default. default: false </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_user_info">dbv0.0.39_user_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ],
  "users" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      }, {
        "start" : 6,
        "id" : 1,
        "TRES" : {
          "name" : "name",
          "count" : 6,
          "id" : 1,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        }
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of users
        <a href="#dbv0.0.39_user_info">dbv0.0.39_user_info</a>
    <h4 class="field-label">default</h4>
    User not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetWckey"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/wckey/{wckey}</code></pre></div>
    <div class="method-summary">Get wckey info (<span class="nickname">slurmdbV0039GetWckey</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">wckey (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm wckey name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_wckey_info">dbv0.0.39_wckey_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    }, {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    } ],
    "id" : 7,
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    }, {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    } ],
    "id" : 7,
    "user" : "user"
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of wckey
        <a href="#dbv0.0.39_wckey_info">dbv0.0.39_wckey_info</a>
    <h4 class="field-label">default</h4>
    wckey not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039GetWckeys"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.39/wckeys</code></pre></div>
    <div class="method-summary">Get wckey list (<span class="nickname">slurmdbV0039GetWckeys</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.39_wckey_info">dbv0.0.39_wckey_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    }, {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    } ],
    "id" : 7,
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    }, {
      "start" : 6,
      "id" : 1,
      "TRES" : {
        "name" : "name",
        "count" : 6,
        "id" : 1,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      }
    } ],
    "id" : 7,
    "user" : "user"
  } ],
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 5
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of wckeys
        <a href="#dbv0.0.39_wckey_info">dbv0.0.39_wckey_info</a>
    <h4 class="field-label">default</h4>
    wckey not found
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039SetConfig"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.39/config</code></pre></div>
    <div class="method-summary">Load all configuration information (<span class="nickname">slurmdbV0039SetConfig</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.39_set_config <a href="#dbv0.0.39_set_config">dbv0.0.39_set_config</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Load config
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Unable to set config
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039UpdateAccounts"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.39/accounts</code></pre></div>
    <div class="method-summary">Update accounts (<span class="nickname">slurmdbV0039UpdateAccounts</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.39_account_info <a href="#dbv0.0.39_account_info">dbv0.0.39_account_info</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Add/update list of accounts
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Unable to add or update accounts
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039UpdateAssociations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.39/associations</code></pre></div>
    <div class="method-summary">Set associations info (<span class="nickname">slurmdbV0039UpdateAssociations</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.39_associations_info <a href="#dbv0.0.39_associations_info">dbv0.0.39_associations_info</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    status of associations update
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Unable to update associations
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039UpdateQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.39/qos</code></pre></div>
    <div class="method-summary">Set QOS info (<span class="nickname">slurmdbV0039UpdateQos</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.39_update_qos <a href="#dbv0.0.39_update_qos">dbv0.0.39_update_qos</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    QOS update response
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Unable to update QOSs
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039UpdateTres"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.39/tres</code></pre></div>
    <div class="method-summary">Set TRES info (<span class="nickname">slurmdbV0039UpdateTres</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.39_tres_update <a href="#dbv0.0.39_tres_update">dbv0.0.39_tres_update</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of TRES
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    Unable to update TRES
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbV0039UpdateUsers"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.39/users</code></pre></div>
    <div class="method-summary">Update user (<span class="nickname">slurmdbV0039UpdateUsers</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">dbv0.0.39_update_users <a href="#dbv0.0.39_update_users">dbv0.0.39_update_users</a> (required)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash;  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#status">status</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "Slurm" : {
      "release" : "release",
      "version" : {
        "major" : 0,
        "minor" : 1,
        "micro" : 6
      }
    },
    "plugin" : {
      "name" : "name",
      "type" : "type"
    }
  },
  "warnings" : [ {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  }, {
    "warning" : "warning",
    "description" : "description",
    "source" : "source"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Update users
        <a href="#status">status</a>
    <h4 class="field-label">default</h4>
    User not found or not able to update user
        <a href="#status">status</a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdAddClusters"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.37/clusters</code></pre></div>
    <div class="method-summary">Add clusters (<span class="nickname">slurmdbdAddClusters</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_cluster_add">dbv0.0.37_response_cluster_add</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of clusters
        <a href="#dbv0.0.37_response_cluster_add">dbv0.0.37_response_cluster_add</a>
    <h4 class="field-label">default</h4>
    Unable to add cluster
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdAddWckeys"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.37/wckeys</code></pre></div>
    <div class="method-summary">Add wckeys (<span class="nickname">slurmdbdAddWckeys</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_wckey_add">dbv0.0.37_response_wckey_add</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of wckeys
        <a href="#dbv0.0.37_response_wckey_add">dbv0.0.37_response_wckey_add</a>
    <h4 class="field-label">default</h4>
    Unable to add wckey
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdDeleteAccount"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.37/account/{account_name}</code></pre></div>
    <div class="method-summary">Delete account (<span class="nickname">slurmdbdDeleteAccount</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">account_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Account Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_account_delete">dbv0.0.37_response_account_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete account
        <a href="#dbv0.0.37_response_account_delete">dbv0.0.37_response_account_delete</a>
    <h4 class="field-label">default</h4>
    Unable to delete account
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdDeleteAssociation"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.37/association</code></pre></div>
    <div class="method-summary">Delete association (<span class="nickname">slurmdbdDeleteAssociation</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Cluster name default: null </div><div class="param">account (required)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Account name default: null </div><div class="param">user (required)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; User name default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Partition Name default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_association_delete">dbv0.0.37_response_association_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete associations
        <a href="#dbv0.0.37_response_association_delete">dbv0.0.37_response_association_delete</a>
    <h4 class="field-label">default</h4>
    Association not found or unable to delete association
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdDeleteCluster"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.37/cluster/{cluster_name}</code></pre></div>
    <div class="method-summary">Delete cluster (<span class="nickname">slurmdbdDeleteCluster</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">cluster_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm cluster name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_cluster_delete">dbv0.0.37_response_cluster_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete cluster
        <a href="#dbv0.0.37_response_cluster_delete">dbv0.0.37_response_cluster_delete</a>
    <h4 class="field-label">default</h4>
    Cluster not found or unable to delete cluster
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdDeleteQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.37/qos/{qos_name}</code></pre></div>
    <div class="method-summary">Delete QOS (<span class="nickname">slurmdbdDeleteQos</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">qos_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm QOS Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_qos_delete">dbv0.0.37_response_qos_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete qos
        <a href="#dbv0.0.37_response_qos_delete">dbv0.0.37_response_qos_delete</a>
    <h4 class="field-label">default</h4>
    Unable to delete QOS
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdDeleteUser"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.37/user/{user_name}</code></pre></div>
    <div class="method-summary">Delete user (<span class="nickname">slurmdbdDeleteUser</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">user_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm User Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_user_delete">dbv0.0.37_response_user_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete user
        <a href="#dbv0.0.37_response_user_delete">dbv0.0.37_response_user_delete</a>
    <h4 class="field-label">default</h4>
    User not found or unable to delete user
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdDeleteWckey"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.37/wckey/{wckey}</code></pre></div>
    <div class="method-summary">Delete wckey (<span class="nickname">slurmdbdDeleteWckey</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">wckey (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm wckey name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_wckey_delete">dbv0.0.37_response_wckey_delete</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Delete wckey
        <a href="#dbv0.0.37_response_wckey_delete">dbv0.0.37_response_wckey_delete</a>
    <h4 class="field-label">default</h4>
    wckey not found or unable to delete wckey
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdDiag"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/diag</code></pre></div>
    <div class="method-summary">Get slurmdb diagnostics (<span class="nickname">slurmdbdDiag</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_diag">dbv0.0.37_diag</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ],
  "statistics" : {
    "time_start" : 0,
    "RPCs" : [ {
      "rpc" : "rpc",
      "count" : 7,
      "time" : {
        "average" : 9,
        "total" : 3
      }
    }, {
      "rpc" : "rpc",
      "count" : 7,
      "time" : {
        "average" : 9,
        "total" : 3
      }
    } ],
    "rollups" : [ {
      "max_cycle" : 5,
      "last_cycle" : 1,
      "mean_cycles" : 2,
      "last_run" : 6,
      "type" : "type",
      "total_time" : 5
    }, {
      "max_cycle" : 5,
      "last_cycle" : 1,
      "mean_cycles" : 2,
      "last_run" : 6,
      "type" : "type",
      "total_time" : 5
    } ],
    "users" : [ {
      "count" : 2,
      "time" : {
        "average" : 4,
        "total" : 7
      },
      "user" : "user"
    }, {
      "count" : 2,
      "time" : {
        "average" : 4,
        "total" : 7
      },
      "user" : "user"
    } ]
  }
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Dictionary of statistics
        <a href="#dbv0.0.37_diag">dbv0.0.37_diag</a>
    <h4 class="field-label">default</h4>
    Unable to query diagnostics
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetAccount"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/account/{account_name}</code></pre></div>
    <div class="method-summary">Get account info (<span class="nickname">slurmdbdGetAccount</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">account_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Account Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_account_info">dbv0.0.37_account_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of accounts
        <a href="#dbv0.0.37_account_info">dbv0.0.37_account_info</a>
    <h4 class="field-label">default</h4>
    Account not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetAccounts"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/accounts</code></pre></div>
    <div class="method-summary">Get account list (<span class="nickname">slurmdbdGetAccounts</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_account_info">dbv0.0.37_account_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of accounts
        <a href="#dbv0.0.37_account_info">dbv0.0.37_account_info</a>
    <h4 class="field-label">default</h4>
    Account not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetAssociation"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/association</code></pre></div>
    <div class="method-summary">Get association info (<span class="nickname">slurmdbdGetAssociation</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Cluster name default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Account name default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; User name default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Partition Name default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_associations_info">dbv0.0.37_associations_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : 5,
        "active" : 1,
        "accruing" : 5,
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "is_default" : 6,
    "priority" : 2,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : 5,
        "active" : 1,
        "accruing" : 5,
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "is_default" : 6,
    "priority" : 2,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of associations
        <a href="#dbv0.0.37_associations_info">dbv0.0.37_associations_info</a>
    <h4 class="field-label">default</h4>
    Association not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetAssociations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/associations</code></pre></div>
    <div class="method-summary">Get association list (<span class="nickname">slurmdbdGetAssociations</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_associations_info">dbv0.0.37_associations_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : 5,
        "active" : 1,
        "accruing" : 5,
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "is_default" : 6,
    "priority" : 2,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : 5,
        "active" : 1,
        "accruing" : 5,
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "is_default" : 6,
    "priority" : 2,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of associations
        <a href="#dbv0.0.37_associations_info">dbv0.0.37_associations_info</a>
    <h4 class="field-label">default</h4>
    Association not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetCluster"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/cluster/{cluster_name}</code></pre></div>
    <div class="method-summary">Get cluster info (<span class="nickname">slurmdbdGetCluster</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">cluster_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm cluster name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_cluster_info">dbv0.0.37_cluster_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : {
    "root" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }
  },
  "controller" : {
    "port" : 0,
    "host" : "host"
  },
  "nodes" : "nodes",
  "flags" : [ "flags", "flags" ],
  "name" : "name",
  "rpc_version" : 0,
  "tres" : [ {
    "errors" : [ {
      "errno" : 0,
      "error" : "error"
    }, {
      "errno" : 0,
      "error" : "error"
    } ]
  }, {
    "errors" : [ {
      "errno" : 0,
      "error" : "error"
    }, {
      "errno" : 0,
      "error" : "error"
    } ]
  } ],
  "select_plugin" : "select_plugin"
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Cluster information
        <a href="#dbv0.0.37_cluster_info">dbv0.0.37_cluster_info</a>
    <h4 class="field-label">default</h4>
    Cluster not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetClusters"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/clusters</code></pre></div>
    <div class="method-summary">Get cluster list (<span class="nickname">slurmdbdGetClusters</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_cluster_info">dbv0.0.37_cluster_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : {
    "root" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }
  },
  "controller" : {
    "port" : 0,
    "host" : "host"
  },
  "nodes" : "nodes",
  "flags" : [ "flags", "flags" ],
  "name" : "name",
  "rpc_version" : 0,
  "tres" : [ {
    "errors" : [ {
      "errno" : 0,
      "error" : "error"
    }, {
      "errno" : 0,
      "error" : "error"
    } ]
  }, {
    "errors" : [ {
      "errno" : 0,
      "error" : "error"
    }, {
      "errno" : 0,
      "error" : "error"
    } ]
  } ],
  "select_plugin" : "select_plugin"
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of clusters
        <a href="#dbv0.0.37_cluster_info">dbv0.0.37_cluster_info</a>
    <h4 class="field-label">default</h4>
    Cluster not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetDbConfig"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/config</code></pre></div>
    <div class="method-summary">Dump all configuration information (<span class="nickname">slurmdbdGetDbConfig</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_config_info">dbv0.0.37_config_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : 5,
        "active" : 1,
        "accruing" : 5,
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "is_default" : 6,
    "priority" : 2,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : 5,
        "active" : 1,
        "accruing" : 5,
        "per" : {
          "wall_clock" : 6
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : 1
        }
      }
    },
    "usage" : {
      "fairshare_factor" : 3.616076749251911,
      "normalized_shares" : 7.386281948385884,
      "effective_normalized_usage" : 1.2315135367772556,
      "job_count" : 1,
      "group_used_wallclock" : 9.301444243932576,
      "normalized_priority" : 4,
      "accrue_job_count" : 7,
      "fairshare_shares" : 2,
      "fairshare_level" : 6.84685269835264,
      "raw_usage" : 1
    },
    "flags" : [ "flags", "flags" ],
    "is_default" : 6,
    "priority" : 2,
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : 5
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "user" : "user",
    "account" : "account"
  } ],
  "qos" : [ {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 7.386281948385884,
    "description" : "description",
    "usage_factor" : 4.145608029883936,
    "id" : "id",
    "priority" : 2,
    "limits" : {
      "min" : {
        "priority_threshold" : 3,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 9.301444243932576
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  }, {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 7.386281948385884,
    "description" : "description",
    "usage_factor" : 4.145608029883936,
    "id" : "id",
    "priority" : 2,
    "limits" : {
      "min" : {
        "priority_threshold" : 3,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 9.301444243932576
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  } ],
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "accounts" : [ "accounts", "accounts" ],
    "id" : 1,
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "accounts" : [ "accounts", "accounts" ],
    "id" : 1,
    "user" : "user"
  } ],
  "tres" : [ null, null ],
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ],
  "users" : [ {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "name" : "name"
  }, {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "name" : "name"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    slurmdbd configuration
        <a href="#dbv0.0.37_config_info">dbv0.0.37_config_info</a>
    <h4 class="field-label">default</h4>
    Unable to dump config
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetJob"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/job/{job_id}</code></pre></div>
    <div class="method-summary">Get job info (<span class="nickname">slurmdbdGetJob</span>)</div>
    <div class="method-notes">This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.</div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm Job ID default: null format: int64</div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_job_info">dbv0.0.37_job_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "jobs" : [ {
    "cluster" : "cluster",
    "flags" : [ "flags", "flags" ],
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : "allocation_nodes",
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 9,
      "CPUs" : 8
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : 5,
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : "{}",
      "job_offset" : "{}"
    },
    "reservation" : {
      "name" : 3,
      "id" : 6
    },
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : "current"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "flags", "flags" ]
    },
    "priority" : 5,
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 6,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 6,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    } ],
    "derived_exit_code" : {
      "return_code" : 6,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "nodes" : "nodes",
    "job_id" : 1,
    "exit_code" : {
      "return_code" : 6,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 5,
      "total" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "system" : {
        "seconds" : 4,
        "microseconds" : 7
      },
      "eligible" : 2,
      "start" : 9,
      "limit" : 7,
      "end" : 7,
      "submission" : 3,
      "user" : {
        "seconds" : 1,
        "microseconds" : 6
      },
      "suspended" : 2
    },
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "flags" : [ "flags", "flags" ],
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : "allocation_nodes",
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 9,
      "CPUs" : 8
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : 5,
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : "{}",
      "job_offset" : "{}"
    },
    "reservation" : {
      "name" : 3,
      "id" : 6
    },
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : "current"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "flags", "flags" ]
    },
    "priority" : 5,
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 6,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 6,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    } ],
    "derived_exit_code" : {
      "return_code" : 6,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "nodes" : "nodes",
    "job_id" : 1,
    "exit_code" : {
      "return_code" : 6,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 5,
      "total" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "system" : {
        "seconds" : 4,
        "microseconds" : 7
      },
      "eligible" : 2,
      "start" : 9,
      "limit" : 7,
      "end" : 7,
      "submission" : 3,
      "user" : {
        "seconds" : 1,
        "microseconds" : 6
      },
      "suspended" : 2
    },
    "user" : "user",
    "account" : "account"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Job description
        <a href="#dbv0.0.37_job_info">dbv0.0.37_job_info</a>
    <h4 class="field-label">default</h4>
    Unable to find job
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetJobs"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/jobs</code></pre></div>
    <div class="method-summary">Get job list (<span class="nickname">slurmdbdGetJobs</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">submit_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter by submission time
Accepted formats:
HH:MM[:SS] [AM|PM]
MMDD[YY] or MM/DD[/YY] or MM.DD[.YY]
MM/DD[/YY]-HH:MM[:SS]
YYYY-MM-DD[THH:MM[:SS]] default: null </div><div class="param">start_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter by start time
Accepted formats:
HH:MM[:SS] [AM|PM]
MMDD[YY] or MM/DD[/YY] or MM.DD[.YY]
MM/DD[/YY]-HH:MM[:SS]
YYYY-MM-DD[THH:MM[:SS]] default: null </div><div class="param">end_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Filter by end time
Accepted formats:
HH:MM[:SS] [AM|PM]
MMDD[YY] or MM/DD[/YY] or MM.DD[.YY]
MM/DD[/YY]-HH:MM[:SS]
YYYY-MM-DD[THH:MM[:SS]] default: null </div><div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of accounts to match default: null </div><div class="param">association (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of associations to match default: null </div><div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of cluster to match default: null </div><div class="param">constraints (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of constraints to match default: null </div><div class="param">cpus_max (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of CPUs high range default: null </div><div class="param">cpus_min (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of CPUs low range default: null </div><div class="param">skip_steps (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Report job step information default: null </div><div class="param">disable_wait_for_result (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Disable waiting for result from slurmdbd default: null </div><div class="param">exit_code (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Exit code of job default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of formats to match default: null </div><div class="param">group (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of groups to match default: null </div><div class="param">job_name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of job names to match default: null </div><div class="param">nodes_max (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of nodes high range default: null </div><div class="param">nodes_min (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Number of nodes low range default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of partitions to match default: null </div><div class="param">qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of QOS to match default: null </div><div class="param">reason (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of job reasons to match default: null </div><div class="param">reservation (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of reservations to match default: null </div><div class="param">state (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of states to match default: null </div><div class="param">step (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of job steps to match default: null </div><div class="param">node (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of used nodes to match default: null </div><div class="param">wckey (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Comma delimited list of wckeys to match default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_job_info">dbv0.0.37_job_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "jobs" : [ {
    "cluster" : "cluster",
    "flags" : [ "flags", "flags" ],
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : "allocation_nodes",
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 9,
      "CPUs" : 8
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : 5,
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : "{}",
      "job_offset" : "{}"
    },
    "reservation" : {
      "name" : 3,
      "id" : 6
    },
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : "current"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "flags", "flags" ]
    },
    "priority" : 5,
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 6,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 6,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    } ],
    "derived_exit_code" : {
      "return_code" : 6,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "nodes" : "nodes",
    "job_id" : 1,
    "exit_code" : {
      "return_code" : 6,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 5,
      "total" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "system" : {
        "seconds" : 4,
        "microseconds" : 7
      },
      "eligible" : 2,
      "start" : 9,
      "limit" : 7,
      "end" : 7,
      "submission" : 3,
      "user" : {
        "seconds" : 1,
        "microseconds" : 6
      },
      "suspended" : 2
    },
    "user" : "user",
    "account" : "account"
  }, {
    "cluster" : "cluster",
    "flags" : [ "flags", "flags" ],
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : "allocation_nodes",
    "working_directory" : "working_directory",
    "constraints" : "constraints",
    "required" : {
      "memory" : 9,
      "CPUs" : 8
    },
    "partition" : "partition",
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : 5,
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : "{}",
      "job_offset" : "{}"
    },
    "reservation" : {
      "name" : 3,
      "id" : 6
    },
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 6,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : "current"
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "flags", "flags" ]
    },
    "priority" : 5,
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 6,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range"
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : 6,
        "signal" : {
          "name" : "name",
          "signal_id" : 4
        },
        "status" : "status"
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : [ "governor", "governor" ],
        "requested_frequency" : {
          "min" : 6,
          "max" : 3
        }
      },
      "pid" : "pid",
      "step" : {
        "job_id" : 0,
        "het" : {
          "component" : 7
        },
        "name" : "name",
        "id" : "id"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 6,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 6,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 1,
          "microseconds" : 1
        },
        "system" : {
          "seconds" : 4,
          "microseconds" : 7
        },
        "start" : 2,
        "end" : 1,
        "user" : {
          "seconds" : 1,
          "microseconds" : 6
        },
        "suspended" : 6
      },
      "state" : "state",
      "tasks" : {
        "count" : 5
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : 7
        }
      }
    } ],
    "derived_exit_code" : {
      "return_code" : 6,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "nodes" : "nodes",
    "job_id" : 1,
    "exit_code" : {
      "return_code" : 6,
      "signal" : {
        "name" : "name",
        "signal_id" : 4
      },
      "status" : "status"
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 5,
      "total" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "system" : {
        "seconds" : 4,
        "microseconds" : 7
      },
      "eligible" : 2,
      "start" : 9,
      "limit" : 7,
      "end" : 7,
      "submission" : 3,
      "user" : {
        "seconds" : 1,
        "microseconds" : 6
      },
      "suspended" : 2
    },
    "user" : "user",
    "account" : "account"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of jobs
        <a href="#dbv0.0.37_job_info">dbv0.0.37_job_info</a>
    <h4 class="field-label">default</h4>
    Unable to query jobs
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/qos</code></pre></div>
    <div class="method-summary">Get QOS list (<span class="nickname">slurmdbdGetQos</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_qos_info">dbv0.0.37_qos_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "qos" : [ {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 7.386281948385884,
    "description" : "description",
    "usage_factor" : 4.145608029883936,
    "id" : "id",
    "priority" : 2,
    "limits" : {
      "min" : {
        "priority_threshold" : 3,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 9.301444243932576
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  }, {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 7.386281948385884,
    "description" : "description",
    "usage_factor" : 4.145608029883936,
    "id" : "id",
    "priority" : 2,
    "limits" : {
      "min" : {
        "priority_threshold" : 3,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 9.301444243932576
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of QOS'
        <a href="#dbv0.0.37_qos_info">dbv0.0.37_qos_info</a>
    <h4 class="field-label">default</h4>
    QOS not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetSingleQos"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/qos/{qos_name}</code></pre></div>
    <div class="method-summary">Get QOS info (<span class="nickname">slurmdbdGetSingleQos</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">qos_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm QOS Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_qos_info">dbv0.0.37_qos_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "qos" : [ {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 7.386281948385884,
    "description" : "description",
    "usage_factor" : 4.145608029883936,
    "id" : "id",
    "priority" : 2,
    "limits" : {
      "min" : {
        "priority_threshold" : 3,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 9.301444243932576
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  }, {
    "flags" : [ "flags", "flags" ],
    "usage_threshold" : 7.386281948385884,
    "description" : "description",
    "usage_factor" : 4.145608029883936,
    "id" : "id",
    "priority" : 2,
    "limits" : {
      "min" : {
        "priority_threshold" : 3,
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "active_jobs" : {
            "per" : {
              "user" : 9,
              "account" : 5
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : 6,
            "account" : 9
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : 1,
            "job" : 4
          }
        },
        "tres" : {
          "minutes" : {
            "per" : {
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 6,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 6,
              "type" : "type"
            } ]
          }
        }
      },
      "factor" : 9.301444243932576
    },
    "preempt" : {
      "mode" : [ "mode", "mode" ],
      "exempt_time" : 9,
      "list" : [ "list", "list" ]
    }
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    QOS information
        <a href="#dbv0.0.37_qos_info">dbv0.0.37_qos_info</a>
    <h4 class="field-label">default</h4>
    QOS not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetTres"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/tres</code></pre></div>
    <div class="method-summary">Get TRES info (<span class="nickname">slurmdbdGetTres</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_tres_info">dbv0.0.37_tres_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "tres" : [ null, null ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of TRES
        <a href="#dbv0.0.37_tres_info">dbv0.0.37_tres_info</a>
    <h4 class="field-label">default</h4>
    Unable to retrieve TRES
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetUser"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/user/{user_name}</code></pre></div>
    <div class="method-summary">Get user info (<span class="nickname">slurmdbdGetUser</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">user_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm User Name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_user_info">dbv0.0.37_user_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ],
  "users" : [ {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "name" : "name"
  }, {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "name" : "name"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of users
        <a href="#dbv0.0.37_user_info">dbv0.0.37_user_info</a>
    <h4 class="field-label">default</h4>
    User not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetUsers"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/users</code></pre></div>
    <div class="method-summary">Get user list (<span class="nickname">slurmdbdGetUsers</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_user_info">dbv0.0.37_user_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ],
  "users" : [ {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "name" : "name"
  }, {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "user" : "user",
        "account" : "account"
      }
    },
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : "administrator_level",
    "coordinators" : [ {
      "name" : "name",
      "direct" : 0
    }, {
      "name" : "name",
      "direct" : 0
    } ],
    "name" : "name"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of users
        <a href="#dbv0.0.37_user_info">dbv0.0.37_user_info</a>
    <h4 class="field-label">default</h4>
    User not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetWckey"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/wckey/{wckey}</code></pre></div>
    <div class="method-summary">Get wckey info (<span class="nickname">slurmdbdGetWckey</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">wckey (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Slurm wckey name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_wckey_info">dbv0.0.37_wckey_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "accounts" : [ "accounts", "accounts" ],
    "id" : 1,
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "accounts" : [ "accounts", "accounts" ],
    "id" : 1,
    "user" : "user"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of wckey
        <a href="#dbv0.0.37_wckey_info">dbv0.0.37_wckey_info</a>
    <h4 class="field-label">default</h4>
    wckey not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdGetWckeys"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.37/wckeys</code></pre></div>
    <div class="method-summary">Get wckey list (<span class="nickname">slurmdbdGetWckeys</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_wckey_info">dbv0.0.37_wckey_info</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "accounts" : [ "accounts", "accounts" ],
    "id" : 1,
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "flags", "flags" ],
    "accounts" : [ "accounts", "accounts" ],
    "id" : 1,
    "user" : "user"
  } ],
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of wckeys
        <a href="#dbv0.0.37_wckey_info">dbv0.0.37_wckey_info</a>
    <h4 class="field-label">default</h4>
    wckey not found
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdSetDbConfig"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.37/config</code></pre></div>
    <div class="method-summary">Load all configuration information (<span class="nickname">slurmdbdSetDbConfig</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_config_response">dbv0.0.37_config_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Load config
        <a href="#dbv0.0.37_config_response">dbv0.0.37_config_response</a>
    <h4 class="field-label">default</h4>
    Unable to set config
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdUpdateAccount"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.37/accounts</code></pre></div>
    <div class="method-summary">Update accounts (<span class="nickname">slurmdbdUpdateAccount</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_account_response">dbv0.0.37_account_response</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Add/update list of accounts
        <a href="#dbv0.0.37_account_response">dbv0.0.37_account_response</a>
    <h4 class="field-label">default</h4>
    Unable to add or update accounts
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdUpdateAssociations"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.37/associations</code></pre></div>
    <div class="method-summary">Set associations info (<span class="nickname">slurmdbdUpdateAssociations</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_associations">dbv0.0.37_response_associations</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    status of associations update
        <a href="#dbv0.0.37_response_associations">dbv0.0.37_response_associations</a>
    <h4 class="field-label">default</h4>
    Unable to update associations
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdUpdateTres"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.37/tres</code></pre></div>
    <div class="method-summary">Set TRES info (<span class="nickname">slurmdbdUpdateTres</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_tres">dbv0.0.37_response_tres</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of TRES
        <a href="#dbv0.0.37_response_tres">dbv0.0.37_response_tres</a>
    <h4 class="field-label">default</h4>
    Unable to update TRES
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>
  <div class="method"><a name="slurmdbdUpdateUsers"/>
    <div class="method-path">
    <a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.37/users</code></pre></div>
    <div class="method-summary">Update user (<span class="nickname">slurmdbdUpdateUsers</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#dbv0.0.37_response_user_update">dbv0.0.37_response_user_update</a>
      
    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "errors" : [ {
    "errno" : 0,
    "error" : "error"
  }, {
    "errno" : 0,
    "error" : "error"
  } ]
}</code></pre>
    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/x-yaml</div>
    <pre class="example"><code>Custom MIME type example not yet supported: application/x-yaml</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
      <li><code>application/x-yaml</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Update users
        <a href="#dbv0.0.37_response_user_update">dbv0.0.37_response_user_update</a>
    <h4 class="field-label">default</h4>
    User not found or not able to update user
        <a href="#"></a>
  </div> <!-- method -->
  <hr/>

  <h2><a name="__Models">Models</a></h2>
  [ Jump to <a href="#__Methods">Methods</a> ]

  <h3>Table of Contents</h3>
  <ol>
    <li><a href="#dbv0.0.37_account"><code>dbv0.0.37_account</code> - </a></li>
    <li><a href="#dbv0.0.37_account_info"><code>dbv0.0.37_account_info</code> - </a></li>
    <li><a href="#dbv0.0.37_account_response"><code>dbv0.0.37_account_response</code> - </a></li>
    <li><a href="#dbv0.0.37_association"><code>dbv0.0.37_association</code> - </a></li>
    <li><a href="#dbv0.0.37_association_short_info"><code>dbv0.0.37_association_short_info</code> - </a></li>
    <li><a href="#dbv0.0.37_associations_info"><code>dbv0.0.37_associations_info</code> - </a></li>
    <li><a href="#dbv0.0.37_cluster_info"><code>dbv0.0.37_cluster_info</code> - </a></li>
    <li><a href="#dbv0.0.37_config_info"><code>dbv0.0.37_config_info</code> - </a></li>
    <li><a href="#dbv0.0.37_config_response"><code>dbv0.0.37_config_response</code> - </a></li>
    <li><a href="#dbv0.0.37_coordinator_info"><code>dbv0.0.37_coordinator_info</code> - </a></li>
    <li><a href="#dbv0.0.37_diag"><code>dbv0.0.37_diag</code> - </a></li>
    <li><a href="#dbv0.0.37_error"><code>dbv0.0.37_error</code> - </a></li>
    <li><a href="#dbv0.0.37_job"><code>dbv0.0.37_job</code> - </a></li>
    <li><a href="#dbv0.0.37_job_exit_code"><code>dbv0.0.37_job_exit_code</code> - </a></li>
    <li><a href="#dbv0.0.37_job_info"><code>dbv0.0.37_job_info</code> - </a></li>
    <li><a href="#dbv0.0.37_job_step"><code>dbv0.0.37_job_step</code> - </a></li>
    <li><a href="#dbv0.0.37_qos"><code>dbv0.0.37_qos</code> - </a></li>
    <li><a href="#dbv0.0.37_qos_info"><code>dbv0.0.37_qos_info</code> - </a></li>
    <li><a href="#dbv0.0.37_response_account_delete"><code>dbv0.0.37_response_account_delete</code> - </a></li>
    <li><a href="#dbv0.0.37_response_association_delete"><code>dbv0.0.37_response_association_delete</code> - </a></li>
    <li><a href="#dbv0.0.37_response_associations"><code>dbv0.0.37_response_associations</code> - </a></li>
    <li><a href="#dbv0.0.37_response_cluster_add"><code>dbv0.0.37_response_cluster_add</code> - </a></li>
    <li><a href="#dbv0.0.37_response_cluster_delete"><code>dbv0.0.37_response_cluster_delete</code> - </a></li>
    <li><a href="#dbv0.0.37_response_qos_delete"><code>dbv0.0.37_response_qos_delete</code> - </a></li>
    <li><a href="#dbv0.0.37_response_tres"><code>dbv0.0.37_response_tres</code> - </a></li>
    <li><a href="#dbv0.0.37_response_user_delete"><code>dbv0.0.37_response_user_delete</code> - </a></li>
    <li><a href="#dbv0.0.37_response_user_update"><code>dbv0.0.37_response_user_update</code> - </a></li>
    <li><a href="#dbv0.0.37_response_wckey_add"><code>dbv0.0.37_response_wckey_add</code> - </a></li>
    <li><a href="#dbv0.0.37_response_wckey_delete"><code>dbv0.0.37_response_wckey_delete</code> - </a></li>
    <li><a href="#dbv0.0.37_tres_info"><code>dbv0.0.37_tres_info</code> - </a></li>
    <li><a href="#dbv0.0.37_user"><code>dbv0.0.37_user</code> - </a></li>
    <li><a href="#dbv0.0.37_user_info"><code>dbv0.0.37_user_info</code> - </a></li>
    <li><a href="#dbv0.0.37_wckey"><code>dbv0.0.37_wckey</code> - </a></li>
    <li><a href="#dbv0.0.37_wckey_info"><code>dbv0.0.37_wckey_info</code> - </a></li>
    <li><a href="#dbv0.0.38_account"><code>dbv0.0.38_account</code> - </a></li>
    <li><a href="#dbv0.0.38_account_info"><code>dbv0.0.38_account_info</code> - </a></li>
    <li><a href="#dbv0.0.38_account_response"><code>dbv0.0.38_account_response</code> - </a></li>
    <li><a href="#dbv0.0.38_accounting"><code>dbv0.0.38_accounting</code> - </a></li>
    <li><a href="#dbv0.0.38_association"><code>dbv0.0.38_association</code> - </a></li>
    <li><a href="#dbv0.0.38_association_short_info"><code>dbv0.0.38_association_short_info</code> - </a></li>
    <li><a href="#dbv0.0.38_associations_info"><code>dbv0.0.38_associations_info</code> - </a></li>
    <li><a href="#dbv0.0.38_cluster_info"><code>dbv0.0.38_cluster_info</code> - </a></li>
    <li><a href="#dbv0.0.38_clusters_properties"><code>dbv0.0.38_clusters_properties</code> - </a></li>
    <li><a href="#dbv0.0.38_config_info"><code>dbv0.0.38_config_info</code> - </a></li>
    <li><a href="#dbv0.0.38_config_response"><code>dbv0.0.38_config_response</code> - </a></li>
    <li><a href="#dbv0.0.38_coordinator_info"><code>dbv0.0.38_coordinator_info</code> - </a></li>
    <li><a href="#dbv0.0.38_diag"><code>dbv0.0.38_diag</code> - </a></li>
    <li><a href="#dbv0.0.38_error"><code>dbv0.0.38_error</code> - </a></li>
    <li><a href="#dbv0.0.38_job"><code>dbv0.0.38_job</code> - </a></li>
    <li><a href="#dbv0.0.38_job_exit_code"><code>dbv0.0.38_job_exit_code</code> - </a></li>
    <li><a href="#dbv0.0.38_job_info"><code>dbv0.0.38_job_info</code> - </a></li>
    <li><a href="#dbv0.0.38_job_step"><code>dbv0.0.38_job_step</code> - </a></li>
    <li><a href="#dbv0.0.38_meta"><code>dbv0.0.38_meta</code> - </a></li>
    <li><a href="#dbv0.0.38_qos"><code>dbv0.0.38_qos</code> - </a></li>
    <li><a href="#dbv0.0.38_qos_info"><code>dbv0.0.38_qos_info</code> - </a></li>
    <li><a href="#dbv0.0.38_response_account_delete"><code>dbv0.0.38_response_account_delete</code> - </a></li>
    <li><a href="#dbv0.0.38_response_associations"><code>dbv0.0.38_response_associations</code> - </a></li>
    <li><a href="#dbv0.0.38_response_associations_delete"><code>dbv0.0.38_response_associations_delete</code> - </a></li>
    <li><a href="#dbv0.0.38_response_cluster_add"><code>dbv0.0.38_response_cluster_add</code> - </a></li>
    <li><a href="#dbv0.0.38_response_cluster_delete"><code>dbv0.0.38_response_cluster_delete</code> - </a></li>
    <li><a href="#dbv0.0.38_response_qos"><code>dbv0.0.38_response_qos</code> - </a></li>
    <li><a href="#dbv0.0.38_response_qos_delete"><code>dbv0.0.38_response_qos_delete</code> - </a></li>
    <li><a href="#dbv0.0.38_response_tres"><code>dbv0.0.38_response_tres</code> - </a></li>
    <li><a href="#dbv0.0.38_response_user_delete"><code>dbv0.0.38_response_user_delete</code> - </a></li>
    <li><a href="#dbv0.0.38_response_user_update"><code>dbv0.0.38_response_user_update</code> - </a></li>
    <li><a href="#dbv0.0.38_response_wckey_add"><code>dbv0.0.38_response_wckey_add</code> - </a></li>
    <li><a href="#dbv0.0.38_response_wckey_delete"><code>dbv0.0.38_response_wckey_delete</code> - </a></li>
    <li><a href="#dbv0.0.38_set_config"><code>dbv0.0.38_set_config</code> - </a></li>
    <li><a href="#dbv0.0.38_tres_info"><code>dbv0.0.38_tres_info</code> - </a></li>
    <li><a href="#dbv0.0.38_tres_update"><code>dbv0.0.38_tres_update</code> - </a></li>
    <li><a href="#dbv0.0.38_update_account"><code>dbv0.0.38_update_account</code> - </a></li>
    <li><a href="#dbv0.0.38_update_qos"><code>dbv0.0.38_update_qos</code> - </a></li>
    <li><a href="#dbv0.0.38_update_users"><code>dbv0.0.38_update_users</code> - </a></li>
    <li><a href="#dbv0.0.38_user"><code>dbv0.0.38_user</code> - </a></li>
    <li><a href="#dbv0.0.38_user_info"><code>dbv0.0.38_user_info</code> - </a></li>
    <li><a href="#dbv0.0.38_wckey"><code>dbv0.0.38_wckey</code> - </a></li>
    <li><a href="#dbv0.0.38_wckey_info"><code>dbv0.0.38_wckey_info</code> - </a></li>
    <li><a href="#dbv0.0.39_account_info"><code>dbv0.0.39_account_info</code> - </a></li>
    <li><a href="#dbv0.0.39_associations_info"><code>dbv0.0.39_associations_info</code> - </a></li>
    <li><a href="#dbv0.0.39_clusters_info"><code>dbv0.0.39_clusters_info</code> - </a></li>
    <li><a href="#dbv0.0.39_config_info"><code>dbv0.0.39_config_info</code> - </a></li>
    <li><a href="#dbv0.0.39_diag"><code>dbv0.0.39_diag</code> - </a></li>
    <li><a href="#dbv0.0.39_error"><code>dbv0.0.39_error</code> - </a></li>
    <li><a href="#dbv0.0.39_job_info"><code>dbv0.0.39_job_info</code> - </a></li>
    <li><a href="#dbv0.0.39_meta"><code>dbv0.0.39_meta</code> - </a></li>
    <li><a href="#dbv0.0.39_qos_info"><code>dbv0.0.39_qos_info</code> - </a></li>
    <li><a href="#dbv0.0.39_response_associations_delete"><code>dbv0.0.39_response_associations_delete</code> - </a></li>
    <li><a href="#dbv0.0.39_set_config"><code>dbv0.0.39_set_config</code> - </a></li>
    <li><a href="#dbv0.0.39_tres_info"><code>dbv0.0.39_tres_info</code> - </a></li>
    <li><a href="#dbv0.0.39_tres_update"><code>dbv0.0.39_tres_update</code> - </a></li>
    <li><a href="#dbv0.0.39_update_qos"><code>dbv0.0.39_update_qos</code> - </a></li>
    <li><a href="#dbv0.0.39_update_users"><code>dbv0.0.39_update_users</code> - </a></li>
    <li><a href="#dbv0.0.39_user_info"><code>dbv0.0.39_user_info</code> - </a></li>
    <li><a href="#dbv0.0.39_warning"><code>dbv0.0.39_warning</code> - </a></li>
    <li><a href="#dbv0.0.39_wckey_info"><code>dbv0.0.39_wckey_info</code> - </a></li>
    <li><a href="#dbv0_0_37_association_max"><code>dbv0_0_37_association_max</code> - </a></li>
    <li><a href="#dbv0_0_37_association_max_jobs"><code>dbv0_0_37_association_max_jobs</code> - </a></li>
    <li><a href="#dbv0_0_37_association_max_tres"><code>dbv0_0_37_association_max_tres</code> - </a></li>
    <li><a href="#dbv0_0_37_association_max_tres_group"><code>dbv0_0_37_association_max_tres_group</code> - </a></li>
    <li><a href="#dbv0_0_37_association_max_tres_minutes"><code>dbv0_0_37_association_max_tres_minutes</code> - </a></li>
    <li><a href="#dbv0_0_37_association_max_tres_minutes_per"><code>dbv0_0_37_association_max_tres_minutes_per</code> - </a></li>
    <li><a href="#dbv0_0_37_association_max_tres_per"><code>dbv0_0_37_association_max_tres_per</code> - </a></li>
    <li><a href="#dbv0_0_37_cluster_info_associations"><code>dbv0_0_37_cluster_info_associations</code> - </a></li>
    <li><a href="#dbv0_0_37_diag_statistics"><code>dbv0_0_37_diag_statistics</code> - </a></li>
    <li><a href="#dbv0_0_37_job_het"><code>dbv0_0_37_job_het</code> - </a></li>
    <li><a href="#dbv0_0_37_job_step_task"><code>dbv0_0_37_job_step_task</code> - </a></li>
    <li><a href="#dbv0_0_37_job_step_tres"><code>dbv0_0_37_job_step_tres</code> - </a></li>
    <li><a href="#dbv0_0_37_job_step_tres_requested"><code>dbv0_0_37_job_step_tres_requested</code> - </a></li>
    <li><a href="#dbv0_0_37_job_tres"><code>dbv0_0_37_job_tres</code> - </a></li>
    <li><a href="#dbv0_0_37_qos_limits"><code>dbv0_0_37_qos_limits</code> - </a></li>
    <li><a href="#dbv0_0_37_qos_limits_max"><code>dbv0_0_37_qos_limits_max</code> - </a></li>
    <li><a href="#dbv0_0_37_qos_limits_max_tres"><code>dbv0_0_37_qos_limits_max_tres</code> - </a></li>
    <li><a href="#dbv0_0_37_qos_limits_max_tres_minutes"><code>dbv0_0_37_qos_limits_max_tres_minutes</code> - </a></li>
    <li><a href="#dbv0_0_37_qos_limits_max_tres_minutes_per"><code>dbv0_0_37_qos_limits_max_tres_minutes_per</code> - </a></li>
    <li><a href="#dbv0_0_37_qos_limits_max_tres_per"><code>dbv0_0_37_qos_limits_max_tres_per</code> - </a></li>
    <li><a href="#dbv0_0_37_qos_limits_min"><code>dbv0_0_37_qos_limits_min</code> - </a></li>
    <li><a href="#dbv0_0_37_qos_limits_min_tres"><code>dbv0_0_37_qos_limits_min_tres</code> - </a></li>
    <li><a href="#dbv0_0_37_qos_limits_min_tres_per"><code>dbv0_0_37_qos_limits_min_tres_per</code> - </a></li>
    <li><a href="#dbv0_0_37_user_associations"><code>dbv0_0_37_user_associations</code> - </a></li>
    <li><a href="#dbv0_0_38_association_default"><code>dbv0_0_38_association_default</code> - </a></li>
    <li><a href="#dbv0_0_38_association_max"><code>dbv0_0_38_association_max</code> - </a></li>
    <li><a href="#dbv0_0_38_association_max_jobs"><code>dbv0_0_38_association_max_jobs</code> - </a></li>
    <li><a href="#dbv0_0_38_association_max_jobs_per"><code>dbv0_0_38_association_max_jobs_per</code> - </a></li>
    <li><a href="#dbv0_0_38_association_max_per"><code>dbv0_0_38_association_max_per</code> - </a></li>
    <li><a href="#dbv0_0_38_association_max_per_account"><code>dbv0_0_38_association_max_per_account</code> - </a></li>
    <li><a href="#dbv0_0_38_association_max_tres"><code>dbv0_0_38_association_max_tres</code> - </a></li>
    <li><a href="#dbv0_0_38_association_max_tres_minutes"><code>dbv0_0_38_association_max_tres_minutes</code> - </a></li>
    <li><a href="#dbv0_0_38_association_max_tres_minutes_per"><code>dbv0_0_38_association_max_tres_minutes_per</code> - </a></li>
    <li><a href="#dbv0_0_38_association_max_tres_per"><code>dbv0_0_38_association_max_tres_per</code> - </a></li>
    <li><a href="#dbv0_0_38_association_min"><code>dbv0_0_38_association_min</code> - </a></li>
    <li><a href="#dbv0_0_38_association_usage"><code>dbv0_0_38_association_usage</code> - </a></li>
    <li><a href="#dbv0_0_38_cluster_info_associations"><code>dbv0_0_38_cluster_info_associations</code> - </a></li>
    <li><a href="#dbv0_0_38_cluster_info_controller"><code>dbv0_0_38_cluster_info_controller</code> - </a></li>
    <li><a href="#dbv0_0_38_diag_statistics"><code>dbv0_0_38_diag_statistics</code> - </a></li>
    <li><a href="#dbv0_0_38_diag_statistics_RPCs_inner"><code>dbv0_0_38_diag_statistics_RPCs_inner</code> - </a></li>
    <li><a href="#dbv0_0_38_diag_statistics_RPCs_inner_time"><code>dbv0_0_38_diag_statistics_RPCs_inner_time</code> - </a></li>
    <li><a href="#dbv0_0_38_diag_statistics_rollups_inner"><code>dbv0_0_38_diag_statistics_rollups_inner</code> - </a></li>
    <li><a href="#dbv0_0_38_diag_statistics_users_inner"><code>dbv0_0_38_diag_statistics_users_inner</code> - </a></li>
    <li><a href="#dbv0_0_38_diag_statistics_users_inner_time"><code>dbv0_0_38_diag_statistics_users_inner_time</code> - </a></li>
    <li><a href="#dbv0_0_38_job_array"><code>dbv0_0_38_job_array</code> - </a></li>
    <li><a href="#dbv0_0_38_job_array_limits"><code>dbv0_0_38_job_array_limits</code> - </a></li>
    <li><a href="#dbv0_0_38_job_array_limits_max"><code>dbv0_0_38_job_array_limits_max</code> - </a></li>
    <li><a href="#dbv0_0_38_job_array_limits_max_running"><code>dbv0_0_38_job_array_limits_max_running</code> - </a></li>
    <li><a href="#dbv0_0_38_job_comment"><code>dbv0_0_38_job_comment</code> - </a></li>
    <li><a href="#dbv0_0_38_job_exit_code_signal"><code>dbv0_0_38_job_exit_code_signal</code> - </a></li>
    <li><a href="#dbv0_0_38_job_het"><code>dbv0_0_38_job_het</code> - </a></li>
    <li><a href="#dbv0_0_38_job_mcs"><code>dbv0_0_38_job_mcs</code> - </a></li>
    <li><a href="#dbv0_0_38_job_required"><code>dbv0_0_38_job_required</code> - </a></li>
    <li><a href="#dbv0_0_38_job_reservation"><code>dbv0_0_38_job_reservation</code> - </a></li>
    <li><a href="#dbv0_0_38_job_state"><code>dbv0_0_38_job_state</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_CPU"><code>dbv0_0_38_job_step_CPU</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_CPU_requested_frequency"><code>dbv0_0_38_job_step_CPU_requested_frequency</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_nodes"><code>dbv0_0_38_job_step_nodes</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_statistics"><code>dbv0_0_38_job_step_statistics</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_statistics_CPU"><code>dbv0_0_38_job_step_statistics_CPU</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_statistics_energy"><code>dbv0_0_38_job_step_statistics_energy</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_step"><code>dbv0_0_38_job_step_step</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_step_het"><code>dbv0_0_38_job_step_step_het</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_tasks"><code>dbv0_0_38_job_step_tasks</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_time"><code>dbv0_0_38_job_step_time</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_tres"><code>dbv0_0_38_job_step_tres</code> - </a></li>
    <li><a href="#dbv0_0_38_job_step_tres_requested"><code>dbv0_0_38_job_step_tres_requested</code> - </a></li>
    <li><a href="#dbv0_0_38_job_time"><code>dbv0_0_38_job_time</code> - </a></li>
    <li><a href="#dbv0_0_38_job_time_system"><code>dbv0_0_38_job_time_system</code> - </a></li>
    <li><a href="#dbv0_0_38_job_time_total"><code>dbv0_0_38_job_time_total</code> - </a></li>
    <li><a href="#dbv0_0_38_job_time_user"><code>dbv0_0_38_job_time_user</code> - </a></li>
    <li><a href="#dbv0_0_38_job_tres"><code>dbv0_0_38_job_tres</code> - </a></li>
    <li><a href="#dbv0_0_38_job_wckey"><code>dbv0_0_38_job_wckey</code> - </a></li>
    <li><a href="#dbv0_0_38_meta_Slurm"><code>dbv0_0_38_meta_Slurm</code> - </a></li>
    <li><a href="#dbv0_0_38_meta_Slurm_version"><code>dbv0_0_38_meta_Slurm_version</code> - </a></li>
    <li><a href="#dbv0_0_38_meta_plugin"><code>dbv0_0_38_meta_plugin</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits"><code>dbv0_0_38_qos_limits</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max"><code>dbv0_0_38_qos_limits_max</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_accruing"><code>dbv0_0_38_qos_limits_max_accruing</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_accruing_per"><code>dbv0_0_38_qos_limits_max_accruing_per</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_jobs"><code>dbv0_0_38_qos_limits_max_jobs</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_jobs_active_jobs"><code>dbv0_0_38_qos_limits_max_jobs_active_jobs</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_jobs_active_jobs_per"><code>dbv0_0_38_qos_limits_max_jobs_active_jobs_per</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_tres"><code>dbv0_0_38_qos_limits_max_tres</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_tres_minutes"><code>dbv0_0_38_qos_limits_max_tres_minutes</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_tres_minutes_per"><code>dbv0_0_38_qos_limits_max_tres_minutes_per</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_tres_per"><code>dbv0_0_38_qos_limits_max_tres_per</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_wall_clock"><code>dbv0_0_38_qos_limits_max_wall_clock</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_max_wall_clock_per"><code>dbv0_0_38_qos_limits_max_wall_clock_per</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_min"><code>dbv0_0_38_qos_limits_min</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_min_tres"><code>dbv0_0_38_qos_limits_min_tres</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_limits_min_tres_per"><code>dbv0_0_38_qos_limits_min_tres_per</code> - </a></li>
    <li><a href="#dbv0_0_38_qos_preempt"><code>dbv0_0_38_qos_preempt</code> - </a></li>
    <li><a href="#dbv0_0_38_tres_list_inner"><code>dbv0_0_38_tres_list_inner</code> - </a></li>
    <li><a href="#dbv0_0_38_user_default"><code>dbv0_0_38_user_default</code> - </a></li>
    <li><a href="#dbv0_0_39_meta_Slurm"><code>dbv0_0_39_meta_Slurm</code> - </a></li>
    <li><a href="#dbv0_0_39_meta_Slurm_version"><code>dbv0_0_39_meta_Slurm_version</code> - </a></li>
    <li><a href="#status"><code>status</code> - </a></li>
    <li><a href="#v0.0.37_diag"><code>v0.0.37_diag</code> - </a></li>
    <li><a href="#v0.0.37_error"><code>v0.0.37_error</code> - </a></li>
    <li><a href="#v0.0.37_job_properties"><code>v0.0.37_job_properties</code> - </a></li>
    <li><a href="#v0.0.37_job_resources"><code>v0.0.37_job_resources</code> - </a></li>
    <li><a href="#v0.0.37_job_response_properties"><code>v0.0.37_job_response_properties</code> - </a></li>
    <li><a href="#v0.0.37_job_submission"><code>v0.0.37_job_submission</code> - </a></li>
    <li><a href="#v0.0.37_job_submission_response"><code>v0.0.37_job_submission_response</code> - </a></li>
    <li><a href="#v0.0.37_jobs_response"><code>v0.0.37_jobs_response</code> - </a></li>
    <li><a href="#v0.0.37_node"><code>v0.0.37_node</code> - </a></li>
    <li><a href="#v0.0.37_node_allocation"><code>v0.0.37_node_allocation</code> - </a></li>
    <li><a href="#v0.0.37_nodes_response"><code>v0.0.37_nodes_response</code> - </a></li>
    <li><a href="#v0.0.37_partition"><code>v0.0.37_partition</code> - </a></li>
    <li><a href="#v0.0.37_partitions_response"><code>v0.0.37_partitions_response</code> - </a></li>
    <li><a href="#v0.0.37_ping"><code>v0.0.37_ping</code> - </a></li>
    <li><a href="#v0.0.37_pings"><code>v0.0.37_pings</code> - </a></li>
    <li><a href="#v0.0.37_reservation"><code>v0.0.37_reservation</code> - </a></li>
    <li><a href="#v0.0.37_reservations_response"><code>v0.0.37_reservations_response</code> - </a></li>
    <li><a href="#v0.0.37_signal"><code>v0.0.37_signal</code> - </a></li>
    <li><a href="#v0.0.38_diag"><code>v0.0.38_diag</code> - </a></li>
    <li><a href="#v0.0.38_diag_rpcm"><code>v0.0.38_diag_rpcm</code> - </a></li>
    <li><a href="#v0.0.38_diag_rpcu"><code>v0.0.38_diag_rpcu</code> - </a></li>
    <li><a href="#v0.0.38_error"><code>v0.0.38_error</code> - </a></li>
    <li><a href="#v0.0.38_job_properties"><code>v0.0.38_job_properties</code> - </a></li>
    <li><a href="#v0.0.38_job_resources"><code>v0.0.38_job_resources</code> - </a></li>
    <li><a href="#v0.0.38_job_response_properties"><code>v0.0.38_job_response_properties</code> - </a></li>
    <li><a href="#v0.0.38_job_submission"><code>v0.0.38_job_submission</code> - </a></li>
    <li><a href="#v0.0.38_job_submission_response"><code>v0.0.38_job_submission_response</code> - </a></li>
    <li><a href="#v0.0.38_jobs_response"><code>v0.0.38_jobs_response</code> - </a></li>
    <li><a href="#v0.0.38_license"><code>v0.0.38_license</code> - </a></li>
    <li><a href="#v0.0.38_licenses"><code>v0.0.38_licenses</code> - </a></li>
    <li><a href="#v0.0.38_meta"><code>v0.0.38_meta</code> - </a></li>
    <li><a href="#v0.0.38_node"><code>v0.0.38_node</code> - </a></li>
    <li><a href="#v0.0.38_node_allocation"><code>v0.0.38_node_allocation</code> - </a></li>
    <li><a href="#v0.0.38_nodes_response"><code>v0.0.38_nodes_response</code> - </a></li>
    <li><a href="#v0.0.38_partition"><code>v0.0.38_partition</code> - </a></li>
    <li><a href="#v0.0.38_partitions_response"><code>v0.0.38_partitions_response</code> - </a></li>
    <li><a href="#v0.0.38_ping"><code>v0.0.38_ping</code> - </a></li>
    <li><a href="#v0.0.38_pings"><code>v0.0.38_pings</code> - </a></li>
    <li><a href="#v0.0.38_reservation"><code>v0.0.38_reservation</code> - </a></li>
    <li><a href="#v0.0.38_reservations_response"><code>v0.0.38_reservations_response</code> - </a></li>
    <li><a href="#v0.0.38_signal"><code>v0.0.38_signal</code> - </a></li>
    <li><a href="#v0.0.39_account"><code>v0.0.39_account</code> - </a></li>
    <li><a href="#v0.0.39_accounting"><code>v0.0.39_accounting</code> - </a></li>
    <li><a href="#v0.0.39_acct_gather_energy"><code>v0.0.39_acct_gather_energy</code> - </a></li>
    <li><a href="#v0.0.39_assoc"><code>v0.0.39_assoc</code> - </a></li>
    <li><a href="#v0.0.39_assoc_short"><code>v0.0.39_assoc_short</code> - </a></li>
    <li><a href="#v0.0.39_assoc_usage"><code>v0.0.39_assoc_usage</code> - </a></li>
    <li><a href="#v0.0.39_cluster_rec"><code>v0.0.39_cluster_rec</code> - </a></li>
    <li><a href="#v0.0.39_controller_ping"><code>v0.0.39_controller_ping</code> - </a></li>
    <li><a href="#v0.0.39_coord"><code>v0.0.39_coord</code> - </a></li>
    <li><a href="#v0.0.39_cron_entry"><code>v0.0.39_cron_entry</code> - </a></li>
    <li><a href="#v0.0.39_diag"><code>v0.0.39_diag</code> - </a></li>
    <li><a href="#v0.0.39_error"><code>v0.0.39_error</code> - </a></li>
    <li><a href="#v0.0.39_ext_sensors_data"><code>v0.0.39_ext_sensors_data</code> - </a></li>
    <li><a href="#v0.0.39_float64_no_val"><code>v0.0.39_float64_no_val</code> - </a></li>
    <li><a href="#v0.0.39_job"><code>v0.0.39_job</code> - </a></li>
    <li><a href="#v0.0.39_job_desc_msg"><code>v0.0.39_job_desc_msg</code> - </a></li>
    <li><a href="#v0.0.39_job_exit_code"><code>v0.0.39_job_exit_code</code> - </a></li>
    <li><a href="#v0.0.39_job_info"><code>v0.0.39_job_info</code> - </a></li>
    <li><a href="#v0.0.39_job_res"><code>v0.0.39_job_res</code> - </a></li>
    <li><a href="#v0.0.39_job_submission"><code>v0.0.39_job_submission</code> - </a></li>
    <li><a href="#v0.0.39_job_submission_response"><code>v0.0.39_job_submission_response</code> - </a></li>
    <li><a href="#v0.0.39_job_update_response"><code>v0.0.39_job_update_response</code> - </a></li>
    <li><a href="#v0.0.39_jobs_response"><code>v0.0.39_jobs_response</code> - </a></li>
    <li><a href="#v0.0.39_license"><code>v0.0.39_license</code> - </a></li>
    <li><a href="#v0.0.39_licenses_info"><code>v0.0.39_licenses_info</code> - </a></li>
    <li><a href="#v0.0.39_meta"><code>v0.0.39_meta</code> - </a></li>
    <li><a href="#v0.0.39_node"><code>v0.0.39_node</code> - </a></li>
    <li><a href="#v0.0.39_nodes_response"><code>v0.0.39_nodes_response</code> - </a></li>
    <li><a href="#v0.0.39_partition_info"><code>v0.0.39_partition_info</code> - </a></li>
    <li><a href="#v0.0.39_partitions_response"><code>v0.0.39_partitions_response</code> - </a></li>
    <li><a href="#v0.0.39_pings"><code>v0.0.39_pings</code> - </a></li>
    <li><a href="#v0.0.39_power_mgmt_data"><code>v0.0.39_power_mgmt_data</code> - </a></li>
    <li><a href="#v0.0.39_qos"><code>v0.0.39_qos</code> - </a></li>
    <li><a href="#v0.0.39_reservation_core_spec"><code>v0.0.39_reservation_core_spec</code> - </a></li>
    <li><a href="#v0.0.39_reservation_info"><code>v0.0.39_reservation_info</code> - </a></li>
    <li><a href="#v0.0.39_reservations_response"><code>v0.0.39_reservations_response</code> - </a></li>
    <li><a href="#v0.0.39_slurm_step_id"><code>v0.0.39_slurm_step_id</code> - </a></li>
    <li><a href="#v0.0.39_stats_msg"><code>v0.0.39_stats_msg</code> - </a></li>
    <li><a href="#v0.0.39_stats_rec"><code>v0.0.39_stats_rec</code> - </a></li>
    <li><a href="#v0.0.39_stats_rpc"><code>v0.0.39_stats_rpc</code> - </a></li>
    <li><a href="#v0.0.39_stats_user"><code>v0.0.39_stats_user</code> - </a></li>
    <li><a href="#v0.0.39_step"><code>v0.0.39_step</code> - </a></li>
    <li><a href="#v0.0.39_tres"><code>v0.0.39_tres</code> - </a></li>
    <li><a href="#v0.0.39_uint16_no_val"><code>v0.0.39_uint16_no_val</code> - </a></li>
    <li><a href="#v0.0.39_uint32_no_val"><code>v0.0.39_uint32_no_val</code> - </a></li>
    <li><a href="#v0.0.39_uint64_no_val"><code>v0.0.39_uint64_no_val</code> - </a></li>
    <li><a href="#v0.0.39_update_node_msg"><code>v0.0.39_update_node_msg</code> - </a></li>
    <li><a href="#v0.0.39_user"><code>v0.0.39_user</code> - </a></li>
    <li><a href="#v0.0.39_warning"><code>v0.0.39_warning</code> - </a></li>
    <li><a href="#v0.0.39_wckey"><code>v0.0.39_wckey</code> - </a></li>
    <li><a href="#v0.0.39_wckey_tag"><code>v0.0.39_wckey_tag</code> - </a></li>
    <li><a href="#v0_0_37_diag_statistics"><code>v0_0_37_diag_statistics</code> - </a></li>
    <li><a href="#v0_0_38_diag_statistics"><code>v0_0_38_diag_statistics</code> - </a></li>
    <li><a href="#v0_0_38_node_allocation_sockets"><code>v0_0_38_node_allocation_sockets</code> - </a></li>
    <li><a href="#v0_0_38_reservation_purge_completed"><code>v0_0_38_reservation_purge_completed</code> - </a></li>
    <li><a href="#v0_0_39_accounting_allocated"><code>v0_0_39_accounting_allocated</code> - </a></li>
    <li><a href="#v0_0_39_assoc_default"><code>v0_0_39_assoc_default</code> - </a></li>
    <li><a href="#v0_0_39_assoc_max"><code>v0_0_39_assoc_max</code> - </a></li>
    <li><a href="#v0_0_39_assoc_max_jobs"><code>v0_0_39_assoc_max_jobs</code> - </a></li>
    <li><a href="#v0_0_39_assoc_max_jobs_per"><code>v0_0_39_assoc_max_jobs_per</code> - </a></li>
    <li><a href="#v0_0_39_assoc_min"><code>v0_0_39_assoc_min</code> - </a></li>
    <li><a href="#v0_0_39_cluster_rec_associations"><code>v0_0_39_cluster_rec_associations</code> - </a></li>
    <li><a href="#v0_0_39_cluster_rec_controller"><code>v0_0_39_cluster_rec_controller</code> - </a></li>
    <li><a href="#v0_0_39_cron_entry_line"><code>v0_0_39_cron_entry_line</code> - </a></li>
    <li><a href="#v0_0_39_job_array"><code>v0_0_39_job_array</code> - </a></li>
    <li><a href="#v0_0_39_job_array_response_msg_inner"><code>v0_0_39_job_array_response_msg_inner</code> - </a></li>
    <li><a href="#v0_0_39_job_comment"><code>v0_0_39_job_comment</code> - </a></li>
    <li><a href="#v0_0_39_job_exit_code_signal"><code>v0_0_39_job_exit_code_signal</code> - </a></li>
    <li><a href="#v0_0_39_job_het"><code>v0_0_39_job_het</code> - </a></li>
    <li><a href="#v0_0_39_job_info_power"><code>v0_0_39_job_info_power</code> - </a></li>
    <li><a href="#v0_0_39_job_mcs"><code>v0_0_39_job_mcs</code> - </a></li>
    <li><a href="#v0_0_39_job_required"><code>v0_0_39_job_required</code> - </a></li>
    <li><a href="#v0_0_39_job_reservation"><code>v0_0_39_job_reservation</code> - </a></li>
    <li><a href="#v0_0_39_job_state"><code>v0_0_39_job_state</code> - </a></li>
    <li><a href="#v0_0_39_job_time"><code>v0_0_39_job_time</code> - </a></li>
    <li><a href="#v0_0_39_job_time_user"><code>v0_0_39_job_time_user</code> - </a></li>
    <li><a href="#v0_0_39_job_tres"><code>v0_0_39_job_tres</code> - </a></li>
    <li><a href="#v0_0_39_partition_info_accounts"><code>v0_0_39_partition_info_accounts</code> - </a></li>
    <li><a href="#v0_0_39_partition_info_defaults"><code>v0_0_39_partition_info_defaults</code> - </a></li>
    <li><a href="#v0_0_39_partition_info_groups"><code>v0_0_39_partition_info_groups</code> - </a></li>
    <li><a href="#v0_0_39_partition_info_maximums"><code>v0_0_39_partition_info_maximums</code> - </a></li>
    <li><a href="#v0_0_39_partition_info_minimums"><code>v0_0_39_partition_info_minimums</code> - </a></li>
    <li><a href="#v0_0_39_partition_info_nodes"><code>v0_0_39_partition_info_nodes</code> - </a></li>
    <li><a href="#v0_0_39_partition_info_priority"><code>v0_0_39_partition_info_priority</code> - </a></li>
    <li><a href="#v0_0_39_partition_info_qos"><code>v0_0_39_partition_info_qos</code> - </a></li>
    <li><a href="#v0_0_39_partition_info_timeouts"><code>v0_0_39_partition_info_timeouts</code> - </a></li>
    <li><a href="#v0_0_39_partition_info_tres"><code>v0_0_39_partition_info_tres</code> - </a></li>
    <li><a href="#v0_0_39_qos_limits"><code>v0_0_39_qos_limits</code> - </a></li>
    <li><a href="#v0_0_39_qos_limits_min"><code>v0_0_39_qos_limits_min</code> - </a></li>
    <li><a href="#v0_0_39_qos_limits_min_tres"><code>v0_0_39_qos_limits_min_tres</code> - </a></li>
    <li><a href="#v0_0_39_qos_limits_min_tres_per"><code>v0_0_39_qos_limits_min_tres_per</code> - </a></li>
    <li><a href="#v0_0_39_qos_preempt"><code>v0_0_39_qos_preempt</code> - </a></li>
    <li><a href="#v0_0_39_reservation_info_purge_completed"><code>v0_0_39_reservation_info_purge_completed</code> - </a></li>
    <li><a href="#v0_0_39_rollup_stats_inner"><code>v0_0_39_rollup_stats_inner</code> - </a></li>
    <li><a href="#v0_0_39_stats_msg_rpcs_by_type_inner"><code>v0_0_39_stats_msg_rpcs_by_type_inner</code> - </a></li>
    <li><a href="#v0_0_39_stats_msg_rpcs_by_user_inner"><code>v0_0_39_stats_msg_rpcs_by_user_inner</code> - </a></li>
    <li><a href="#v0_0_39_stats_rpc_time"><code>v0_0_39_stats_rpc_time</code> - </a></li>
    <li><a href="#v0_0_39_step_CPU"><code>v0_0_39_step_CPU</code> - </a></li>
    <li><a href="#v0_0_39_step_nodes"><code>v0_0_39_step_nodes</code> - </a></li>
    <li><a href="#v0_0_39_step_statistics"><code>v0_0_39_step_statistics</code> - </a></li>
    <li><a href="#v0_0_39_step_statistics_energy"><code>v0_0_39_step_statistics_energy</code> - </a></li>
    <li><a href="#v0_0_39_step_task"><code>v0_0_39_step_task</code> - </a></li>
    <li><a href="#v0_0_39_step_tasks"><code>v0_0_39_step_tasks</code> - </a></li>
    <li><a href="#v0_0_39_step_time"><code>v0_0_39_step_time</code> - </a></li>
    <li><a href="#v0_0_39_step_time_user"><code>v0_0_39_step_time_user</code> - </a></li>
    <li><a href="#v0_0_39_step_tres"><code>v0_0_39_step_tres</code> - </a></li>
    <li><a href="#v0_0_39_user_default"><code>v0_0_39_user_default</code> - </a></li>
  </ol>

  <div class="model">
    <h3><a name="dbv0.0.37_account"><code>dbv0.0.37_account</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Account description</div>
    <div class="field-items">
      <div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_association_short_info">array[dbv0.0.37_association_short_info]</a></span> List of assigned associations </div>
<div class="param">coordinators (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_coordinator_info">array[dbv0.0.37_coordinator_info]</a></span> List of assigned coordinators </div>
<div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Description of account </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of account </div>
<div class="param">organization (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned organization of account </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of account </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_account_info"><code>dbv0.0.37_account_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_account">array[dbv0.0.37_account]</a></span> List of accounts </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_account_response"><code>dbv0.0.37_account_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_association"><code>dbv0.0.37_association</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Association description</div>
    <div class="field-items">
      <div class="param">is_default (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> is default association </div>
<div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned account </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned cluster </div>
<div class="param">default (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_default">dbv0_0_38_association_default</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of association </div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_association_max">dbv0_0_37_association_max</a></span>  </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_min">dbv0_0_38_association_min</a></span>  </div>
<div class="param">parent_account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Parent account name </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned partition </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Assigned priority </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Assigned QOS </div>
<div class="param">shares_raw (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Raw fairshare shares </div>
<div class="param">usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_usage">dbv0_0_38_association_usage</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned user </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_association_short_info"><code>dbv0.0.37_association_short_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Account name </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition name (optional) </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_associations_info"><code>dbv0.0.37_associations_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_association">array[dbv0.0.37_association]</a></span> Array of associations </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_cluster_info"><code>dbv0.0.37_cluster_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">controller (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_cluster_info_controller">dbv0_0_38_cluster_info_controller</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of cluster </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned nodes </div>
<div class="param">select_plugin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Configured select plugin </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_cluster_info_associations">dbv0_0_37_cluster_info_associations</a></span>  </div>
<div class="param">rpc_version (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number rpc version </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_response_tres">array[dbv0.0.37_response_tres]</a></span> List of TRES in cluster </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_config_info"><code>dbv0.0.37_config_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#array">array[List]</a></span> Array of TRES </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_account">array[dbv0.0.37_account]</a></span> Array of accounts </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_association">array[dbv0.0.37_association]</a></span> Array of associations </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_user">array[dbv0.0.37_user]</a></span> Array of users </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_qos">array[dbv0.0.37_qos]</a></span> Array of qos </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_wckey">array[dbv0.0.37_wckey]</a></span> Array of wckeys </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_config_response"><code>dbv0.0.37_config_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_coordinator_info"><code>dbv0.0.37_coordinator_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of user </div>
<div class="param">direct (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If user is coordinator of this account directly or coordinator status was inheirted from a higher account in the tree </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_diag"><code>dbv0.0.37_diag</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
<div class="param">statistics (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_diag_statistics">dbv0_0_37_diag_statistics</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_error"><code>dbv0.0.37_error</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errno (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Error number </div>
<div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Error message </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_job"><code>dbv0.0.37_job</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Single job description</div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Account charged by job </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_comment">dbv0_0_38_job_comment</a></span>  </div>
<div class="param">allocation_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Nodes allocated to job </div>
<div class="param">array (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_array">dbv0_0_38_job_array</a></span>  </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_time">dbv0_0_38_job_time</a></span>  </div>
<div class="param">association (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_association_short_info">dbv0.0.37_association_short_info</a></span>  </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned cluster </div>
<div class="param">constraints (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Constraints on job </div>
<div class="param">derived_exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_job_exit_code">dbv0.0.37_job_exit_code</a></span>  </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_job_exit_code">dbv0.0.37_job_exit_code</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of job </div>
<div class="param">group (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User's group to run job </div>
<div class="param">het (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_job_het">dbv0_0_37_job_het</a></span>  </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job id </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned job name </div>
<div class="param">mcs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_mcs">dbv0_0_38_job_mcs</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of nodes allocated for job </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned job's partition </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Priority </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned qos name </div>
<div class="param">required (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_required">dbv0_0_38_job_required</a></span>  </div>
<div class="param">kill_request_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User who requested job killed </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_reservation">dbv0_0_38_job_reservation</a></span>  </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_state">dbv0_0_38_job_state</a></span>  </div>
<div class="param">steps (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_job_step">array[dbv0.0.37_job_step]</a></span> Job step description </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_job_tres">dbv0_0_37_job_tres</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job user </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_wckey">dbv0_0_38_job_wckey</a></span>  </div>
<div class="param">working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Directory where job was initially started </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_job_exit_code"><code>dbv0.0.37_job_exit_code</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">status (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job exit status </div>
<div class="param">return_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Return code from parent process </div>
<div class="param">signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_exit_code_signal">dbv0_0_38_job_exit_code_signal</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_job_info"><code>dbv0.0.37_job_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_job">array[dbv0.0.37_job]</a></span> Array of jobs </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_job_step"><code>dbv0.0.37_job_step</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_time">dbv0_0_38_job_step_time</a></span>  </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_job_exit_code">dbv0.0.37_job_exit_code</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_nodes">dbv0_0_38_job_step_nodes</a></span>  </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_tasks">dbv0_0_38_job_step_tasks</a></span>  </div>
<div class="param">pid (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> First process PID </div>
<div class="param">CPU (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_CPU">dbv0_0_38_job_step_CPU</a></span>  </div>
<div class="param">kill_request_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User who requested job killed </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> State of job step </div>
<div class="param">statistics (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_statistics">dbv0_0_38_job_step_statistics</a></span>  </div>
<div class="param">step (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_step">dbv0_0_38_job_step_step</a></span>  </div>
<div class="param">task (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_job_step_task">dbv0_0_37_job_step_task</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_job_step_tres">dbv0_0_37_job_step_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_qos"><code>dbv0.0.37_qos</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>QOS description</div>
    <div class="field-items">
      <div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> QOS description </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of QOS </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Database id </div>
<div class="param">limits (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_qos_limits">dbv0_0_37_qos_limits</a></span>  </div>
<div class="param">preempt (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_preempt">dbv0_0_38_qos_preempt</a></span>  </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> QOS priority </div>
<div class="param">usage_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> Usage factor </div>
<div class="param">usage_threshold (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> Usage threshold </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_qos_info"><code>dbv0.0.37_qos_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_qos">array[dbv0.0.37_qos]</a></span> Array of QOS </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_account_delete"><code>dbv0.0.37_response_account_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_association_delete"><code>dbv0.0.37_response_association_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_associations"><code>dbv0.0.37_response_associations</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_cluster_add"><code>dbv0.0.37_response_cluster_add</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_cluster_delete"><code>dbv0.0.37_response_cluster_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_qos_delete"><code>dbv0.0.37_response_qos_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_tres"><code>dbv0.0.37_response_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_user_delete"><code>dbv0.0.37_response_user_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_user_update"><code>dbv0.0.37_response_user_update</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_wckey_add"><code>dbv0.0.37_response_wckey_add</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_response_wckey_delete"><code>dbv0.0.37_response_wckey_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_tres_info"><code>dbv0.0.37_tres_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#array">array[List]</a></span> Array of tres </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_user"><code>dbv0.0.37_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>User description</div>
    <div class="field-items">
      <div class="param">administrator_level (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Description of administrator level </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_user_associations">dbv0_0_37_user_associations</a></span>  </div>
<div class="param">coordinators (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_coordinator_info">array[dbv0.0.37_coordinator_info]</a></span> List of assigned coordinators </div>
<div class="param">default (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_user_default">dbv0_0_38_user_default</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_user_info"><code>dbv0.0.37_user_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_user">array[dbv0.0.37_user]</a></span> Array of users </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_wckey"><code>dbv0.0.37_wckey</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of assigned accounts </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> wckey database unique id </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> wckey name </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> wckey user </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of wckey </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.37_wckey_info"><code>dbv0.0.37_wckey_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_error">array[dbv0.0.37_error]</a></span> Slurm errors </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_wckey">array[dbv0.0.37_wckey]</a></span> List of wckeys </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_account"><code>dbv0.0.38_account</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Account description</div>
    <div class="field-items">
      <div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_association_short_info">array[dbv0.0.38_association_short_info]</a></span> List of assigned associations </div>
<div class="param">coordinators (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_coordinator_info">array[dbv0.0.38_coordinator_info]</a></span> List of assigned coordinators </div>
<div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Description of account </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of account </div>
<div class="param">organization (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned organization of account </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of account </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_account_info"><code>dbv0.0.38_account_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_account">array[dbv0.0.38_account]</a></span> List of accounts </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_account_response"><code>dbv0.0.38_account_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_accounting"><code>dbv0.0.38_accounting</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> total seconds allocated </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> association/wckey ID </div>
<div class="param">start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> UNIX timestamp when accounting period started </div>
<div class="param">TRES (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_association"><code>dbv0.0.38_association</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Association description</div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned account </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned cluster </div>
<div class="param">default (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_default">dbv0_0_38_association_default</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of association </div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max">dbv0_0_38_association_max</a></span>  </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_min">dbv0_0_38_association_min</a></span>  </div>
<div class="param">parent_account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Parent account name </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned partition </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Assigned priority </div>
<div class="param">shares_raw (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Raw fairshare shares </div>
<div class="param">usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_usage">dbv0_0_38_association_usage</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned user </div>
<div class="param">QOS (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Assigned QOS </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_association_short_info"><code>dbv0.0.38_association_short_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Account name </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition name (optional) </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_associations_info"><code>dbv0.0.38_associations_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_association">array[dbv0.0.38_association]</a></span> Array of associations </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_cluster_info"><code>dbv0.0.38_cluster_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">controller (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_cluster_info_controller">dbv0_0_38_cluster_info_controller</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of cluster </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned nodes </div>
<div class="param">select_plugin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Configured select plugin </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_cluster_info_associations">dbv0_0_38_cluster_info_associations</a></span>  </div>
<div class="param">rpc_version (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number rpc version </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_response_tres">array[dbv0.0.38_response_tres]</a></span> List of TRES in cluster </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_clusters_properties"><code>dbv0.0.38_clusters_properties</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_cluster_info">dbv0.0.38_cluster_info</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_config_info"><code>dbv0.0.38_config_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#array">array[List]</a></span> Array of TRES </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_account">array[dbv0.0.38_account]</a></span> Array of accounts </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_association">array[dbv0.0.38_association]</a></span> Array of associations </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_user">array[dbv0.0.38_user]</a></span> Array of users </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_qos">array[dbv0.0.38_qos]</a></span> Array of qos </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_wckey">array[dbv0.0.38_wckey]</a></span> Array of wckeys </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_config_response"><code>dbv0.0.38_config_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_coordinator_info"><code>dbv0.0.38_coordinator_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of user </div>
<div class="param">direct (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If user is coordinator of this account directly or coordinator status was inheirted from a higher account in the tree </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_diag"><code>dbv0.0.38_diag</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
<div class="param">statistics (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_diag_statistics">dbv0_0_38_diag_statistics</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_error"><code>dbv0.0.38_error</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">error_number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Slurm internal error number </div>
<div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Error message </div>
<div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Where error occurred in the source </div>
<div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Explaination of cause of error </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_job"><code>dbv0.0.38_job</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Single job description</div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Account charged by job </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_comment">dbv0_0_38_job_comment</a></span>  </div>
<div class="param">allocation_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Nodes allocated to job </div>
<div class="param">array (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_array">dbv0_0_38_job_array</a></span>  </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_time">dbv0_0_38_job_time</a></span>  </div>
<div class="param">association (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_association_short_info">dbv0.0.38_association_short_info</a></span>  </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned cluster </div>
<div class="param">constraints (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Constraints on job </div>
<div class="param">derived_exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_job_exit_code">dbv0.0.38_job_exit_code</a></span>  </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_job_exit_code">dbv0.0.38_job_exit_code</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of job </div>
<div class="param">group (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User's group to run job </div>
<div class="param">het (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_het">dbv0_0_38_job_het</a></span>  </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job id </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned job name </div>
<div class="param">mcs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_mcs">dbv0_0_38_job_mcs</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of nodes allocated for job </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned job's partition </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Priority </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned qos name </div>
<div class="param">required (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_required">dbv0_0_38_job_required</a></span>  </div>
<div class="param">kill_request_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User who requested job killed </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_reservation">dbv0_0_38_job_reservation</a></span>  </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_state">dbv0_0_38_job_state</a></span>  </div>
<div class="param">steps (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_job_step">array[dbv0.0.38_job_step]</a></span> Job step description </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_tres">dbv0_0_38_job_tres</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job user </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_wckey">dbv0_0_38_job_wckey</a></span>  </div>
<div class="param">working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Directory where job was initially started </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> absolute path to OCI container bundle </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_job_exit_code"><code>dbv0.0.38_job_exit_code</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">status (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job exit status </div>
<div class="param">return_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Return code from parent process </div>
<div class="param">signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_exit_code_signal">dbv0_0_38_job_exit_code_signal</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_job_info"><code>dbv0.0.38_job_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_job">array[dbv0.0.38_job]</a></span> Array of jobs </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_job_step"><code>dbv0.0.38_job_step</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_time">dbv0_0_38_job_step_time</a></span>  </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_job_exit_code">dbv0.0.38_job_exit_code</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_nodes">dbv0_0_38_job_step_nodes</a></span>  </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_tasks">dbv0_0_38_job_step_tasks</a></span>  </div>
<div class="param">pid (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> First process PID </div>
<div class="param">CPU (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_CPU">dbv0_0_38_job_step_CPU</a></span>  </div>
<div class="param">kill_request_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User who requested job killed </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> State of job step </div>
<div class="param">statistics (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_statistics">dbv0_0_38_job_step_statistics</a></span>  </div>
<div class="param">step (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_step">dbv0_0_38_job_step_step</a></span>  </div>
<div class="param">task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Task distribution properties </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_tres">dbv0_0_38_job_step_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_meta"><code>dbv0.0.38_meta</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">plugin (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_meta_plugin">dbv0_0_38_meta_plugin</a></span>  </div>
<div class="param">Slurm (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_meta_Slurm">dbv0_0_38_meta_Slurm</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_qos"><code>dbv0.0.38_qos</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>QOS description</div>
    <div class="field-items">
      <div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> QOS description </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of QOS </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Database id </div>
<div class="param">limits (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits">dbv0_0_38_qos_limits</a></span>  </div>
<div class="param">preempt (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_preempt">dbv0_0_38_qos_preempt</a></span>  </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> QOS priority </div>
<div class="param">usage_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> Usage factor </div>
<div class="param">usage_threshold (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> Usage threshold </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned name of QOS </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_qos_info"><code>dbv0.0.38_qos_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_qos">array[dbv0.0.38_qos]</a></span> Array of QOS </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_account_delete"><code>dbv0.0.38_response_account_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_associations"><code>dbv0.0.38_response_associations</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_associations_delete"><code>dbv0.0.38_response_associations_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
<div class="param">removed_associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> the associations </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_cluster_add"><code>dbv0.0.38_response_cluster_add</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_cluster_delete"><code>dbv0.0.38_response_cluster_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_qos"><code>dbv0.0.38_response_qos</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_qos_delete"><code>dbv0.0.38_response_qos_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_tres"><code>dbv0.0.38_response_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_user_delete"><code>dbv0.0.38_response_user_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_user_update"><code>dbv0.0.38_response_user_update</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_wckey_add"><code>dbv0.0.38_response_wckey_add</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_response_wckey_delete"><code>dbv0.0.38_response_wckey_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_set_config"><code>dbv0.0.38_set_config</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_clusters_properties">array[dbv0.0.38_clusters_properties]</a></span>  </div>
<div class="param">TRES (optional)</div><div class="param-desc"><span class="param-type"><a href="#array">array[List]</a></span>  </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_update_account">array[dbv0.0.38_update_account]</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_user">array[dbv0.0.38_user]</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_qos">array[dbv0.0.38_qos]</a></span>  </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_wckey">array[dbv0.0.38_wckey]</a></span>  </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_association">array[dbv0.0.38_association]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_tres_info"><code>dbv0.0.38_tres_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_tres_update"><code>dbv0.0.38_tres_update</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_update_account"><code>dbv0.0.38_update_account</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_account">array[dbv0.0.38_account]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_update_qos"><code>dbv0.0.38_update_qos</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_qos">array[dbv0.0.38_qos]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_update_users"><code>dbv0.0.38_update_users</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_user">array[dbv0.0.38_user]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_user"><code>dbv0.0.38_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>User description</div>
    <div class="field-items">
      <div class="param">administrator_level (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Description of administrator level </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_association_short_info">array[dbv0.0.38_association_short_info]</a></span> Assigned associations </div>
<div class="param">coordinators (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_coordinator_info">array[dbv0.0.38_coordinator_info]</a></span> List of assigned coordinators </div>
<div class="param">default (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_user_default">dbv0_0_38_user_default</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of user </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_user_info"><code>dbv0.0.38_user_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_user">array[dbv0.0.38_user]</a></span> Array of users </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_wckey"><code>dbv0.0.38_wckey</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> wckey database unique id </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> wckey name </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> wckey user </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of properties of wckey </div>
<div class="param">accounting (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_accounting">array[dbv0.0.38_accounting]</a></span> List of accounting records </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.38_wckey_info"><code>dbv0.0.38_wckey_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_error">array[dbv0.0.38_error]</a></span> Slurm errors </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_wckey">array[dbv0.0.38_wckey]</a></span> List of wckeys </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_account_info"><code>dbv0.0.39_account_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_warning">array[dbv0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_account">array[v0.0.39_account]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_associations_info"><code>dbv0.0.39_associations_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_warning">array[dbv0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_assoc">array[v0.0.39_assoc]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_clusters_info"><code>dbv0.0.39_clusters_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_warning">array[dbv0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_cluster_rec">array[v0.0.39_cluster_rec]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_config_info"><code>dbv0.0.39_config_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_warning">array[dbv0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_tres">array[v0.0.39_tres]</a></span>  </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_account">array[v0.0.39_account]</a></span>  </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_assoc">array[v0.0.39_assoc]</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_user">array[v0.0.39_user]</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_qos">array[v0.0.39_qos]</a></span>  </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_wckey">array[v0.0.39_wckey]</a></span>  </div>
<div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_cluster_rec">array[v0.0.39_cluster_rec]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_diag"><code>dbv0.0.39_diag</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_warning">array[dbv0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">statistics (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_stats_rec">v0.0.39_stats_rec</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_error"><code>dbv0.0.39_error</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">error_number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Slurm internal error number </div>
<div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Error message </div>
<div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Where error occurred in the source </div>
<div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Explaination of cause of error </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_job_info"><code>dbv0.0.39_job_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_warning">array[dbv0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_job">array[v0.0.39_job]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_meta"><code>dbv0.0.39_meta</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">plugin (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_meta_plugin">dbv0_0_38_meta_plugin</a></span>  </div>
<div class="param">Slurm (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_39_meta_Slurm">dbv0_0_39_meta_Slurm</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_qos_info"><code>dbv0.0.39_qos_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_warning">array[dbv0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_qos">array[v0.0.39_qos]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_response_associations_delete"><code>dbv0.0.39_response_associations_delete</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_warning">array[dbv0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">removed_associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> the associations </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_set_config"><code>dbv0.0.39_set_config</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_cluster_rec">array[v0.0.39_cluster_rec]</a></span>  </div>
<div class="param">TRES (optional)</div><div class="param-desc"><span class="param-type"><a href="#array">array[List]</a></span>  </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_account">array[v0.0.39_account]</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_user">array[v0.0.39_user]</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_qos">array[v0.0.39_qos]</a></span>  </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_wckey">array[v0.0.39_wckey]</a></span>  </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_assoc">array[v0.0.39_assoc]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_tres_info"><code>dbv0.0.39_tres_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_warning">array[dbv0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_tres">array[v0.0.39_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_tres_update"><code>dbv0.0.39_tres_update</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_tres">array[v0.0.39_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_update_qos"><code>dbv0.0.39_update_qos</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_qos">array[v0.0.39_qos]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_update_users"><code>dbv0.0.39_update_users</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_user">array[v0.0.39_user]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_user_info"><code>dbv0.0.39_user_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_warning">array[dbv0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_user">array[v0.0.39_user]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_warning"><code>dbv0.0.39_warning</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">warning (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Earning message </div>
<div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Where error occurred in the source </div>
<div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Explaination of cause of error </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0.0.39_wckey_info"><code>dbv0.0.39_wckey_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_meta">dbv0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.39_error">array[dbv0.0.39_error]</a></span> Slurm errors </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_wckey">array[v0.0.39_wckey]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_association_max"><code>dbv0_0_37_association_max</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max settings</div>
    <div class="field-items">
      <div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_association_max_jobs">dbv0_0_37_association_max_jobs</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max_per">dbv0_0_38_association_max_per</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_association_max_tres">dbv0_0_37_association_max_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_association_max_jobs"><code>dbv0_0_37_association_max_jobs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max jobs settings</div>
    <div class="field-items">
      <div class="param">active (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max TRES for active total jobs </div>
<div class="param">accruing (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max TRES for job accruing priority </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max TRES for job total submitted </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max_jobs_per">dbv0_0_38_association_max_jobs_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_association_max_tres"><code>dbv0_0_37_association_max_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES settings</div>
    <div class="field-items">
      <div class="param">group (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_association_max_tres_group">dbv0_0_37_association_max_tres_group</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_association_max_tres_per">dbv0_0_37_association_max_tres_per</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">minutes (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_association_max_tres_minutes">dbv0_0_37_association_max_tres_minutes</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_association_max_tres_group"><code>dbv0_0_37_association_max_tres_group</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES per group</div>
    <div class="field-items">
      <div class="param">minutes (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">active (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_association_max_tres_minutes"><code>dbv0_0_37_association_max_tres_minutes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES minutes settings</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_association_max_tres_minutes_per">dbv0_0_37_association_max_tres_minutes_per</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_association_max_tres_minutes_per"><code>dbv0_0_37_association_max_tres_minutes_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES minutes per settings</div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_association_max_tres_per"><code>dbv0_0_37_association_max_tres_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES per settings</div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">node (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_cluster_info_associations"><code>dbv0_0_37_cluster_info_associations</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Information about associations</div>
    <div class="field-items">
      <div class="param">root (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_association_short_info">dbv0.0.37_association_short_info</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_diag_statistics"><code>dbv0_0_37_diag_statistics</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>dictionary of Slurmdb statistics</div>
    <div class="field-items">
      <div class="param">time_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Unix timestamp of start time </div>
<div class="param">rollups (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_diag_statistics_rollups_inner">array[dbv0_0_38_diag_statistics_rollups_inner]</a></span>  </div>
<div class="param">RPCs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_diag_statistics_RPCs_inner">array[dbv0_0_38_diag_statistics_RPCs_inner]</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_diag_statistics_users_inner">array[dbv0_0_38_diag_statistics_users_inner]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_job_het"><code>dbv0_0_37_job_het</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Heterogeneous Job details (optional)</div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span> Parent HetJob id </div>
<div class="param">job_offset (optional)</div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span> Offset of this job to parent </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_job_step_task"><code>dbv0_0_37_job_step_task</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Task properties</div>
    <div class="field-items">
      <div class="param">distribution (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Task distribution type </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_job_step_tres"><code>dbv0_0_37_job_step_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>TRES usage</div>
    <div class="field-items">
      <div class="param">requested (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_job_step_tres_requested">dbv0_0_37_job_step_tres_requested</a></span>  </div>
<div class="param">consumed (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_job_step_tres_requested">dbv0_0_37_job_step_tres_requested</a></span>  </div>
<div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_job_step_tres_requested"><code>dbv0_0_37_job_step_tres_requested</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>TRES requested for job</div>
    <div class="field-items">
      <div class="param">average (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_job_tres"><code>dbv0_0_37_job_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>TRES settings</div>
    <div class="field-items">
      <div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">requested (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_qos_limits"><code>dbv0_0_37_qos_limits</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Assigned limits</div>
    <div class="field-items">
      <div class="param">factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> factor to apply to TRES count for associations using this QOS </div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_qos_limits_max">dbv0_0_37_qos_limits_max</a></span>  </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_qos_limits_min">dbv0_0_37_qos_limits_min</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_qos_limits_max"><code>dbv0_0_37_qos_limits_max</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on max settings</div>
    <div class="field-items">
      <div class="param">wall_clock (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_wall_clock">dbv0_0_38_qos_limits_max_wall_clock</a></span>  </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_jobs">dbv0_0_38_qos_limits_max_jobs</a></span>  </div>
<div class="param">accruing (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_accruing">dbv0_0_38_qos_limits_max_accruing</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_qos_limits_max_tres">dbv0_0_37_qos_limits_max_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_qos_limits_max_tres"><code>dbv0_0_37_qos_limits_max_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on TRES</div>
    <div class="field-items">
      <div class="param">minutes (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_qos_limits_max_tres_minutes">dbv0_0_37_qos_limits_max_tres_minutes</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_qos_limits_max_tres_per">dbv0_0_37_qos_limits_max_tres_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_qos_limits_max_tres_minutes"><code>dbv0_0_37_qos_limits_max_tres_minutes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES minutes settings</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_qos_limits_max_tres_minutes_per">dbv0_0_37_qos_limits_max_tres_minutes_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_qos_limits_max_tres_minutes_per"><code>dbv0_0_37_qos_limits_max_tres_minutes_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES minutes per settings</div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_qos_limits_max_tres_per"><code>dbv0_0_37_qos_limits_max_tres_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES per settings</div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">node (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_qos_limits_min"><code>dbv0_0_37_qos_limits_min</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Min limit settings</div>
    <div class="field-items">
      <div class="param">priority_threshold (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Min priority threshold </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_qos_limits_min_tres">dbv0_0_37_qos_limits_min_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_qos_limits_min_tres"><code>dbv0_0_37_qos_limits_min_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Min tres settings</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_37_qos_limits_min_tres_per">dbv0_0_37_qos_limits_min_tres_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_qos_limits_min_tres_per"><code>dbv0_0_37_qos_limits_min_tres_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Min tres per settings</div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_37_user_associations"><code>dbv0_0_37_user_associations</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Assigned associations</div>
    <div class="field-items">
      <div class="param">root (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.37_association_short_info">dbv0.0.37_association_short_info</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_default"><code>dbv0_0_38_association_default</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Default settings</div>
    <div class="field-items">
      <div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Default QOS </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_max"><code>dbv0_0_38_association_max</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max settings</div>
    <div class="field-items">
      <div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max_jobs">dbv0_0_38_association_max_jobs</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max_per">dbv0_0_38_association_max_per</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max_tres">dbv0_0_38_association_max_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_max_jobs"><code>dbv0_0_38_association_max_jobs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max jobs settings</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max_jobs_per">dbv0_0_38_association_max_jobs_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_max_jobs_per"><code>dbv0_0_38_association_max_jobs_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max jobs per settings</div>
    <div class="field-items">
      <div class="param">wall_clock (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max wallclock per job </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_max_per"><code>dbv0_0_38_association_max_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max per settings</div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max_per_account">dbv0_0_38_association_max_per_account</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_max_per_account"><code>dbv0_0_38_association_max_per_account</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max per accounting settings</div>
    <div class="field-items">
      <div class="param">wall_clock (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max wallclock per account </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_max_tres"><code>dbv0_0_38_association_max_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES settings</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max_tres_per">dbv0_0_38_association_max_tres_per</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">minutes (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max_tres_minutes">dbv0_0_38_association_max_tres_minutes</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_max_tres_minutes"><code>dbv0_0_38_association_max_tres_minutes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES minutes settings</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_association_max_tres_minutes_per">dbv0_0_38_association_max_tres_minutes_per</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_max_tres_minutes_per"><code>dbv0_0_38_association_max_tres_minutes_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES minutes per settings</div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_max_tres_per"><code>dbv0_0_38_association_max_tres_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES per settings</div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">node (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_min"><code>dbv0_0_38_association_min</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Min settings</div>
    <div class="field-items">
      <div class="param">priority_threshold (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Min priority threshold </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_association_usage"><code>dbv0_0_38_association_usage</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Association usage</div>
    <div class="field-items">
      <div class="param">accrue_job_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Jobs accuring priority </div>
<div class="param">group_used_wallclock (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> Group used wallclock time (s) </div>
<div class="param">fairshare_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> Fairshare factor </div>
<div class="param">fairshare_shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Fairshare shares </div>
<div class="param">normalized_priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Currently active jobs </div>
<div class="param">normalized_shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> Normalized shares </div>
<div class="param">effective_normalized_usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> Effective normalized usage </div>
<div class="param">raw_usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Raw usage </div>
<div class="param">job_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total jobs submitted </div>
<div class="param">fairshare_level (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> Fairshare level </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_cluster_info_associations"><code>dbv0_0_38_cluster_info_associations</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Information about associations</div>
    <div class="field-items">
      <div class="param">root (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0.0.38_association_short_info">dbv0.0.38_association_short_info</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_cluster_info_controller"><code>dbv0_0_38_cluster_info_controller</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Information about controller</div>
    <div class="field-items">
      <div class="param">host (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Hostname </div>
<div class="param">port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Port number </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_diag_statistics"><code>dbv0_0_38_diag_statistics</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">time_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Unix timestamp of start time </div>
<div class="param">rollups (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_diag_statistics_rollups_inner">array[dbv0_0_38_diag_statistics_rollups_inner]</a></span>  </div>
<div class="param">RPCs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_diag_statistics_RPCs_inner">array[dbv0_0_38_diag_statistics_RPCs_inner]</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_diag_statistics_users_inner">array[dbv0_0_38_diag_statistics_users_inner]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_diag_statistics_RPCs_inner"><code>dbv0_0_38_diag_statistics_RPCs_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Statistics by RPC type</div>
    <div class="field-items">
      <div class="param">rpc (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> RPC type </div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_diag_statistics_RPCs_inner_time">dbv0_0_38_diag_statistics_RPCs_inner_time</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_diag_statistics_RPCs_inner_time"><code>dbv0_0_38_diag_statistics_RPCs_inner_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Time values</div>
    <div class="field-items">
      <div class="param">average (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Average time spent processing this RPC type </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total time spent processing this RPC type </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_diag_statistics_rollups_inner"><code>dbv0_0_38_diag_statistics_rollups_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Rollup statistics</div>
    <div class="field-items">
      <div class="param">type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Type of rollup </div>
<div class="param">last_run (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Timestamp of last rollup </div>
<div class="param">last_cycle (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Timestamp of last cycle </div>
<div class="param">max_cycle (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max time of all cycles </div>
<div class="param">total_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total time (s) spent doing rollup </div>
<div class="param">mean_cycles (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Average time (s) of cycle </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_diag_statistics_users_inner"><code>dbv0_0_38_diag_statistics_users_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Statistics by user RPCs</div>
    <div class="field-items">
      <div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_diag_statistics_users_inner_time">dbv0_0_38_diag_statistics_users_inner_time</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_diag_statistics_users_inner_time"><code>dbv0_0_38_diag_statistics_users_inner_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Time values</div>
    <div class="field-items">
      <div class="param">average (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Average time spent processing each user RPC </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total time spent processing each user RPC </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_array"><code>dbv0_0_38_job_array</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Array properties (optional)</div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job id of array </div>
<div class="param">limits (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_array_limits">dbv0_0_38_job_array_limits</a></span>  </div>
<div class="param">task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Array task </div>
<div class="param">task_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Array task id </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_array_limits"><code>dbv0_0_38_job_array_limits</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on array settings</div>
    <div class="field-items">
      <div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_array_limits_max">dbv0_0_38_job_array_limits_max</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_array_limits_max"><code>dbv0_0_38_job_array_limits_max</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on array settings</div>
    <div class="field-items">
      <div class="param">running (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_array_limits_max_running">dbv0_0_38_job_array_limits_max_running</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_array_limits_max_running"><code>dbv0_0_38_job_array_limits_max_running</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on array settings</div>
    <div class="field-items">
      <div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max running tasks in array at any one time </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_comment"><code>dbv0_0_38_job_comment</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Job comments by type</div>
    <div class="field-items">
      <div class="param">administrator (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Administrator set comment </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job comment </div>
<div class="param">system (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> System set comment </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_exit_code_signal"><code>dbv0_0_38_job_exit_code_signal</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Signal details (if signaled)</div>
    <div class="field-items">
      <div class="param">signal_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Signal number process received </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of signal received </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_het"><code>dbv0_0_38_job_het</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Heterogeneous Job details (optional)</div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Parent HetJob id </div>
<div class="param">job_offset (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Offset of this job to parent </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_mcs"><code>dbv0_0_38_job_mcs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Multi-Category Security</div>
    <div class="field-items">
      <div class="param">label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Assigned MCS label </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_required"><code>dbv0_0_38_job_required</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Job run requirements</div>
    <div class="field-items">
      <div class="param">CPUs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Required number of CPUs </div>
<div class="param">memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Required amount of memory (MiB) </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_reservation"><code>dbv0_0_38_job_reservation</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Reservation usage details</div>
    <div class="field-items">
      <div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Database id of reservation </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Name of reservation </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_state"><code>dbv0_0_38_job_state</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>State properties of job</div>
    <div class="field-items">
      <div class="param">current (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Current state of job </div>
<div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Last reason job didn't run </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_CPU"><code>dbv0_0_38_job_step_CPU</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>CPU properties</div>
    <div class="field-items">
      <div class="param">requested_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_CPU_requested_frequency">dbv0_0_38_job_step_CPU_requested_frequency</a></span>  </div>
<div class="param">governor (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> CPU governor </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_CPU_requested_frequency"><code>dbv0_0_38_job_step_CPU_requested_frequency</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>CPU frequency requested</div>
    <div class="field-items">
      <div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Min CPU frequency </div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max CPU frequency </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_nodes"><code>dbv0_0_38_job_step_nodes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Node details</div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of nodes in step </div>
<div class="param">range (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Nodes in step </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_statistics"><code>dbv0_0_38_job_step_statistics</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Statistics of job step</div>
    <div class="field-items">
      <div class="param">CPU (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_statistics_CPU">dbv0_0_38_job_step_statistics_CPU</a></span>  </div>
<div class="param">energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_statistics_energy">dbv0_0_38_job_step_statistics_energy</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_statistics_CPU"><code>dbv0_0_38_job_step_statistics_CPU</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Statistics of CPU</div>
    <div class="field-items">
      <div class="param">actual_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Actual frequency of CPU during step </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_statistics_energy"><code>dbv0_0_38_job_step_statistics_energy</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Statistics of energy</div>
    <div class="field-items">
      <div class="param">consumed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Energy consumed during step </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_step"><code>dbv0_0_38_job_step_step</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Step details</div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Parent job id </div>
<div class="param">het (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_step_het">dbv0_0_38_job_step_step_het</a></span>  </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Step id </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Step name </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_step_het"><code>dbv0_0_38_job_step_step_het</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Heterogeneous job details</div>
    <div class="field-items">
      <div class="param">component (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Parent HetJob component id </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_tasks"><code>dbv0_0_38_job_step_tasks</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Task properties</div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of tasks in step </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_time"><code>dbv0_0_38_job_step_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Time properties</div>
    <div class="field-items">
      <div class="param">elapsed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total time elapsed </div>
<div class="param">end (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Timestamp of when job ended </div>
<div class="param">start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Timestamp of when job started </div>
<div class="param">suspended (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Timestamp of when job last suspended </div>
<div class="param">system (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_time_system">dbv0_0_38_job_time_system</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_time_total">dbv0_0_38_job_time_total</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_time_user">dbv0_0_38_job_time_user</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_tres"><code>dbv0_0_38_job_step_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>TRES usage</div>
    <div class="field-items">
      <div class="param">requested (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_tres_requested">dbv0_0_38_job_step_tres_requested</a></span>  </div>
<div class="param">consumed (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_step_tres_requested">dbv0_0_38_job_step_tres_requested</a></span>  </div>
<div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_step_tres_requested"><code>dbv0_0_38_job_step_tres_requested</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>TRES requested for job</div>
    <div class="field-items">
      <div class="param">average (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_time"><code>dbv0_0_38_job_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Time properties</div>
    <div class="field-items">
      <div class="param">elapsed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total time elapsed </div>
<div class="param">eligible (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total time eligible to run </div>
<div class="param">end (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Timestamp of when job ended </div>
<div class="param">start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Timestamp of when job started </div>
<div class="param">submission (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Timestamp of when job submitted </div>
<div class="param">suspended (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Timestamp of when job last suspended </div>
<div class="param">system (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_time_system">dbv0_0_38_job_time_system</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_time_total">dbv0_0_38_job_time_total</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_job_time_user">dbv0_0_38_job_time_user</a></span>  </div>
<div class="param">limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job wall clock time limit </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_time_system"><code>dbv0_0_38_job_time_system</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>System time values</div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in seconds </div>
<div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in microseconds </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_time_total"><code>dbv0_0_38_job_time_total</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>System time values</div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPU-seconds used by the job, in seconds </div>
<div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPU-seconds used by the job, in microseconds </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_time_user"><code>dbv0_0_38_job_time_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>User land time values</div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPU-seconds used by the job in user land, in seconds </div>
<div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPU-seconds used by the job in user land, in microseconds </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_tres"><code>dbv0_0_38_job_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>TRES settings</div>
    <div class="field-items">
      <div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">requested (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_job_wckey"><code>dbv0_0_38_job_wckey</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Job assigned wckey details</div>
    <div class="field-items">
      <div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job assigned wckey </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> wckey flags </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_meta_Slurm"><code>dbv0_0_38_meta_Slurm</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Slurm information</div>
    <div class="field-items">
      <div class="param">version (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_meta_Slurm_version">dbv0_0_38_meta_Slurm_version</a></span>  </div>
<div class="param">release (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> version specifier </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_meta_Slurm_version"><code>dbv0_0_38_meta_Slurm_version</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">major (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">micro (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">minor (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_meta_plugin"><code>dbv0_0_38_meta_plugin</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits"><code>dbv0_0_38_qos_limits</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Assigned limits</div>
    <div class="field-items">
      <div class="param">factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> factor to apply to TRES count for associations using this QOS </div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max">dbv0_0_38_qos_limits_max</a></span>  </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_min">dbv0_0_38_qos_limits_min</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max"><code>dbv0_0_38_qos_limits_max</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on max settings</div>
    <div class="field-items">
      <div class="param">wall_clock (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_wall_clock">dbv0_0_38_qos_limits_max_wall_clock</a></span>  </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_jobs">dbv0_0_38_qos_limits_max_jobs</a></span>  </div>
<div class="param">accruing (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_accruing">dbv0_0_38_qos_limits_max_accruing</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_tres">dbv0_0_38_qos_limits_max_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_accruing"><code>dbv0_0_38_qos_limits_max_accruing</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on accruing priority</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_accruing_per">dbv0_0_38_qos_limits_max_accruing_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_accruing_per"><code>dbv0_0_38_qos_limits_max_accruing_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max accuring priority per setting</div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max accuring priority per account </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max accuring priority per user </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_jobs"><code>dbv0_0_38_qos_limits_max_jobs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on jobs settings</div>
    <div class="field-items">
      <div class="param">active_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_jobs_active_jobs">dbv0_0_38_qos_limits_max_jobs_active_jobs</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_jobs_active_jobs"><code>dbv0_0_38_qos_limits_max_jobs_active_jobs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on active jobs settings</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_jobs_active_jobs_per">dbv0_0_38_qos_limits_max_jobs_active_jobs_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_jobs_active_jobs_per"><code>dbv0_0_38_qos_limits_max_jobs_active_jobs_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on active jobs per settings</div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max jobs per account </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max jobs per user </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_tres"><code>dbv0_0_38_qos_limits_max_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limits on TRES</div>
    <div class="field-items">
      <div class="param">minutes (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_tres_minutes">dbv0_0_38_qos_limits_max_tres_minutes</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_tres_per">dbv0_0_38_qos_limits_max_tres_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_tres_minutes"><code>dbv0_0_38_qos_limits_max_tres_minutes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES minutes settings</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_tres_minutes_per">dbv0_0_38_qos_limits_max_tres_minutes_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_tres_minutes_per"><code>dbv0_0_38_qos_limits_max_tres_minutes_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES minutes per settings</div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_tres_per"><code>dbv0_0_38_qos_limits_max_tres_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Max TRES per settings</div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">node (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_wall_clock"><code>dbv0_0_38_qos_limits_max_wall_clock</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limit on wallclock settings</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_max_wall_clock_per">dbv0_0_38_qos_limits_max_wall_clock_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_max_wall_clock_per"><code>dbv0_0_38_qos_limits_max_wall_clock_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Limit on wallclock per settings</div>
    <div class="field-items">
      <div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max wallclock per QOS </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max wallclock per job </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_min"><code>dbv0_0_38_qos_limits_min</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Min limit settings</div>
    <div class="field-items">
      <div class="param">priority_threshold (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Min priority threshold </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_min_tres">dbv0_0_38_qos_limits_min_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_min_tres"><code>dbv0_0_38_qos_limits_min_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Min tres settings</div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_qos_limits_min_tres_per">dbv0_0_38_qos_limits_min_tres_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_limits_min_tres_per"><code>dbv0_0_38_qos_limits_min_tres_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Min tres per settings</div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_tres_list_inner">array[dbv0_0_38_tres_list_inner]</a></span> TRES list of attributes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_qos_preempt"><code>dbv0_0_38_qos_preempt</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Preemption settings</div>
    <div class="field-items">
      <div class="param">list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of preemptable QOS </div>
<div class="param">mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of preemption modes </div>
<div class="param">exempt_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Grace period (s) before jobs can preempted </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_tres_list_inner"><code>dbv0_0_38_tres_list_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES type </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES name (optional) </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> database id </div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> count of TRES </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_38_user_default"><code>dbv0_0_38_user_default</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Default settings</div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Default account name </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Default wckey </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_39_meta_Slurm"><code>dbv0_0_39_meta_Slurm</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Slurm information</div>
    <div class="field-items">
      <div class="param">version (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_39_meta_Slurm_version">dbv0_0_39_meta_Slurm_version</a></span>  </div>
<div class="param">release (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> version specifier </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="dbv0_0_39_meta_Slurm_version"><code>dbv0_0_39_meta_Slurm_version</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">major (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  </div>
<div class="param">micro (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  </div>
<div class="param">minor (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="status"><code>status</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_meta">v0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#status">status</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_warning">array[v0.0.39_warning]</a></span> Slurm warnings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_diag"><code>v0.0.37_diag</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_error">array[v0.0.37_error]</a></span> slurm errors </div>
<div class="param">statistics (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_37_diag_statistics">v0_0_37_diag_statistics</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_error"><code>v0.0.37_error</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> error message </div>
<div class="param">errno (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> error number </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_job_properties"><code>v0.0.37_job_properties</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Charge resources used by this job to specified account. </div>
<div class="param">account_gather_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Define the job accounting and profiling sampling intervals. </div>
<div class="param">argv (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Arguments to the script. </div>
<div class="param">array (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Submit a job array, multiple jobs to be executed with identical parameters. The indexes specification identifies what array index values should be used. </div>
<div class="param">batch_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> features required for batch script's node </div>
<div class="param">begin_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Submit the batch script to the Slurm controller immediately, like normal, but tell the controller to defer the allocation of the job until the specified time. format: int64</div>
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Burst buffer specification. </div>
<div class="param">cluster_constraint (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specifies features that a federated cluster must have to have a sibling job submitted to it. </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> An arbitrary comment. </div>
<div class="param">constraints (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> node features required by job. </div>
<div class="param">core_specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Count of specialized threads per node reserved by the job for system operations and not used by the application. </div>
<div class="param">cores_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Restrict node selection to nodes with at least the specified number of cores per socket. </div>
<div class="param">cpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cpu binding </div>
<div class="param">cpu_binding_hint (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cpu binding hint </div>
<div class="param">cpu_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Request that job steps initiated by srun commands inside this sbatch script be run at some requested frequency if possible, on the CPUs selected for the step on the compute node(s). </div>
<div class="param">cpus_per_gpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Number of CPUs requested per allocated GPU. </div>
<div class="param">cpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Advise the Slurm controller that ensuing job steps will require ncpus number of processors per task. </div>
<div class="param">current_working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Instruct Slurm to connect the batch script's standard output directly to the file name. </div>
<div class="param">deadline (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Remove the job if no ending is possible before this deadline (start &gt; (deadline - time[-min])). </div>
<div class="param">delay_boot (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Do not reboot nodes in order to satisfied this job's feature specification if the job has been eligible to run for less than this time period. </div>
<div class="param">dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Defer the start of this job until the specified dependencies have been satisfied completed. </div>
<div class="param">distribution (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specify alternate distribution methods for remote processes. </div>
<div class="param">environment </div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span> Dictionary of environment entries. </div>
<div class="param">exclusive (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> The job allocation can share nodes just other users with the &quot;user&quot; option or with the &quot;mcs&quot; option). </div>
        <div class="param-enum-header">Enum:</div>
        <div class="param-enum">user</div><div class="param-enum">mcs</div><div class="param-enum">true</div><div class="param-enum">false</div>
<div class="param">get_user_environment (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Load new login environment for user on job node. </div>
<div class="param">gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specifies a comma delimited list of generic consumable resources. </div>
<div class="param">gres_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specify generic resource task binding options. </div>
        <div class="param-enum-header">Enum:</div>
        <div class="param-enum">disable-binding</div><div class="param-enum">enforce-binding</div>
<div class="param">gpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Requested binding of tasks to GPU. </div>
<div class="param">gpu_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Requested GPU frequency. </div>
<div class="param">gpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> GPUs per job. </div>
<div class="param">gpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> GPUs per node. </div>
<div class="param">gpus_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> GPUs per socket. </div>
<div class="param">gpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> GPUs per task. </div>
<div class="param">hold (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Specify the job is to be submitted in a held state (priority of zero). </div>
<div class="param">kill_on_invalid_dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> If a job has an invalid dependency, then Slurm is to terminate it. </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specification of licenses (or other resources available on all nodes of the cluster) which must be allocated to this job. </div>
<div class="param">mail_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Notify user by email when certain event types occur. </div>
<div class="param">mail_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User to receive email notification of state changes as defined by mail_type. </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> This parameter is a group among the groups of the user. </div>
<div class="param">memory_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Bind tasks to memory. </div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum real memory per cpu (MB). </div>
<div class="param">memory_per_gpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum memory required per allocated GPU. </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum real memory per node (MB). </div>
<div class="param">minimum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum number of CPUs per node. </div>
<div class="param">minimum_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> If a range of node counts is given, prefer the smaller count. </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specify a name for the job allocation. </div>
<div class="param">nice (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Run the job with an adjusted scheduling priority within Slurm. </div>
<div class="param">no_kill (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Do not automatically terminate a job if one of the nodes it has been allocated fails. </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">array[Integer]</a></span> Request that a minimum of minnodes nodes and a maximum node count. </div>
<div class="param">open_mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Open the output and error files using append or truncate mode as specified. </div>
        <div class="param-enum-header">Enum:</div>
        <div class="param-enum">append</div><div class="param-enum">truncate</div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Request a specific partition for the resource allocation. </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Request a specific job priority. </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Request a quality of service for the job. </div>
<div class="param">requeue (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Specifies that the batch job should eligible to being requeue. </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Allocate resources for the job from the named reservation. </div>
<div class="param">signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> When a job is within sig_time seconds of its end time, send it the signal sig_num. </div>
<div class="param">sockets_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Restrict node selection to nodes with at least the specified number of sockets. </div>
<div class="param">spread_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Spread the job allocation over as many nodes as possible and attempt to evenly distribute tasks across the allocated nodes. </div>
<div class="param">standard_error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Instruct Slurm to connect the batch script's standard error directly to the file name. </div>
<div class="param">standard_input (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Instruct Slurm to connect the batch script's standard input directly to the file name specified. </div>
<div class="param">standard_output (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Instruct Slurm to connect the batch script's standard output directly to the file name. </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Advises the Slurm controller that job steps run within the allocation will launch a maximum of number tasks and to provide for sufficient resources. </div>
<div class="param">tasks_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Request the maximum ntasks be invoked on each core. </div>
<div class="param">tasks_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Request the maximum ntasks be invoked on each node. </div>
<div class="param">tasks_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Request the maximum ntasks be invoked on each socket. </div>
<div class="param">thread_specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Count of specialized threads per node reserved by the job for system operations and not used by the application. </div>
<div class="param">threads_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Restrict node selection to nodes with at least the specified number of threads per core. </div>
<div class="param">time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Step time limit. </div>
<div class="param">time_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum run time in minutes. </div>
<div class="param">wait_all_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Do not begin execution until all nodes are ready for use. </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specify wckey to be used with job. </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_job_resources"><code>v0.0.37_job_resources</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of assigned job nodes </div>
<div class="param">allocated_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of assigned job cpus </div>
<div class="param">allocated_hosts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of assigned job hosts </div>
<div class="param">allocated_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_node_allocation">array[v0.0.37_node_allocation]</a></span> node allocations </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_job_response_properties"><code>v0.0.37_job_response_properties</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Charge resources used by this job to specified account </div>
<div class="param">accrue_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time job is eligible for running format: int64</div>
<div class="param">admin_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> administrator's arbitrary comment </div>
<div class="param">array_job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> job_id of a job array or 0 if N/A </div>
<div class="param">array_task_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> task_id of a job array </div>
<div class="param">array_max_tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Maximum number of running array tasks </div>
<div class="param">array_task_string (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> string expression of task IDs in this record </div>
<div class="param">association_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> association id for job </div>
<div class="param">batch_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> features required for batch script's node </div>
<div class="param">batch_flag (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> if batch: queued job with script </div>
<div class="param">batch_host (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of host running batch script </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Job flags </div>
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> burst buffer specifications </div>
<div class="param">burst_buffer_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> burst buffer state info </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of cluster that the job is on </div>
<div class="param">cluster_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma separated list of required cluster features </div>
<div class="param">command (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> command to be executed </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> arbitrary comment </div>
<div class="param">contiguous (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> job requires contiguous nodes </div>
<div class="param">core_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> specialized core count </div>
<div class="param">thread_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> specialized thread count </div>
<div class="param">cores_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> cores per socket required by job </div>
<div class="param">billable_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> billable TRES </div>
<div class="param">cpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> number of processors required for each task </div>
<div class="param">cpu_frequency_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Minimum cpu frequency </div>
<div class="param">cpu_frequency_maximum (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Maximum cpu frequency </div>
<div class="param">cpu_frequency_governor (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> cpu frequency governor </div>
<div class="param">cpus_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">deadline (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> job start deadline </div>
<div class="param">delay_boot (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> command to be executed </div>
<div class="param">dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> synchronize job execution with other jobs </div>
<div class="param">derived_exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> highest exit code of all job steps </div>
<div class="param">eligible_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time job is eligible for running format: int64</div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time of termination, actual or expected format: int64</div>
<div class="param">excluded_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma separated list of excluded nodes </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> exit code for job </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma separated list of required features </div>
<div class="param">federation_origin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Origin cluster's name </div>
<div class="param">federation_siblings_active (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> string of active sibling names </div>
<div class="param">federation_siblings_viable (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> string of viable sibling names </div>
<div class="param">gres_detail (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Job flags </div>
<div class="param">group_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> group job submitted as </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> job ID </div>
<div class="param">job_resources (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_job_resources">v0.0.37_job_resources</a></span>  </div>
<div class="param">job_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> state of the job </div>
<div class="param">last_sched_evaluation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> last time job was evaluated for scheduling </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> licenses required by the job </div>
<div class="param">max_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> maximum number of cpus usable by job </div>
<div class="param">max_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> maximum number of nodes usable by job </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> mcs_label if mcs plugin in use </div>
<div class="param">memory_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of the job </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of nodes allocated to job </div>
<div class="param">nice (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> requested priority change </div>
<div class="param">tasks_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> number of tasks to invoke on each core </div>
<div class="param">tasks_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> number of tasks to invoke on each socket </div>
<div class="param">tasks_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> number of tasks to invoke on each board </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> minimum number of cpus required by job </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> minimum number of nodes required by job </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> requested task count </div>
<div class="param">het_job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> job ID of hetjob leader </div>
<div class="param">het_job_id_set (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> job IDs for all components </div>
<div class="param">het_job_offset (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> HetJob component offset from leader </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of assigned partition </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> minimum real memory per node </div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> minimum real memory per cpu </div>
<div class="param">minimum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> minimum # CPUs per node </div>
<div class="param">minimum_tmp_disk_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> minimum tmp disk per node </div>
<div class="param">preempt_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> preemption signal time format: int64</div>
<div class="param">pre_sus_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time job ran prior to last suspend format: int64</div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> relative priority of the job </div>
<div class="param">profile (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Job profiling requested </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Quality of Service </div>
<div class="param">reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> node reboot requested before start </div>
<div class="param">required_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma separated list of required nodes </div>
<div class="param">requeue (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> enable or disable job requeue option </div>
<div class="param">resize_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time of latest size change format: int64</div>
<div class="param">restart_cnt (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> count of job restarts </div>
<div class="param">resv_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> reservation name </div>
<div class="param">shared (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> type and if job can share nodes with other jobs </div>
<div class="param">show_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> details requested </div>
<div class="param">sockets_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> sockets per board required by job </div>
<div class="param">sockets_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> sockets per node required by job </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time execution begins, actual or expected format: int64</div>
<div class="param">state_description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> optional details for state_reason </div>
<div class="param">state_reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> reason job still pending or failed </div>
<div class="param">standard_error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> pathname of job's stderr file </div>
<div class="param">standard_input (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> pathname of job's stdin file </div>
<div class="param">standard_output (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> pathname of job's stdout file </div>
<div class="param">submit_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time of job submission format: int64</div>
<div class="param">suspend_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time job last suspended or resumed format: int64</div>
<div class="param">system_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> slurmctld's arbitrary comment </div>
<div class="param">time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> maximum run time in minutes </div>
<div class="param">time_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> minimum run time in minutes </div>
<div class="param">threads_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> threads per core required by job </div>
<div class="param">tres_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Task to TRES binding directives </div>
<div class="param">tres_freq (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES frequency directives </div>
<div class="param">tres_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">tres_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">tres_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">tres_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">tres_req_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> tres reqeusted in the job </div>
<div class="param">tres_alloc_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> tres used in the job </div>
<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> user id the job runs as </div>
<div class="param">user_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> user the job runs as </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> wckey for job </div>
<div class="param">current_working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> pathname of working directory </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_job_submission"><code>v0.0.37_job_submission</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">script </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Executable script (full contents) to run in batch step </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_job_properties">v0.0.37_job_properties</a></span>  </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_job_properties">array[v0.0.37_job_properties]</a></span> Properties of an HetJob </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_job_submission_response"><code>v0.0.37_job_submission_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_error">array[v0.0.37_error]</a></span> slurm errors </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> new job ID </div>
<div class="param">step_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> new job step ID </div>
<div class="param">job_submit_user_msg (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Message to user from job_submit plugin </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_jobs_response"><code>v0.0.37_jobs_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_error">array[v0.0.37_error]</a></span> slurm errors </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_job_response_properties">array[v0.0.37_job_response_properties]</a></span> job descriptions </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_node"><code>v0.0.37_node</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">architecture (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> computer architecture </div>
<div class="param">burstbuffer_network_address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> BcastAddr </div>
<div class="param">boards (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> total number of boards per node </div>
<div class="param">boot_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> timestamp of node boot format: int64</div>
<div class="param">cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of cores per socket </div>
<div class="param">cpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Default task binding </div>
<div class="param">cpu_load (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> CPU load * 100 format: int64</div>
<div class="param">free_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> free memory in MiB </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> configured count of cpus running on the node </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">active_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of a node's available features </div>
<div class="param">gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of a node's generic resources </div>
<div class="param">gres_drained (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of drained GRES </div>
<div class="param">gres_used (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of GRES in current use </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> mcs label if mcs plugin in use </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> node name to slurm </div>
<div class="param">next_state_after_reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> state after reboot </div>
<div class="param">next_state_after_reboot_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> node state flags </div>
<div class="param">address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> state after reboot </div>
<div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> node's hostname </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> current node state </div>
<div class="param">state_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> node state flags </div>
<div class="param">operating_system (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> operating system </div>
<div class="param">owner (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User allowed to use this node </div>
<div class="param">partitions (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> assigned partitions </div>
<div class="param">port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> TCP port number of the slurmd </div>
<div class="param">real_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> configured MB of real memory on the node </div>
<div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> reason for node being DOWN or DRAINING </div>
<div class="param">reason_changed_at (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Time stamp when reason was set </div>
<div class="param">reason_set_by_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User that set the reason </div>
<div class="param">slurmd_start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> timestamp of slurmd startup format: int64</div>
<div class="param">sockets (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> total number of sockets per node </div>
<div class="param">threads (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of threads per core </div>
<div class="param">temporary_disk (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> configured MB of total disk in TMP_FS </div>
<div class="param">weight (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> arbitrary priority of node for scheduling </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES on node </div>
<div class="param">tres_used (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES used on node </div>
<div class="param">tres_weighted (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> TRES weight used on node format: double</div>
<div class="param">slurmd_version (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurmd version </div>
<div class="param">alloc_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Allocated CPUs format: int64</div>
<div class="param">idle_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Idle CPUs format: int64</div>
<div class="param">alloc_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Allocated memory (MB) format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_node_allocation"><code>v0.0.37_node_allocation</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> amount of assigned job memory </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span> amount of assigned job CPUs </div>
<div class="param">sockets (optional)</div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span> assignment status of each socket by socket id </div>
<div class="param">cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span> assignment status of each core by core id </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_nodes_response"><code>v0.0.37_nodes_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_error">array[v0.0.37_error]</a></span> slurm errors </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_node">array[v0.0.37_node]</a></span> nodes info </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_partition"><code>v0.0.37_partition</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> partition options </div>
<div class="param">preemption_mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> preemption type </div>
<div class="param">allowed_allocation_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list names of allowed allocating nodes </div>
<div class="param">allowed_accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma delimited list of accounts </div>
<div class="param">allowed_groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma delimited list of groups </div>
<div class="param">allowed_qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma delimited list of qos </div>
<div class="param">alternative (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of alternate partition </div>
<div class="param">billing_weights (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES billing weights </div>
<div class="param">default_memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> default MB memory per allocated CPU format: int64</div>
<div class="param">default_time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> default time limit (minutes) format: int64</div>
<div class="param">denied_accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma delimited list of denied accounts </div>
<div class="param">denied_qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma delimited list of denied qos </div>
<div class="param">preemption_grace_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> preemption grace time (seconds) format: int64</div>
<div class="param">maximum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> maximum allocated CPUs per node </div>
<div class="param">maximum_memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> maximum memory per allocated CPU (MiB) format: int64</div>
<div class="param">maximum_nodes_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max nodes per job </div>
<div class="param">max_time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Max time limit per job format: int64</div>
<div class="param">min_nodes_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Min number of nodes per job </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition name </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list names of nodes in partition </div>
<div class="param">over_time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> job's time limit can be exceeded by this number of minutes before cancellation </div>
<div class="param">priority_job_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> job priority weight factor </div>
<div class="param">priority_tier (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> tier for scheduling and preemption </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> partition QOS name </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition state </div>
<div class="param">total_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total cpus in partition </div>
<div class="param">total_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of nodes in partition </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> configured TRES in partition </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_partitions_response"><code>v0.0.37_partitions_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_error">array[v0.0.37_error]</a></span> slurm errors </div>
<div class="param">partitions (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_partition">array[v0.0.37_partition]</a></span> partition info </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_ping"><code>v0.0.37_ping</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> slurm controller hostname </div>
<div class="param">ping (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> slurm controller host up </div>
        <div class="param-enum-header">Enum:</div>
        <div class="param-enum">UP</div><div class="param-enum">DOWN</div>
<div class="param">mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> slurm controller mode </div>
<div class="param">status (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> slurm controller status </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_pings"><code>v0.0.37_pings</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_error">array[v0.0.37_error]</a></span> slurm errors </div>
<div class="param">pings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_ping">array[v0.0.37_ping]</a></span> slurm controller pings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_reservation"><code>v0.0.37_reservation</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Allowed accounts </div>
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Reserved burst buffer </div>
<div class="param">core_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of reserved cores </div>
<div class="param">core_spec_cnt (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of reserved specialized cores </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> End time of the reservation </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of features </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Reservation options </div>
<div class="param">groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of groups permitted to use the reserved nodes </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of licenses </div>
<div class="param">max_start_delay (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum delay in which jobs outside of the reservation will be permitted to overlap once any jobs are queued for the reservation </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Reservationn name </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Count of nodes reserved </div>
<div class="param">node_list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of reserved nodes </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition </div>
<div class="param">purge_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_38_reservation_purge_completed">v0_0_38_reservation_purge_completed</a></span>  </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Start time of reservation </div>
<div class="param">watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> amount of power to reserve in watts </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of TRES </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of users </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_reservations_response"><code>v0.0.37_reservations_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_error">array[v0.0.37_error]</a></span> slurm errors </div>
<div class="param">reservations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.37_reservation">array[v0.0.37_reservation]</a></span> reservation info </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.37_signal"><code>v0.0.37_signal</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>POSIX signal name</div>
    <div class="field-items">
          </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_diag"><code>v0.0.38_diag</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_error">array[v0.0.38_error]</a></span> slurm errors </div>
<div class="param">statistics (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_38_diag_statistics">v0_0_38_diag_statistics</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_diag_rpcm"><code>v0.0.38_diag_rpcm</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">message_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> message type </div>
<div class="param">type_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> message type id </div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> rpc count </div>
<div class="param">average_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> average time </div>
<div class="param">total_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> total time </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_diag_rpcu"><code>v0.0.38_diag_rpcu</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> user </div>
<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> user id </div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> rpc count </div>
<div class="param">average_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> average time </div>
<div class="param">total_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> total time </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_error"><code>v0.0.38_error</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> error message </div>
<div class="param">error_number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Slurm internal error number </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_job_properties"><code>v0.0.38_job_properties</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Charge resources used by this job to specified account. </div>
<div class="param">account_gather_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Define the job accounting and profiling sampling intervals. </div>
<div class="param">argv (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Arguments to the script. </div>
<div class="param">array (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Submit a job array, multiple jobs to be executed with identical parameters. The indexes specification identifies what array index values should be used. </div>
<div class="param">batch_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> features required for batch script's node </div>
<div class="param">begin_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Submit the batch script to the Slurm controller immediately, like normal, but tell the controller to defer the allocation of the job until the specified time. format: int64</div>
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Burst buffer specification. </div>
<div class="param">cluster_constraint (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specifies features that a federated cluster must have to have a sibling job submitted to it. </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> An arbitrary comment. </div>
<div class="param">constraints (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> node features required by job. </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> absolute path to OCI container bundle </div>
<div class="param">core_specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Count of specialized threads per node reserved by the job for system operations and not used by the application. </div>
<div class="param">cores_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Restrict node selection to nodes with at least the specified number of cores per socket. </div>
<div class="param">cpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cpu binding </div>
<div class="param">cpu_binding_hint (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cpu binding hint </div>
<div class="param">cpu_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Request that job steps initiated by srun commands inside this sbatch script be run at some requested frequency if possible, on the CPUs selected for the step on the compute node(s). </div>
<div class="param">cpus_per_gpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Number of CPUs requested per allocated GPU. </div>
<div class="param">cpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Advise the Slurm controller that ensuing job steps will require ncpus number of processors per task. </div>
<div class="param">current_working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Instruct Slurm to connect the batch script's standard output directly to the file name. </div>
<div class="param">deadline (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Remove the job if no ending is possible before this deadline (start &gt; (deadline - time[-min])). </div>
<div class="param">delay_boot (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Do not reboot nodes in order to satisfied this job's feature specification if the job has been eligible to run for less than this time period. </div>
<div class="param">dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Defer the start of this job until the specified dependencies have been satisfied completed. </div>
<div class="param">distribution (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specify alternate distribution methods for remote processes. </div>
<div class="param">environment </div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span> Dictionary of environment entries. </div>
<div class="param">exclusive (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> The job allocation can share nodes just other users with the &quot;user&quot; option or with the &quot;mcs&quot; option). </div>
        <div class="param-enum-header">Enum:</div>
        <div class="param-enum">user</div><div class="param-enum">mcs</div><div class="param-enum">true</div><div class="param-enum">false</div>
<div class="param">get_user_environment (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Load new login environment for user on job node. </div>
<div class="param">gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specifies a comma delimited list of generic consumable resources. </div>
<div class="param">gres_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specify generic resource task binding options. </div>
        <div class="param-enum-header">Enum:</div>
        <div class="param-enum">disable-binding</div><div class="param-enum">enforce-binding</div>
<div class="param">gpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Requested binding of tasks to GPU. </div>
<div class="param">gpu_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Requested GPU frequency. </div>
<div class="param">gpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> GPUs per job. </div>
<div class="param">gpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> GPUs per node. </div>
<div class="param">gpus_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> GPUs per socket. </div>
<div class="param">gpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> GPUs per task. </div>
<div class="param">hold (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Specify the job is to be submitted in a held state (priority of zero). </div>
<div class="param">kill_on_invalid_dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> If a job has an invalid dependency, then Slurm is to terminate it. </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specification of licenses (or other resources available on all nodes of the cluster) which must be allocated to this job. </div>
<div class="param">mail_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Notify user by email when certain event types occur. </div>
<div class="param">mail_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User to receive email notification of state changes as defined by mail_type. </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> This parameter is a group among the groups of the user. </div>
<div class="param">memory_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Bind tasks to memory. </div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum real memory per cpu (MB). </div>
<div class="param">memory_per_gpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum memory required per allocated GPU. </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum real memory per node (MB). </div>
<div class="param">minimum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum number of CPUs per node. </div>
<div class="param">minimum_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> If a range of node counts is given, prefer the smaller count. </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specify a name for the job allocation. </div>
<div class="param">nice (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Run the job with an adjusted scheduling priority within Slurm. </div>
<div class="param">no_kill (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Do not automatically terminate a job if one of the nodes it has been allocated fails. </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">array[Integer]</a></span> Request that a minimum of minnodes nodes and a maximum node count. </div>
<div class="param">open_mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Open the output and error files using append or truncate mode as specified. </div>
        <div class="param-enum-header">Enum:</div>
        <div class="param-enum">append</div><div class="param-enum">truncate</div>
<div class="param">oversubscribe (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> The job allocation can over-subscribe resources with other running jobs. </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Request a specific partition for the resource allocation. </div>
<div class="param">prefer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma delimited list of features for scheduler to prefer but not a strict requirement like a constraint. Value can be used for job submission but is only displayed for PENDING jobs. </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Request a specific job priority. </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Request a quality of service for the job. </div>
<div class="param">requeue (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Specifies that the batch job should eligible to being requeue. </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Allocate resources for the job from the named reservation. </div>
<div class="param">signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> When a job is within sig_time seconds of its end time, send it the signal sig_num. </div>
<div class="param">sockets_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Restrict node selection to nodes with at least the specified number of sockets. </div>
<div class="param">spread_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Spread the job allocation over as many nodes as possible and attempt to evenly distribute tasks across the allocated nodes. </div>
<div class="param">standard_error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Instruct Slurm to connect the batch script's standard error directly to the file name. </div>
<div class="param">standard_input (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Instruct Slurm to connect the batch script's standard input directly to the file name specified. </div>
<div class="param">standard_output (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Instruct Slurm to connect the batch script's standard output directly to the file name. </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Advises the Slurm controller that job steps run within the allocation will launch a maximum of number tasks and to provide for sufficient resources. </div>
<div class="param">tasks_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Request the maximum ntasks be invoked on each core. </div>
<div class="param">tasks_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Request the maximum ntasks be invoked on each node. </div>
<div class="param">tasks_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Request the maximum ntasks be invoked on each socket. </div>
<div class="param">thread_specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Count of specialized threads per node reserved by the job for system operations and not used by the application. </div>
<div class="param">threads_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Restrict node selection to nodes with at least the specified number of threads per core. </div>
<div class="param">time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Step time limit in minutes. </div>
<div class="param">time_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum run time in minutes. </div>
<div class="param">wait_all_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Do not begin execution until all nodes are ready for use. </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Specify wckey to be used with job. </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_job_resources"><code>v0.0.38_job_resources</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of assigned job nodes </div>
<div class="param">allocated_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of assigned job cpus </div>
<div class="param">allocated_hosts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of assigned job hosts </div>
<div class="param">allocated_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_node_allocation">array[v0.0.38_node_allocation]</a></span> array of allocated nodes </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_job_response_properties"><code>v0.0.38_job_response_properties</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Charge resources used by this job to specified account </div>
<div class="param">accrue_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time job is eligible for running format: int64</div>
<div class="param">admin_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> administrator's arbitrary comment </div>
<div class="param">array_job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> job_id of a job array or 0 if N/A </div>
<div class="param">array_task_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> task_id of a job array </div>
<div class="param">array_max_tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum number of running array tasks </div>
<div class="param">array_task_string (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> string expression of task IDs in this record </div>
<div class="param">association_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> association id for job </div>
<div class="param">batch_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> features required for batch script's node </div>
<div class="param">batch_flag (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> if batch: queued job with script </div>
<div class="param">batch_host (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of host running batch script </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Job flags </div>
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> burst buffer specifications </div>
<div class="param">burst_buffer_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> burst buffer state info </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of cluster that the job is on </div>
<div class="param">cluster_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma separated list of required cluster features </div>
<div class="param">command (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> command to be executed </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> arbitrary comment </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> absolute path to OCI container bundle </div>
<div class="param">contiguous (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> job requires contiguous nodes </div>
<div class="param">core_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> specialized core count </div>
<div class="param">thread_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> specialized thread count </div>
<div class="param">cores_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> cores per socket required by job </div>
<div class="param">billable_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> billable TRES </div>
<div class="param">cpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> number of processors required for each task </div>
<div class="param">cpu_frequency_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Minimum cpu frequency </div>
<div class="param">cpu_frequency_maximum (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Maximum cpu frequency </div>
<div class="param">cpu_frequency_governor (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> cpu frequency governor </div>
<div class="param">cpus_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">deadline (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> job start deadline </div>
<div class="param">delay_boot (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> command to be executed </div>
<div class="param">dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> synchronize job execution with other jobs </div>
<div class="param">derived_exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> highest exit code of all job steps </div>
<div class="param">eligible_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time job is eligible for running format: int64</div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time of termination, actual or expected format: int64</div>
<div class="param">excluded_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma separated list of excluded nodes </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> exit code for job </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma separated list of required features </div>
<div class="param">federation_origin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Origin cluster's name </div>
<div class="param">federation_siblings_active (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> string of active sibling names </div>
<div class="param">federation_siblings_viable (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> string of viable sibling names </div>
<div class="param">gres_detail (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Job flags </div>
<div class="param">group_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> group job submitted as </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> job ID </div>
<div class="param">job_resources (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_job_resources">v0.0.38_job_resources</a></span>  </div>
<div class="param">job_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> state of the job </div>
<div class="param">last_sched_evaluation (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> last time job was evaluated for scheduling </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> licenses required by the job </div>
<div class="param">max_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> maximum number of cpus usable by job </div>
<div class="param">max_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> maximum number of nodes usable by job </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> mcs_label if mcs plugin in use </div>
<div class="param">memory_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of the job </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of nodes allocated to job </div>
<div class="param">nice (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> requested priority change </div>
<div class="param">tasks_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of tasks to invoke on each core </div>
<div class="param">tasks_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of tasks to invoke on each socket </div>
<div class="param">tasks_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of tasks to invoke on each board </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> minimum number of cpus required by job </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> minimum number of nodes required by job </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> requested task count </div>
<div class="param">het_job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> job ID of hetjob leader </div>
<div class="param">het_job_id_set (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> job IDs for all components </div>
<div class="param">het_job_offset (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> HetJob component offset from leader </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of assigned partition </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> minimum real memory per node </div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> minimum real memory per cpu </div>
<div class="param">minimum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> minimum # CPUs per node </div>
<div class="param">minimum_tmp_disk_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> minimum tmp disk per node </div>
<div class="param">preempt_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> preemption signal time format: int64</div>
<div class="param">pre_sus_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time job ran prior to last suspend format: int64</div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> relative priority of the job </div>
<div class="param">profile (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Job profiling requested </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Quality of Service </div>
<div class="param">reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> node reboot requested before start </div>
<div class="param">required_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma separated list of required nodes </div>
<div class="param">requeue (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> enable or disable job requeue option </div>
<div class="param">resize_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time of latest size change format: int64</div>
<div class="param">restart_cnt (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> count of job restarts </div>
<div class="param">resv_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> reservation name </div>
<div class="param">shared (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> type and if job can share nodes with other jobs </div>
<div class="param">show_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> details requested </div>
<div class="param">sockets_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> sockets per board required by job </div>
<div class="param">sockets_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> sockets per node required by job </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time execution begins, actual or expected format: int64</div>
<div class="param">state_description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> optional details for state_reason </div>
<div class="param">state_reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> reason job still pending or failed </div>
<div class="param">standard_error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> pathname of job's stderr file </div>
<div class="param">standard_input (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> pathname of job's stdin file </div>
<div class="param">standard_output (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> pathname of job's stdout file </div>
<div class="param">submit_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time of job submission format: int64</div>
<div class="param">suspend_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> time job last suspended or resumed format: int64</div>
<div class="param">system_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> slurmctld's arbitrary comment </div>
<div class="param">time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> maximum run time in minutes format: int64</div>
<div class="param">time_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> minimum run time in minutes format: int64</div>
<div class="param">threads_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> threads per core required by job </div>
<div class="param">tres_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Task to TRES binding directives </div>
<div class="param">tres_freq (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES frequency directives </div>
<div class="param">tres_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">tres_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">tres_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">tres_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> semicolon delimited list of TRES=# values </div>
<div class="param">tres_req_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> tres reqeusted in the job </div>
<div class="param">tres_alloc_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> tres used in the job </div>
<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> user id the job runs as format: int64</div>
<div class="param">user_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> user the job runs as </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> wckey for job </div>
<div class="param">current_working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> pathname of working directory </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_job_submission"><code>v0.0.38_job_submission</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">script </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Executable script (full contents) to run in batch step </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_job_properties">v0.0.38_job_properties</a></span>  </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_job_properties">array[v0.0.38_job_properties]</a></span> Properties of an HetJob </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_job_submission_response"><code>v0.0.38_job_submission_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_error">array[v0.0.38_error]</a></span> slurm errors </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> new job ID </div>
<div class="param">step_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> new job step ID </div>
<div class="param">job_submit_user_msg (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Message to user from job_submit plugin </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_jobs_response"><code>v0.0.38_jobs_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_error">array[v0.0.38_error]</a></span> slurm errors </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_job_response_properties">array[v0.0.38_job_response_properties]</a></span> job descriptions </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_license"><code>v0.0.38_license</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">LicenseName (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of license </div>
<div class="param">Total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> total number of licenses </div>
<div class="param">Used (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of licenses in use </div>
<div class="param">Free (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of licenses available </div>
<div class="param">Reserved (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of licenses reserved </div>
<div class="param">Remote (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> license is remote </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_licenses"><code>v0.0.38_licenses</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_error">array[v0.0.38_error]</a></span> slurm errors </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_license">array[v0.0.38_license]</a></span> licenses info </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_meta"><code>v0.0.38_meta</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">plugin (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_meta_plugin">dbv0_0_38_meta_plugin</a></span>  </div>
<div class="param">Slurm (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_meta_Slurm">dbv0_0_38_meta_Slurm</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_node"><code>v0.0.38_node</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">architecture (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> computer architecture </div>
<div class="param">burstbuffer_network_address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> BcastAddr </div>
<div class="param">boards (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> total number of boards per node </div>
<div class="param">boot_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> timestamp of node boot format: int64</div>
<div class="param">cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of cores per socket </div>
<div class="param">cpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Default task binding </div>
<div class="param">cpu_load (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> CPU load * 100 format: int64</div>
<div class="param">free_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> free memory in MiB </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> configured count of cpus running on the node </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">active_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of a node's available features </div>
<div class="param">gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of a node's generic resources </div>
<div class="param">gres_drained (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of drained GRES </div>
<div class="param">gres_used (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list of GRES in current use </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> mcs label if mcs plugin in use </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> node name to slurm </div>
<div class="param">next_state_after_reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> state after reboot </div>
<div class="param">next_state_after_reboot_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> node state flags </div>
<div class="param">address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> state after reboot </div>
<div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> node's hostname </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> current node state </div>
<div class="param">state_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> node state flags </div>
<div class="param">operating_system (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> operating system </div>
<div class="param">owner (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User allowed to use this node </div>
<div class="param">partitions (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> assigned partitions </div>
<div class="param">port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> TCP port number of the slurmd </div>
<div class="param">real_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> configured MB of real memory on the node </div>
<div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> reason for node being DOWN or DRAINING </div>
<div class="param">reason_changed_at (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Time stamp when reason was set </div>
<div class="param">reason_set_by_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User that set the reason </div>
<div class="param">slurmd_start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> timestamp of slurmd startup format: int64</div>
<div class="param">sockets (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> total number of sockets per node </div>
<div class="param">threads (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of threads per core </div>
<div class="param">temporary_disk (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> configured MB of total disk in TMP_FS </div>
<div class="param">weight (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> arbitrary priority of node for scheduling </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES on node </div>
<div class="param">tres_used (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES used on node </div>
<div class="param">tres_weighted (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> TRES weight used on node format: double</div>
<div class="param">slurmd_version (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurmd version </div>
<div class="param">alloc_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Allocated CPUs format: int64</div>
<div class="param">idle_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Idle CPUs format: int64</div>
<div class="param">alloc_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Allocated memory (MB) format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_node_allocation"><code>v0.0.38_node_allocation</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> amount of assigned job memory </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> number of assigned job CPUs </div>
<div class="param">sockets (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_38_node_allocation_sockets">v0_0_38_node_allocation_sockets</a></span>  </div>
<div class="param">nodename (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> node name </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_nodes_response"><code>v0.0.38_nodes_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_error">array[v0.0.38_error]</a></span> slurm errors </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_node">array[v0.0.38_node]</a></span> nodes info </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_partition"><code>v0.0.38_partition</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> partition options </div>
<div class="param">preemption_mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> preemption type </div>
<div class="param">allowed_allocation_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list names of allowed allocating nodes </div>
<div class="param">allowed_accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma delimited list of accounts </div>
<div class="param">allowed_groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma delimited list of groups </div>
<div class="param">allowed_qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma delimited list of qos </div>
<div class="param">alternative (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> name of alternate partition </div>
<div class="param">billing_weights (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES billing weights </div>
<div class="param">default_memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> default MB memory per allocated CPU format: int64</div>
<div class="param">default_time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> default time limit (minutes) format: int64</div>
<div class="param">denied_accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma delimited list of denied accounts </div>
<div class="param">denied_qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> comma delimited list of denied qos </div>
<div class="param">preemption_grace_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> preemption grace time (seconds) format: int64</div>
<div class="param">maximum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> maximum allocated CPUs per node </div>
<div class="param">maximum_memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> maximum memory per allocated node (MiB) format: int64</div>
<div class="param">maximum_nodes_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max nodes per job </div>
<div class="param">max_time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Max time limit per job format: int64</div>
<div class="param">min_nodes_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Min number of nodes per job </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition name </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> list names of nodes in partition </div>
<div class="param">over_time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> job's time limit can be exceeded by this number of minutes before cancellation </div>
<div class="param">priority_job_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> job priority weight factor </div>
<div class="param">priority_tier (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> tier for scheduling and preemption </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> partition QOS name </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition state </div>
<div class="param">total_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total cpus in partition </div>
<div class="param">total_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of nodes in partition </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> configured TRES in partition </div>
<div class="param">maximum_memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> maximum memory per allocated CPU (MiB) format: int64</div>
<div class="param">default_memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> default MB memory per allocated node format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_partitions_response"><code>v0.0.38_partitions_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_error">array[v0.0.38_error]</a></span> slurm errors </div>
<div class="param">partitions (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_partition">array[v0.0.38_partition]</a></span> partition info </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_ping"><code>v0.0.38_ping</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> slurm controller hostname </div>
<div class="param">ping (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> slurm controller host up </div>
        <div class="param-enum-header">Enum:</div>
        <div class="param-enum">UP</div><div class="param-enum">DOWN</div>
<div class="param">mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> slurm controller mode </div>
<div class="param">status (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> slurm controller status </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_pings"><code>v0.0.38_pings</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_error">array[v0.0.38_error]</a></span> slurm errors </div>
<div class="param">pings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_ping">array[v0.0.38_ping]</a></span> slurm controller pings </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_reservation"><code>v0.0.38_reservation</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Allowed accounts </div>
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Reserved burst buffer </div>
<div class="param">core_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of reserved cores </div>
<div class="param">core_spec_cnt (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of reserved specialized cores </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> End time of the reservation </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of features </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Reservation options </div>
<div class="param">groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of groups permitted to use the reserved nodes </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of licenses </div>
<div class="param">max_start_delay (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum delay in which jobs outside of the reservation will be permitted to overlap once any jobs are queued for the reservation </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Reservationn name </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Count of nodes reserved </div>
<div class="param">node_list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of reserved nodes </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition </div>
<div class="param">purge_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_38_reservation_purge_completed">v0_0_38_reservation_purge_completed</a></span>  </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Start time of reservation </div>
<div class="param">watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> amount of power to reserve in watts </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of TRES </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of users </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_reservations_response"><code>v0.0.38_reservations_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_meta">v0.0.38_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_error">array[v0.0.38_error]</a></span> slurm errors </div>
<div class="param">reservations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_reservation">array[v0.0.38_reservation]</a></span> reservation info </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.38_signal"><code>v0.0.38_signal</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>POSIX signal name</div>
    <div class="field-items">
          </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_account"><code>v0.0.39_account</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_assoc_short">array[v0.0.39_assoc_short]</a></span>  </div>
<div class="param">coordinators (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_coord">array[v0.0.39_coord]</a></span>  </div>
<div class="param">description </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">name </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">organization </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_accounting"><code>v0.0.39_accounting</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_accounting_allocated">v0_0_39_accounting_allocated</a></span>  </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">start (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">TRES (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_tres">v0.0.39_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_acct_gather_energy"><code>v0.0.39_acct_gather_energy</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">average_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">base_consumed_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">consumed_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">current_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">previous_consumed_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">last_collected (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_assoc"><code>v0.0.39_assoc</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">default (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_assoc_default">v0_0_39_assoc_default</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_assoc_max">v0_0_39_assoc_max</a></span>  </div>
<div class="param">is_default (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_assoc_min">v0_0_39_assoc_min</a></span>  </div>
<div class="param">parent_account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of QOS names </div>
<div class="param">shares_raw (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_assoc_usage">v0.0.39_assoc_usage</a></span>  </div>
<div class="param">user </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_assoc_short"><code>v0.0.39_assoc_short</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">user </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_assoc_usage"><code>v0.0.39_assoc_usage</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">accrue_job_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">group_used_wallclock (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span>  format: double</div>
<div class="param">fairshare_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span>  format: double</div>
<div class="param">fairshare_shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">normalized_priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span>  format: double</div>
<div class="param">normalized_shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span>  format: double</div>
<div class="param">effective_normalized_usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span>  </div>
<div class="param">normalized_usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span>  </div>
<div class="param">raw_usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span>  </div>
<div class="param">active_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">job_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">fairshare_level (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_cluster_rec"><code>v0.0.39_cluster_rec</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">controller (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_cluster_rec_controller">v0_0_39_cluster_rec_controller</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">select_plugin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_cluster_rec_associations">v0_0_39_cluster_rec_associations</a></span>  </div>
<div class="param">rpc_version (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_tres">array[v0.0.39_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_controller_ping"><code>v0.0.39_controller_ping</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">pinged (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">latency (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_coord"><code>v0.0.39_coord</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">name </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">direct (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_cron_entry"><code>v0.0.39_cron_entry</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">minute (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">hour (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">day_of_month (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">month (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">day_of_week (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">command (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">line (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_cron_entry_line">v0_0_39_cron_entry_line</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_diag"><code>v0.0.39_diag</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_meta">v0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_error">array[v0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_warning">array[v0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">statistics (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_stats_msg">v0.0.39_stats_msg</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_error"><code>v0.0.39_error</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">error_number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Slurm internal error number </div>
<div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Error message </div>
<div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Where error occurred in the source </div>
<div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Explaination of cause of error </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_ext_sensors_data"><code>v0.0.39_ext_sensors_data</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">consumed_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint64_no_val">v0.0.39_uint64_no_val</a></span>  </div>
<div class="param">temperature (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">energy_update_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">current_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_float64_no_val"><code>v0.0.39_float64_no_val</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>64 bit floating point number with flags</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. &quot;set&quot; and &quot;number&quot; will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: double</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_job"><code>v0.0.39_job</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_comment">v0_0_39_job_comment</a></span>  </div>
<div class="param">allocation_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">array (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_array">v0_0_39_job_array</a></span>  </div>
<div class="param">association (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_assoc_short">v0.0.39_assoc_short</a></span>  </div>
<div class="param">block (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">constraints (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">derived_exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_job_exit_code">v0.0.39_job_exit_code</a></span>  </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_time">v0_0_39_job_time</a></span>  </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_job_exit_code">v0.0.39_job_exit_code</a></span>  </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">failed_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">group (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">het (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_het">v0_0_39_job_het</a></span>  </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">mcs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_mcs">v0_0_39_job_mcs</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">required (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_required">v0_0_39_job_required</a></span>  </div>
<div class="param">kill_request_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_reservation">v0_0_39_job_reservation</a></span>  </div>
<div class="param">script (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_state">v0_0_39_job_state</a></span>  </div>
<div class="param">steps (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_step">array[v0.0.39_step]</a></span>  </div>
<div class="param">submit_line (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_tres">v0_0_39_job_tres</a></span>  </div>
<div class="param">used_gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_wckey_tag">v0.0.39_wckey_tag</a></span>  </div>
<div class="param">working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_job_desc_msg"><code>v0.0.39_job_desc_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">account_gather_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">admin_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">allocation_node_list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">allocation_node_port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">argv (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">array (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">batch_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">begin_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cluster_constraint (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">contiguous (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">container_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">core_specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">thread_specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">cpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cpu_binding_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">cpu_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cpus_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">crontab (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_cron_entry">v0.0.39_cron_entry</a></span>  </div>
<div class="param">deadline (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">delay_boot (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">environment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">excluded_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">constraints (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">group_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">hetjob_group (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">immediate (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">kill_on_node_fail (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">mail_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">mail_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">memory_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">memory_binding_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">memory_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">network (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">nice (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">open_mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">reserve_ports (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">overcommit (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">distribution_plane_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">power_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">prefer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">profile (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">required_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">requeue (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">script (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">shared (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">site_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">spank_environment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">distribution (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">time_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">tres_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_freq (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">wait_all_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">kill_warning_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">kill_warning_signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">kill_warning_delay (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">current_working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">minimum_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">maximum_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">minimum_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">maximum_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">minimum_boards_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">minimum_sockets_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">sockets_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">threads_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">ntasks_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">minimum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint64_no_val">v0.0.39_uint64_no_val</a></span>  </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint64_no_val">v0.0.39_uint64_no_val</a></span>  </div>
<div class="param">temporary_disk_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">selinux_context (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">required_switches (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">standard_error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">standard_input (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">standard_output (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">wait_for_switch (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">x11 (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">x11_magic_cookie (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">x11_target_host (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">x11_target_port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_job_exit_code"><code>v0.0.39_job_exit_code</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>job exit details</div>
    <div class="field-items">
      <div class="param">status (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> exit status </div>
<div class="param">return_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> return code (numeric) format: int32</div>
<div class="param">signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_exit_code_signal">v0_0_39_job_exit_code_signal</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_job_info"><code>v0.0.39_job_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">accrue_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">admin_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">allocating_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">array_job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">array_task_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">array_max_tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">array_task_string (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">association_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">batch_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">batch_flag (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">batch_host (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">burst_buffer_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cluster_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">command (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">container_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">contiguous (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">core_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">thread_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">cores_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">billable_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_float64_no_val">v0.0.39_float64_no_val</a></span>  </div>
<div class="param">cpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">cpu_frequency_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">cpu_frequency_maximum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">cpu_frequency_governor (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">cpus_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cron (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">deadline (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">delay_boot (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">derived_exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">eligible_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">excluded_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">failed_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">federation_origin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">federation_siblings_active (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">federation_siblings_viable (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">gres_detail (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">group_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">group_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">het_job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">het_job_id_set (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">het_job_offset (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">job_resources (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_job_res">v0.0.39_job_res</a></span>  </div>
<div class="param">job_size_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">job_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">last_sched_evaluation (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">mail_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">mail_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">max_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">max_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">memory_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">network (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">nice (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tasks_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">tasks_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">tasks_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">tasks_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">tasks_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">prefer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint64_no_val">v0.0.39_uint64_no_val</a></span>  </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint64_no_val">v0.0.39_uint64_no_val</a></span>  </div>
<div class="param">minimum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">minimum_tmp_disk_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">power (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_info_power">v0_0_39_job_info_power</a></span>  </div>
<div class="param">preempt_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">preemptable_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">pre_sus_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">profile (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">required_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">minimum_switches (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">requeue (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">resize_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">restart_cnt (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">resv_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">scheduled_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">selinux_context (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">shared (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">show_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">sockets_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">sockets_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">state_description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">state_reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">standard_error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">standard_input (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">standard_output (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">submit_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">suspend_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">system_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">time_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">threads_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
<div class="param">tres_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_freq (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_req_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_alloc_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">user_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">maximum_switch_wait_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">current_working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_job_res"><code>v0.0.39_job_res</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">allocated_cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">allocated_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">allocated_hosts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">allocated_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#AnyType">array[oas_any_type_not_mapped]</a></span> job node resources </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_job_submission"><code>v0.0.39_job_submission</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">script (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Executable script (full contents) to run in batch step for all job components </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_job_desc_msg">v0.0.39_job_desc_msg</a></span>  </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_job_desc_msg">array[v0.0.39_job_desc_msg]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_job_submission_response"><code>v0.0.39_job_submission_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_meta">v0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_error">array[v0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_warning">array[v0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> new job ID </div>
<div class="param">step_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> new job step ID </div>
<div class="param">job_submit_user_msg (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Message to user from job_submit plugin </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_job_update_response"><code>v0.0.39_job_update_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_meta">v0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_error">array[v0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_warning">array[v0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">results (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_array_response_msg_inner">array[v0_0_39_job_array_response_msg_inner]</a></span> Result per ArrayJob </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_jobs_response"><code>v0.0.39_jobs_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_meta">v0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_error">array[v0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_warning">array[v0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_job_info">array[v0.0.39_job_info]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_license"><code>v0.0.39_license</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">LicenseName (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">Total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">Used (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">Free (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">Remote (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">Reserved (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">LastConsumed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">LastDeficit (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">LastUpdate (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_licenses_info"><code>v0.0.39_licenses_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_meta">v0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_error">array[v0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_warning">array[v0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_license">array[v0.0.39_license]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_meta"><code>v0.0.39_meta</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">plugin (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_38_meta_plugin">dbv0_0_38_meta_plugin</a></span>  </div>
<div class="param">Slurm (optional)</div><div class="param-desc"><span class="param-type"><a href="#dbv0_0_39_meta_Slurm">dbv0_0_39_meta_Slurm</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_node"><code>v0.0.39_node</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">architecture (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">burstbuffer_network_address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">boards (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">boot_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">cluster_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">specialized_cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">cpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">cpu_load (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">free_mem (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint64_no_val">v0.0.39_uint64_no_val</a></span>  </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">effective_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">specialized_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_acct_gather_energy">v0.0.39_acct_gather_energy</a></span>  </div>
<div class="param">external_sensors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_ext_sensors_data">v0.0.39_ext_sensors_data</a></span>  </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">power (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_power_mgmt_data">v0.0.39_power_mgmt_data</a></span>  </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">active_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">gres_drained (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">gres_used (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">last_busy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">specialized_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">next_state_after_reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">operating_system (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">owner (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">partitions (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">real_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">reason_changed_at (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">reason_set_by_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">resume_after (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint64_no_val">v0.0.39_uint64_no_val</a></span>  </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">alloc_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">alloc_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">alloc_idle_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tres_used (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres_weighted (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span>  format: double</div>
<div class="param">slurmd_start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">sockets (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">threads (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">temporary_disk (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">weight (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">version (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_nodes_response"><code>v0.0.39_nodes_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_meta">v0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_error">array[v0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_warning">array[v0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_node">array[v0.0.39_node]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_partition_info"><code>v0.0.39_partition_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_nodes">v0_0_39_partition_info_nodes</a></span>  </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_accounts">v0_0_39_partition_info_accounts</a></span>  </div>
<div class="param">groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_groups">v0_0_39_partition_info_groups</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_qos">v0_0_39_partition_info_qos</a></span>  </div>
<div class="param">alternate (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_tres">v0_0_39_partition_info_tres</a></span>  </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_nodes">v0_0_39_partition_info_nodes</a></span>  </div>
<div class="param">defaults (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_defaults">v0_0_39_partition_info_defaults</a></span>  </div>
<div class="param">grace_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">maximums (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_maximums">v0_0_39_partition_info_maximums</a></span>  </div>
<div class="param">minimums (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_minimums">v0_0_39_partition_info_minimums</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">node_sets (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_priority">v0_0_39_partition_info_priority</a></span>  </div>
<div class="param">timeouts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_partition_info_timeouts">v0_0_39_partition_info_timeouts</a></span>  </div>
<div class="param">suspend_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_partitions_response"><code>v0.0.39_partitions_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_meta">v0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_error">array[v0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_warning">array[v0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">partitions (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_partition_info">array[v0.0.39_partition_info]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_pings"><code>v0.0.39_pings</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_meta">v0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_error">array[v0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_warning">array[v0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">pings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_controller_ping">array[v0.0.39_controller_ping]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_power_mgmt_data"><code>v0.0.39_power_mgmt_data</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">maximum_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">current_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">total_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">new_maximum_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">peak_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">lowest_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">new_job_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">time_start_day (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_qos"><code>v0.0.39_qos</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">limits (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_qos_limits">v0_0_39_qos_limits</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">preempt (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_qos_preempt">v0_0_39_qos_preempt</a></span>  </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">usage_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_float64_no_val">v0.0.39_float64_no_val</a></span>  </div>
<div class="param">usage_threshold (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_float64_no_val">v0.0.39_float64_no_val</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_reservation_core_spec"><code>v0.0.39_reservation_core_spec</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">core (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_reservation_info"><code>v0.0.39_reservation_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">core_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">core_specializations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_reservation_core_spec">array[v0.0.39_reservation_core_spec]</a></span>  </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">max_start_delay (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">node_list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">purge_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_reservation_info_purge_completed">v0_0_39_reservation_info_purge_completed</a></span>  </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_reservations_response"><code>v0.0.39_reservations_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_meta">v0.0.39_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_error">array[v0.0.39_error]</a></span> Slurm errors </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_warning">array[v0.0.39_warning]</a></span> Slurm warnings </div>
<div class="param">reservations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_reservation_info">array[v0.0.39_reservation_info]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_slurm_step_id"><code>v0.0.39_slurm_step_id</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>step details</div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> JobID format: int32</div>
<div class="param">step_het_component (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> HetStep format: int32</div>
<div class="param">step_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_stats_msg"><code>v0.0.39_stats_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">parts_packed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">req_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">req_time_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">server_thread_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">agent_queue_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">agent_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">agent_thread_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">dbd_agent_queue_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">gettimeofday_latency (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">schedule_cycle_max (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">schedule_cycle_last (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">schedule_cycle_total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">schedule_cycle_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">schedule_cycle_mean_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">schedule_cycle_per_minute (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">schedule_queue_length (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_submitted (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_started (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_canceled (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_failed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_pending (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">jobs_running (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">job_states_ts (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_backfilled_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_last_backfilled_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_backfilled_het_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_cycle_counter (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_cycle_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_depth_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_depth_mean_try (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_cycle_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_cycle_last (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_last_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_last_depth_try (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_depth_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_depth_try_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_queue_len (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_queue_len_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_queue_len_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_table_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">bf_table_size_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_when_last_cycle (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">bf_active (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span>  </div>
<div class="param">rpcs_by_message_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_stats_msg_rpcs_by_type_inner">array[v0_0_39_stats_msg_rpcs_by_type_inner]</a></span> RPCs by message type </div>
<div class="param">rpcs_by_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_stats_msg_rpcs_by_user_inner">array[v0_0_39_stats_msg_rpcs_by_user_inner]</a></span> RPCs by user </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_stats_rec"><code>v0.0.39_stats_rec</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">time_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
<div class="param">rollups (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_rollup_stats_inner">array[v0_0_39_rollup_stats_inner]</a></span> list of recorded rollup statistics </div>
<div class="param">RPCs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_stats_rpc">array[v0.0.39_stats_rpc]</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_stats_user">array[v0.0.39_stats_user]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_stats_rpc"><code>v0.0.39_stats_rpc</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">rpc (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_stats_rpc_time">v0_0_39_stats_rpc_time</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_stats_user"><code>v0.0.39_stats_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_stats_rpc_time">v0_0_39_stats_rpc_time</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_step"><code>v0.0.39_step</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_step_time">v0_0_39_step_time</a></span>  </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_job_exit_code">v0.0.39_job_exit_code</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_step_nodes">v0_0_39_step_nodes</a></span>  </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_step_tasks">v0_0_39_step_tasks</a></span>  </div>
<div class="param">pid (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">CPU (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_step_CPU">v0_0_39_step_CPU</a></span>  </div>
<div class="param">kill_request_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">statistics (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_step_statistics">v0_0_39_step_statistics</a></span>  </div>
<div class="param">step (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_reservation">v0_0_39_job_reservation</a></span>  </div>
<div class="param">task (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_step_task">v0_0_39_step_task</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_step_tres">v0_0_39_step_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_tres"><code>v0.0.39_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">type </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_uint16_no_val"><code>v0.0.39_uint16_no_val</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Integer number with flags</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. &quot;set&quot; and &quot;number&quot; will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_uint32_no_val"><code>v0.0.39_uint32_no_val</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Integer number with flags</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. &quot;set&quot; and &quot;number&quot; will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_uint64_no_val"><code>v0.0.39_uint64_no_val</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Integer number with flags</div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set. False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite. &quot;set&quot; and &quot;number&quot; will be ignored. </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If set is True the number will be set with value. Otherwise ignore number contents. format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_update_node_msg"><code>v0.0.39_update_node_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">cpu_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">features_act (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">reason_uid (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">resume_after (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
<div class="param">weight (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_user"><code>v0.0.39_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">administrator_level (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_assoc_short">array[v0.0.39_assoc_short]</a></span>  </div>
<div class="param">coordinators (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_coord">array[v0.0.39_coord]</a></span>  </div>
<div class="param">default (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_user_default">v0_0_39_user_default</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
<div class="param">name </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">old_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_wckey">array[v0.0.39_wckey]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_warning"><code>v0.0.39_warning</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">warning (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Earning message </div>
<div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Where error occurred in the source </div>
<div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Explaination of cause of error </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_wckey"><code>v0.0.39_wckey</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">accounting (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_accounting">array[v0.0.39_accounting]</a></span>  </div>
<div class="param">cluster </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
<div class="param">name </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">user </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.39_wckey_tag"><code>v0.0.39_wckey_tag</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>wckey details</div>
    <div class="field-items">
      <div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> wckey </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> active flags </div>
        <div class="param-enum-header">Enum:</div>
        
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_37_diag_statistics"><code>v0_0_37_diag_statistics</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Slurm statistics</div>
    <div class="field-items">
      <div class="param">parts_packed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> partition records packed </div>
<div class="param">req_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> generation time </div>
<div class="param">req_time_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> data since </div>
<div class="param">server_thread_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Server thread count </div>
<div class="param">agent_queue_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Agent queue size </div>
<div class="param">agent_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Agent count </div>
<div class="param">agent_thread_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Agent thread count </div>
<div class="param">dbd_agent_queue_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> DBD Agent queue size </div>
<div class="param">gettimeofday_latency (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Latency for 1000 calls to gettimeofday() </div>
<div class="param">schedule_cycle_max (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Main Schedule max cycle </div>
<div class="param">schedule_cycle_last (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Main Schedule last cycle </div>
<div class="param">schedule_cycle_total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Main Schedule cycle iterations </div>
<div class="param">schedule_cycle_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Average time for Schedule Max cycle </div>
<div class="param">schedule_cycle_mean_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Average depth for Schedule Max cycle </div>
<div class="param">schedule_cycle_per_minute (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Main Schedule Cycles per minute </div>
<div class="param">schedule_queue_length (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Main Schedule Last queue length </div>
<div class="param">jobs_submitted (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job submitted </div>
<div class="param">jobs_started (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job started </div>
<div class="param">jobs_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job completed </div>
<div class="param">jobs_canceled (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job cancelled </div>
<div class="param">jobs_failed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job failed </div>
<div class="param">jobs_pending (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job pending </div>
<div class="param">jobs_running (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job running </div>
<div class="param">job_states_ts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job states timestamp </div>
<div class="param">bf_backfilled_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total backfilled jobs (since last slurm start) </div>
<div class="param">bf_last_backfilled_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total backfilled jobs (since last stats cycle start) </div>
<div class="param">bf_backfilled_het_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total backfilled heterogeneous job components </div>
<div class="param">bf_cycle_counter (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Total cycles </div>
<div class="param">bf_cycle_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Mean cycle </div>
<div class="param">bf_cycle_max (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Max cycle time </div>
<div class="param">bf_last_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Last depth cycle </div>
<div class="param">bf_last_depth_try (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Mean cycle (try sched) </div>
<div class="param">bf_depth_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Depth Mean </div>
<div class="param">bf_depth_mean_try (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Depth Mean (try sched) </div>
<div class="param">bf_cycle_last (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Last cycle time </div>
<div class="param">bf_queue_len (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Last queue length </div>
<div class="param">bf_queue_len_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Mean queue length </div>
<div class="param">bf_when_last_cycle (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Last cycle timestamp </div>
<div class="param">bf_active (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Backfill Schedule currently active </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_38_diag_statistics"><code>v0_0_38_diag_statistics</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Slurm statistics</div>
    <div class="field-items">
      <div class="param">parts_packed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> partition records packed </div>
<div class="param">req_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> generation time </div>
<div class="param">req_time_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> data since </div>
<div class="param">server_thread_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Server thread count </div>
<div class="param">agent_queue_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Agent queue size </div>
<div class="param">agent_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Agent count </div>
<div class="param">agent_thread_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Agent thread count </div>
<div class="param">dbd_agent_queue_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> DBD Agent queue size </div>
<div class="param">gettimeofday_latency (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Latency for 1000 calls to gettimeofday() </div>
<div class="param">schedule_cycle_max (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Main Schedule max cycle </div>
<div class="param">schedule_cycle_last (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Main Schedule last cycle </div>
<div class="param">schedule_cycle_total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Main Schedule cycle iterations </div>
<div class="param">schedule_cycle_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Average time for Schedule Max cycle </div>
<div class="param">schedule_cycle_mean_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Average depth for Schedule Max cycle </div>
<div class="param">schedule_cycle_per_minute (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Main Schedule Cycles per minute </div>
<div class="param">schedule_queue_length (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Main Schedule Last queue length </div>
<div class="param">jobs_submitted (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job submitted </div>
<div class="param">jobs_started (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job started </div>
<div class="param">jobs_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job completed </div>
<div class="param">jobs_canceled (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job cancelled </div>
<div class="param">jobs_failed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job failed </div>
<div class="param">jobs_pending (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job pending </div>
<div class="param">jobs_running (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job running </div>
<div class="param">job_states_ts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job states timestamp </div>
<div class="param">bf_backfilled_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total backfilled jobs (since last slurm start) </div>
<div class="param">bf_last_backfilled_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total backfilled jobs (since last stats cycle start) </div>
<div class="param">bf_backfilled_het_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total backfilled heterogeneous job components </div>
<div class="param">bf_cycle_counter (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Total cycles </div>
<div class="param">bf_cycle_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Mean cycle </div>
<div class="param">bf_cycle_max (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Max cycle time </div>
<div class="param">bf_last_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Last depth cycle </div>
<div class="param">bf_last_depth_try (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Mean cycle (try sched) </div>
<div class="param">bf_depth_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Depth Mean </div>
<div class="param">bf_depth_mean_try (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Depth Mean (try sched) </div>
<div class="param">bf_cycle_last (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Last cycle time </div>
<div class="param">bf_queue_len (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Last queue length </div>
<div class="param">bf_queue_len_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Mean queue length </div>
<div class="param">bf_table_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Last table size </div>
<div class="param">bf_table_size_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Backfill Schedule Mean table size </div>
<div class="param">bf_when_last_cycle (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Last cycle timestamp </div>
<div class="param">bf_active (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Backfill Schedule currently active </div>
<div class="param">rpcs_by_message_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_diag_rpcm">array[v0.0.38_diag_rpcm]</a></span> Remote Procedure Call statistics by message type </div>
<div class="param">rpcs_by_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.38_diag_rpcu">array[v0.0.38_diag_rpcu]</a></span> Remote Procedure Call statistics by user </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_38_node_allocation_sockets"><code>v0_0_38_node_allocation_sockets</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>assignment status of each socket by numeric socket id</div>
    <div class="field-items">
      <div class="param">cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span> assignment status of each core by core id in each socket </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_38_reservation_purge_completed"><code>v0_0_38_reservation_purge_completed</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>If PURGE_COMP flag is set the amount of seconds this reservation will sit idle until it is revoked</div>
    <div class="field-items">
      <div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> amount of seconds this reservation will sit idle until it is revoked </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_accounting_allocated"><code>v0_0_39_accounting_allocated</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_assoc_default"><code>v0_0_39_assoc_default</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_assoc_max"><code>v0_0_39_assoc_max</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_assoc_max_jobs">v0_0_39_assoc_max_jobs</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_assoc_max_jobs"><code>v0_0_39_assoc_max_jobs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_assoc_max_jobs_per">v0_0_39_assoc_max_jobs_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_assoc_max_jobs_per"><code>v0_0_39_assoc_max_jobs_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">wall_clock (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_assoc_min"><code>v0_0_39_assoc_min</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">priority_threshold (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_cluster_rec_associations"><code>v0_0_39_cluster_rec_associations</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">root (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_assoc_short">v0.0.39_assoc_short</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_cluster_rec_controller"><code>v0_0_39_cluster_rec_controller</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_cron_entry_line"><code>v0_0_39_cron_entry_line</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">end (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_array"><code>v0_0_39_job_array</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_array_response_msg_inner"><code>v0_0_39_job_array_response_msg_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>ArrayJob</div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> JobId format: int32</div>
<div class="param">error_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> numeric error code format: int32</div>
<div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> error code description </div>
<div class="param">why (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> error message </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_comment"><code>v0_0_39_job_comment</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">system (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_exit_code_signal"><code>v0_0_39_job_exit_code_signal</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>Job exited due to signal</div>
    <div class="field-items">
      <div class="param">signal_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> signal numeric ID format: int32</div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> signal name </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_het"><code>v0_0_39_job_het</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">job_offset (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_info_power"><code>v0_0_39_job_info_power</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
        <div class="param-enum-header">Enum:</div>
        
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_mcs"><code>v0_0_39_job_mcs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_required"><code>v0_0_39_job_required</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_reservation"><code>v0_0_39_job_reservation</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_state"><code>v0_0_39_job_state</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_time"><code>v0_0_39_job_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_job_time_user">v0_0_39_job_time_user</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_time_user"><code>v0_0_39_job_time_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_job_tres"><code>v0_0_39_job_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">requested (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_tres">array[v0.0.39_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_partition_info_accounts"><code>v0_0_39_partition_info_accounts</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">deny (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_partition_info_defaults"><code>v0_0_39_partition_info_defaults</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_partition_info_groups"><code>v0_0_39_partition_info_groups</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">allowed (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_partition_info_maximums"><code>v0_0_39_partition_info_maximums</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">over_time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_partition_info_minimums"><code>v0_0_39_partition_info_minimums</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_partition_info_nodes"><code>v0_0_39_partition_info_nodes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_partition_info_priority"><code>v0_0_39_partition_info_priority</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">tier (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_partition_info_qos"><code>v0_0_39_partition_info_qos</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">assigned (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_partition_info_timeouts"><code>v0_0_39_partition_info_timeouts</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">suspend (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint16_no_val">v0.0.39_uint16_no_val</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_partition_info_tres"><code>v0_0_39_partition_info_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">configured (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_qos_limits"><code>v0_0_39_qos_limits</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_qos_limits_min">v0_0_39_qos_limits_min</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_qos_limits_min"><code>v0_0_39_qos_limits_min</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_qos_limits_min_tres">v0_0_39_qos_limits_min_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_qos_limits_min_tres"><code>v0_0_39_qos_limits_min_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_qos_limits_min_tres_per">v0_0_39_qos_limits_min_tres_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_qos_limits_min_tres_per"><code>v0_0_39_qos_limits_min_tres_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_tres">array[v0.0.39_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_qos_preempt"><code>v0_0_39_qos_preempt</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">exempt_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_reservation_info_purge_completed"><code>v0_0_39_reservation_info_purge_completed</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_uint32_no_val">v0.0.39_uint32_no_val</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_rollup_stats_inner"><code>v0_0_39_rollup_stats_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>recorded rollup statistics</div>
    <div class="field-items">
      <div class="param">type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> type </div>
        <div class="param-enum-header">Enum:</div>
        <div class="param-enum">internal</div><div class="param-enum">user</div><div class="param-enum">unknown</div>
<div class="param">last run (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Last time rollup ran (UNIX timestamp) format: int32</div>
<div class="param">max_cycle (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> longest rollup time (seconds) format: int64</div>
<div class="param">total_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> total time spent doing rollups (seconds) format: int64</div>
<div class="param">total_cycles (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> number of rollups since last_run format: int64</div>
<div class="param">mean_cycles (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> average time for rollup (seconds) format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_stats_msg_rpcs_by_type_inner"><code>v0_0_39_stats_msg_rpcs_by_type_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>RPC</div>
    <div class="field-items">
      <div class="param">message_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Message type as string </div>
<div class="param">type_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Message type as integer format: int32</div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Number of RPCs received format: int64</div>
<div class="param">average_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Average time spent processing RPC in seconds format: int64</div>
<div class="param">total_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent processing RPC in seconds format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_stats_msg_rpcs_by_user_inner"><code>v0_0_39_stats_msg_rpcs_by_user_inner</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'>user</div>
    <div class="field-items">
      <div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> user name </div>
<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> user id (numeric) format: int32</div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Number of RPCs received format: int64</div>
<div class="param">average_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Average time spent processing RPC in seconds format: int64</div>
<div class="param">total_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent processing RPC in seconds format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_stats_rpc_time"><code>v0_0_39_stats_rpc_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_step_CPU"><code>v0_0_39_step_CPU</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">governor (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_step_nodes"><code>v0_0_39_step_nodes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_step_statistics"><code>v0_0_39_step_statistics</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_step_statistics_energy">v0_0_39_step_statistics_energy</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_step_statistics_energy"><code>v0_0_39_step_statistics_energy</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">consumed (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_step_task"><code>v0_0_39_step_task</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">distribution (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_step_tasks"><code>v0_0_39_step_tasks</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_step_time"><code>v0_0_39_step_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_39_step_time_user">v0_0_39_step_time_user</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_step_time_user"><code>v0_0_39_step_time_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_step_tres"><code>v0_0_39_step_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.39_tres">array[v0.0.39_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_39_user_default"><code>v0_0_39_user_default</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
      <div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
<!--#include virtual="footer.txt"-->
